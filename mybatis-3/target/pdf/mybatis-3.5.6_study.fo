<?xml version="1.0" encoding="UTF-8"?>
<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format"><fo:layout-master-set>
<fo:simple-page-master master-name="cover-page" page-width="8.27in" page-height="11.70in" margin-top="0.625in" margin-bottom="0.6in" margin-left="1in" margin-right="1in">
<fo:region-body margin-top="0.7in" /></fo:simple-page-master>

<fo:simple-page-master master-name="toc" page-width="8.27in" page-height="11.70in" margin-top="0.625in" margin-bottom="0.6in" margin-left="1in" margin-right="1in">
<fo:region-body margin-top="0.7in" margin-bottom="0.8in" />
<fo:region-before extent="0.35in" />
<fo:region-after extent="0.125in" /></fo:simple-page-master>

<fo:simple-page-master master-name="body" page-width="8.27in" page-height="11.70in" margin-top="0.625in" margin-bottom="0.6in" margin-left="1in" margin-right="1in">
<fo:region-body margin-top="0.7in" margin-bottom="0.8in" />
<fo:region-before extent="0.35in" />
<fo:region-after extent="0.125in" /></fo:simple-page-master>
</fo:layout-master-set>
<fo:bookmark-tree>
<fo:bookmark internal-destination="./toc"><fo:bookmark-title>Table of Contents</fo:bookmark-title></fo:bookmark>
<fo:bookmark internal-destination="./index"><fo:bookmark-title>Introduction</fo:bookmark-title></fo:bookmark>
<fo:bookmark internal-destination="./getting-started"><fo:bookmark-title>Getting Started</fo:bookmark-title></fo:bookmark>
<fo:bookmark internal-destination="./configuration"><fo:bookmark-title>Configuration XML</fo:bookmark-title></fo:bookmark>
<fo:bookmark internal-destination="./sqlmap-xml"><fo:bookmark-title>Mapper XML Files</fo:bookmark-title></fo:bookmark>
<fo:bookmark internal-destination="./dynamic-sql"><fo:bookmark-title>Dynamic SQL</fo:bookmark-title></fo:bookmark>
<fo:bookmark internal-destination="./java-api"><fo:bookmark-title>Java API</fo:bookmark-title></fo:bookmark>
<fo:bookmark internal-destination="./statement-builders"><fo:bookmark-title>Statement Builders</fo:bookmark-title></fo:bookmark>
<fo:bookmark internal-destination="./logging"><fo:bookmark-title>Logging</fo:bookmark-title></fo:bookmark></fo:bookmark-tree>
<fo:page-sequence master-reference="cover-page">
<fo:flow flow-name="xsl-region-body">
<fo:block text-align="center"><fo:table table-layout="fixed" width="100%" >

<fo:table-column column-width="3.125in" />
<fo:table-column column-width="3.125in" /><fo:table-body>
<fo:table-row height="1.5in"><fo:table-cell><fo:block /></fo:table-cell><fo:table-cell><fo:block text-align="right" vertical-align="top"><fo:external-graphic height="88" width="350" content-height="scale-down-to-fit" content-width="3.125in" src="http://mybatis.github.io/images/mybatis-logo.png"/>
</fo:block><fo:block /></fo:table-cell></fo:table-row><fo:table-row keep-with-previous="always" height="0.014in">

<fo:table-cell number-columns-spanned="2">
<fo:block line-height="0.014in">
<fo:leader leader-length.optimum="100%" leader-pattern="dots" rule-thickness="1pt" color="#454545" /></fo:block></fo:table-cell></fo:table-row>
<fo:table-row height="7.447in">
<fo:table-cell number-columns-spanned="2"><fo:table table-layout="fixed" width="100%" >

<fo:table-column column-width="2.083in" />
<fo:table-column column-width="2.083in" />
<fo:table-column column-width="2.083in" /><fo:table-body><fo:table-row>
<fo:table-cell number-columns-spanned="3"><fo:block />
<fo:block space-before="3.2235in" /></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell>
<fo:block space-after="0.5in" /></fo:table-cell>
<fo:table-cell padding-start="0.2in" border-left-style="dotted" border-left-width="0.1pt" border-left-color="#000000" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false" number-columns-spanned="2">
<fo:block font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always" font-size="16pt" font-weight="bold" text-align="left" display-align="center" space-after="0.5in">mybatis</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block /></fo:table-cell>
<fo:table-cell padding-after="0.2in" border-bottom-style="dotted" border-bottom-width="0.1pt" border-bottom-color="#000000" padding-start="0.2in" border-left-style="dotted" border-left-width="0.1pt" border-left-color="#000000" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false" number-columns-spanned="2">
<fo:block font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always" font-size="12pt" font-weight="bold" text-align="left" display-align="center">v. 3.5.6_study</fo:block>
<fo:block font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always" font-size="12pt" font-weight="bold" text-align="left" display-align="center">User Guide</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:table-cell></fo:table-row>
<fo:table-row height="0.014in">
<fo:table-cell number-columns-spanned="2"><fo:block space-after="0.2in" line-height="0.014in">

<fo:leader leader-length.optimum="100%" leader-pattern="dots" rule-thickness="1pt" color="#454545" /></fo:block></fo:table-cell></fo:table-row><fo:table-row>
<fo:table-cell number-columns-spanned="2"><fo:block />
<fo:block space-before="0.2in" /></fo:table-cell></fo:table-row>
<fo:table-row height="0.3in"><fo:table-cell><fo:block font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always" font-size="12pt" font-weight="bold" text-align="left" display-align="center" height="0.3in">MyBatis.org</fo:block></fo:table-cell><fo:table-cell><fo:block font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always" font-size="12pt" font-weight="bold" text-align="right" display-align="center" height="0.3in">2023-02-11</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:flow></fo:page-sequence><fo:page-sequence master-reference="toc" initial-page-number="1" format="i">

<fo:static-content flow-name="xsl-region-before"><fo:table table-layout="fixed" width="100%" >

<fo:table-column column-width="5.625in" />
<fo:table-column column-width="0.625in" />
<fo:table-body>
<fo:table-row>
<fo:table-cell>
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545" text-align="left">Table of Contents</fo:block></fo:table-cell>
<fo:table-cell>
<fo:block font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number /></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:static-content>
<fo:static-content flow-name="xsl-region-after">
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545">&#169;2023, MyBatis.org &#8226; ALL RIGHTS RESERVED.</fo:block></fo:static-content>
<fo:flow flow-name="xsl-region-body">
<fo:block id="./toc">
<fo:block>
<fo:list-block>
<fo:list-item><fo:list-item-label end-indent="6.375in" start-indent="-1in">

<fo:block font-size="9.5pt" line-height="10pt" text-align="right" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always"></fo:block></fo:list-item-label><fo:list-item-body end-indent="1in" start-indent="0in">

<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">Table of Contents</fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block>
<fo:block space-after.optimum="0em">
<fo:leader leader-length.optimum="100%" leader-pattern="dots" rule-thickness="1pt" color="#454545" /></fo:block><fo:table table-layout="fixed" width="100%" >

<fo:table-column column-width="0.45in" />
<fo:table-column column-width="0.4in" />
<fo:table-column column-width="0.4in" />
<fo:table-column column-width="5in" /><fo:table-body>
<fo:table-row keep-with-next="auto">
<fo:table-cell display-align="after">
<fo:block font-size="9.5pt" text-align="end" color="#A9A9A9" line-height="16pt" end-indent="6pt"></fo:block></fo:table-cell>
<fo:table-cell display-align="after" number-columns-spanned="3"><fo:block font-size="12pt" font-weight="bold" space-before="18pt" font-family="Helvetica,sans-serif" line-height="16pt" text-align-last="justify" wrap-option="no-wrap">
<fo:basic-link internal-destination="./toc">Table of Contents</fo:basic-link>
<fo:leader leader-pattern="dots" leader-pattern-width="5pt" color="#454545" />
<fo:inline font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number-citation ref-id="./toc" /></fo:inline></fo:block></fo:table-cell></fo:table-row>
<fo:table-row keep-with-next="auto">
<fo:table-cell display-align="after">
<fo:block font-size="9.5pt" text-align="end" color="#A9A9A9" line-height="16pt" end-indent="6pt">1.</fo:block></fo:table-cell>
<fo:table-cell display-align="after" number-columns-spanned="3"><fo:block font-size="12pt" font-weight="bold" space-before="18pt" font-family="Helvetica,sans-serif" line-height="16pt" text-align-last="justify" wrap-option="no-wrap">
<fo:basic-link internal-destination="./index">Introduction</fo:basic-link>
<fo:leader leader-pattern="dots" leader-pattern-width="5pt" color="#454545" />
<fo:inline font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number-citation ref-id="./index" /></fo:inline></fo:block></fo:table-cell></fo:table-row>
<fo:table-row keep-with-next="auto">
<fo:table-cell display-align="after">
<fo:block font-size="9.5pt" text-align="end" color="#A9A9A9" line-height="16pt" end-indent="6pt">2.</fo:block></fo:table-cell>
<fo:table-cell display-align="after" number-columns-spanned="3"><fo:block font-size="12pt" font-weight="bold" space-before="18pt" font-family="Helvetica,sans-serif" line-height="16pt" text-align-last="justify" wrap-option="no-wrap">
<fo:basic-link internal-destination="./getting-started">Getting Started</fo:basic-link>
<fo:leader leader-pattern="dots" leader-pattern-width="5pt" color="#454545" />
<fo:inline font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number-citation ref-id="./getting-started" /></fo:inline></fo:block></fo:table-cell></fo:table-row>
<fo:table-row keep-with-next="auto">
<fo:table-cell display-align="after">
<fo:block font-size="9.5pt" text-align="end" color="#A9A9A9" line-height="16pt" end-indent="6pt">3.</fo:block></fo:table-cell>
<fo:table-cell display-align="after" number-columns-spanned="3"><fo:block font-size="12pt" font-weight="bold" space-before="18pt" font-family="Helvetica,sans-serif" line-height="16pt" text-align-last="justify" wrap-option="no-wrap">
<fo:basic-link internal-destination="./configuration">Configuration XML</fo:basic-link>
<fo:leader leader-pattern="dots" leader-pattern-width="5pt" color="#454545" />
<fo:inline font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number-citation ref-id="./configuration" /></fo:inline></fo:block></fo:table-cell></fo:table-row>
<fo:table-row keep-with-next="auto">
<fo:table-cell display-align="after">
<fo:block font-size="9.5pt" text-align="end" color="#A9A9A9" line-height="16pt" end-indent="6pt">4.</fo:block></fo:table-cell>
<fo:table-cell display-align="after" number-columns-spanned="3"><fo:block font-size="12pt" font-weight="bold" space-before="18pt" font-family="Helvetica,sans-serif" line-height="16pt" text-align-last="justify" wrap-option="no-wrap">
<fo:basic-link internal-destination="./sqlmap-xml">Mapper XML Files</fo:basic-link>
<fo:leader leader-pattern="dots" leader-pattern-width="5pt" color="#454545" />
<fo:inline font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number-citation ref-id="./sqlmap-xml" /></fo:inline></fo:block></fo:table-cell></fo:table-row>
<fo:table-row keep-with-next="auto">
<fo:table-cell display-align="after">
<fo:block font-size="9.5pt" text-align="end" color="#A9A9A9" line-height="16pt" end-indent="6pt">5.</fo:block></fo:table-cell>
<fo:table-cell display-align="after" number-columns-spanned="3"><fo:block font-size="12pt" font-weight="bold" space-before="18pt" font-family="Helvetica,sans-serif" line-height="16pt" text-align-last="justify" wrap-option="no-wrap">
<fo:basic-link internal-destination="./dynamic-sql">Dynamic SQL</fo:basic-link>
<fo:leader leader-pattern="dots" leader-pattern-width="5pt" color="#454545" />
<fo:inline font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number-citation ref-id="./dynamic-sql" /></fo:inline></fo:block></fo:table-cell></fo:table-row>
<fo:table-row keep-with-next="auto">
<fo:table-cell display-align="after">
<fo:block font-size="9.5pt" text-align="end" color="#A9A9A9" line-height="16pt" end-indent="6pt">6.</fo:block></fo:table-cell>
<fo:table-cell display-align="after" number-columns-spanned="3"><fo:block font-size="12pt" font-weight="bold" space-before="18pt" font-family="Helvetica,sans-serif" line-height="16pt" text-align-last="justify" wrap-option="no-wrap">
<fo:basic-link internal-destination="./java-api">Java API</fo:basic-link>
<fo:leader leader-pattern="dots" leader-pattern-width="5pt" color="#454545" />
<fo:inline font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number-citation ref-id="./java-api" /></fo:inline></fo:block></fo:table-cell></fo:table-row>
<fo:table-row keep-with-next="auto">
<fo:table-cell display-align="after">
<fo:block font-size="9.5pt" text-align="end" color="#A9A9A9" line-height="16pt" end-indent="6pt">7.</fo:block></fo:table-cell>
<fo:table-cell display-align="after" number-columns-spanned="3"><fo:block font-size="12pt" font-weight="bold" space-before="18pt" font-family="Helvetica,sans-serif" line-height="16pt" text-align-last="justify" wrap-option="no-wrap">
<fo:basic-link internal-destination="./statement-builders">Statement Builders</fo:basic-link>
<fo:leader leader-pattern="dots" leader-pattern-width="5pt" color="#454545" />
<fo:inline font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number-citation ref-id="./statement-builders" /></fo:inline></fo:block></fo:table-cell></fo:table-row>
<fo:table-row keep-with-next="auto">
<fo:table-cell display-align="after">
<fo:block font-size="9.5pt" text-align="end" color="#A9A9A9" line-height="16pt" end-indent="6pt">8.</fo:block></fo:table-cell>
<fo:table-cell display-align="after" number-columns-spanned="3"><fo:block font-size="12pt" font-weight="bold" space-before="18pt" font-family="Helvetica,sans-serif" line-height="16pt" text-align-last="justify" wrap-option="no-wrap">
<fo:basic-link internal-destination="./logging">Logging</fo:basic-link>
<fo:leader leader-pattern="dots" leader-pattern-width="5pt" color="#454545" />
<fo:inline font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number-citation ref-id="./logging" /></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:flow></fo:page-sequence><!--

       Copyright 2009-2019 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->

  
<fo:page-sequence initial-page-number="0" master-reference="body">

<fo:static-content flow-name="xsl-region-before"><fo:table table-layout="fixed" width="100%" >

<fo:table-column column-width="5.625in" />
<fo:table-column column-width="0.625in" />
<fo:table-body>
<fo:table-row>
<fo:table-cell>
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545" text-align="left">1   Introduction</fo:block></fo:table-cell>
<fo:table-cell>
<fo:block font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number /></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:static-content>
<fo:static-content flow-name="xsl-region-after">
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545">&#169;2023, MyBatis.org &#8226; ALL RIGHTS RESERVED.</fo:block></fo:static-content><fo:flow flow-name="xsl-region-body">

<fo:block id="./index">
<fo:list-block>
<fo:list-item><fo:list-item-label end-indent="6.375in" start-indent="-1in">

<fo:block font-size="9.5pt" line-height="10pt" text-align="right" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">
<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">1</fo:block></fo:block></fo:list-item-label><fo:list-item-body end-indent="1in" start-indent="0in">

<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">Introduction</fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block>
<fo:block space-after.optimum="0em">
<fo:leader leader-length.optimum="100%" leader-pattern="dots" rule-thickness="1pt" color="#454545" /></fo:block>
<fo:block>
    

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="12pt" font-weight="bold" space-before="18pt" space-after="6pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">1.1   Introduction</fo:block>

      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">1.1.1   What is MyBatis?</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          MyBatis is a first class persistence framework with support for
          custom SQL,
          stored procedures and advanced mappings. MyBatis
          eliminates almost
          all of the JDBC code and manual setting of
          parameters and retrieval
          of results. MyBatis can use simple XML or
          Annotations for
          configuration and map primitives, Map interfaces and
          Java POJOs
          (Plain Old Java Objects) to database records.
        </fo:block>

      </fo:block>


      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">1.1.2   Help make this documentation better…</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          If you find this documentation lacking in any way, or missing
          documentation for a feature, then the best thing to do is learn
          about it and then write the documentation yourself!
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Sources of this manual are available in xdoc format at
          
<fo:basic-link external-destination="https://github.com/mybatis/mybatis-3/tree/master/src/site">
<fo:inline color="green">project's Git </fo:inline></fo:basic-link>
          Fork the repository, update them and send a pull request.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          You’re the best author of this documentation, people like you have
          to read it!
        </fo:block>

      </fo:block>


      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">1.1.3   Translations</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Users can read about MyBatis in following translations:</fo:block>

        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:basic-link internal-destination="./getting-started">
<fo:inline color="blue">English</fo:inline></fo:basic-link></fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:basic-link internal-destination="./es/index">
<fo:inline color="blue">Español</fo:inline></fo:basic-link></fo:block>
</fo:list-item-body>
</fo:list-item>

<!--      <li class="fr"><a href="./fr/index.html">Français</a></li> -->
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:basic-link internal-destination="./ja/index">
<fo:inline color="blue">日本語</fo:inline></fo:basic-link></fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:basic-link internal-destination="./ko/index">
<fo:inline color="blue">한국어</fo:inline></fo:basic-link></fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:basic-link internal-destination="./zh/index">
<fo:inline color="blue">简体中文</fo:inline></fo:basic-link></fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Do you want to read about MyBatis in your own native language? File an issue providing patches with your
        mother tongue documentation!</fo:block>

      </fo:block>

    </fo:block>

  
</fo:block></fo:flow></fo:page-sequence>

<!--

       Copyright 2009-2019 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->

  
<fo:page-sequence initial-page-number="auto" master-reference="body">

<fo:static-content flow-name="xsl-region-before"><fo:table table-layout="fixed" width="100%" >

<fo:table-column column-width="5.625in" />
<fo:table-column column-width="0.625in" />
<fo:table-body>
<fo:table-row>
<fo:table-cell>
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545" text-align="left">2   Getting Started</fo:block></fo:table-cell>
<fo:table-cell>
<fo:block font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number /></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:static-content>
<fo:static-content flow-name="xsl-region-after">
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545">&#169;2023, MyBatis.org &#8226; ALL RIGHTS RESERVED.</fo:block></fo:static-content><fo:flow flow-name="xsl-region-body">

<fo:block id="./getting-started">
<fo:list-block>
<fo:list-item><fo:list-item-label end-indent="6.375in" start-indent="-1in">

<fo:block font-size="9.5pt" line-height="10pt" text-align="right" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">
<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">2</fo:block></fo:block></fo:list-item-label><fo:list-item-body end-indent="1in" start-indent="0in">

<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">Getting Started</fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block>
<fo:block space-after.optimum="0em">
<fo:leader leader-length.optimum="100%" leader-pattern="dots" rule-thickness="1pt" color="#454545" /></fo:block>
<fo:block>
    

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="12pt" font-weight="bold" space-before="18pt" space-after="6pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">2.1   Getting started</fo:block>


    

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">2.1.1   Installation</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        To use MyBatis you just need to include the
          
<fo:basic-link external-destination="https://github.com/mybatis/mybatis-3/releases">
<fo:inline color="green">mybatis-x.x.x.jar</fo:inline></fo:basic-link>
        file in the classpath.
      </fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        If you are using Maven just add the following dependency to your pom.xml:
      </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
&lt;dependency&gt;
<fo:block/>
&#160;&#160;&lt;groupId&gt;org.mybatis&lt;/groupId&gt;
<fo:block/>
&#160;&#160;&lt;artifactId&gt;mybatis&lt;/artifactId&gt;
<fo:block/>
&#160;&#160;&lt;version&gt;x.x.x&lt;/version&gt;
<fo:block/>
&lt;/dependency&gt;</fo:block>

    </fo:block>


    

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">2.1.2   Building SqlSessionFactory from XML</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        Every MyBatis application centers around an instance of
        SqlSessionFactory. A SqlSessionFactory instance can be acquired by
        using the SqlSessionFactoryBuilder. SqlSessionFactoryBuilder can
        build a SqlSessionFactory instance from an XML configuration file,
        or from a custom prepared instance of the Configuration class.
      </fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        Building a SqlSessionFactory instance from an XML file is very
        simple. It is recommended that you use a classpath resource for
        this configuration, but you could use any InputStream instance,
        including one created from a literal file path or a file:// URL.
        MyBatis includes a utility class, called Resources, that contains
        a number of methods that make it simpler to load resources from
        the classpath and other locations.
      </fo:block>

      
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
String&#160;resource&#160;=&#160;"org/mybatis/example/mybatis-config.xml";
<fo:block/>
InputStream&#160;inputStream&#160;=&#160;Resources.getResourceAsStream(resource);
<fo:block/>
SqlSessionFactory&#160;sqlSessionFactory&#160;=
<fo:block/>
&#160;&#160;new&#160;SqlSessionFactoryBuilder().build(inputStream);</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        The configuration XML file contains settings for the core of the
        MyBatis system, including a DataSource for acquiring database
        Connection instances, as well as a TransactionManager for
        determining how transactions should be scoped and controlled. The
        full details of the XML configuration file can be found later in
        this document, but here is a simple example:
      </fo:block>

      
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;?xml&#160;version="1.0"&#160;encoding="UTF-8"&#160;?&gt;
<fo:block/>
&lt;!DOCTYPE&#160;configuration
<fo:block/>
&#160;&#160;PUBLIC&#160;"-//mybatis.org//DTD&#160;Config&#160;3.0//EN"
<fo:block/>
&#160;&#160;"http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;
<fo:block/>
&lt;configuration&gt;
<fo:block/>
&#160;&#160;&lt;environments&#160;default="development"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;environment&#160;id="development"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;transactionManager&#160;type="JDBC"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;dataSource&#160;type="POOLED"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;property&#160;name="driver"&#160;value="${driver}"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;property&#160;name="url"&#160;value="${url}"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;property&#160;name="username"&#160;value="${username}"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;property&#160;name="password"&#160;value="${password}"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;/dataSource&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/environment&gt;
<fo:block/>
&#160;&#160;&lt;/environments&gt;
<fo:block/>
&#160;&#160;&lt;mappers&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;mapper&#160;resource="org/mybatis/example/BlogMapper.xml"/&gt;
<fo:block/>
&#160;&#160;&lt;/mappers&gt;
<fo:block/>
&lt;/configuration&gt;</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        While there is a lot more to the XML configuration file, the
        above example points out the most critical parts. Notice the
        XML header, required to validate the XML document. The body
        of the environment element contains the environment
        configuration for transaction management and connection
        pooling. The mappers element contains a list of mappers –
        the XML files and/or annotated Java interface classes that
        contain the SQL code and mapping definitions.
      </fo:block>

    </fo:block>

    

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">2.1.3   Building SqlSessionFactory without XML</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        If you prefer to directly build the configuration from Java, rather
        than XML, or create your own configuration builder, MyBatis provides
        a complete Configuration class that provides all of the same
        configuration options as the XML file.
      </fo:block>

      
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">DataSource&#160;dataSource&#160;=&#160;BlogDataSourceFactory.getBlogDataSource();
<fo:block/>
TransactionFactory&#160;transactionFactory&#160;=
<fo:block/>
&#160;&#160;new&#160;JdbcTransactionFactory();
<fo:block/>
Environment&#160;environment&#160;=
<fo:block/>
&#160;&#160;new&#160;Environment("development",&#160;transactionFactory,&#160;dataSource);
<fo:block/>
Configuration&#160;configuration&#160;=&#160;new&#160;Configuration(environment);
<fo:block/>
configuration.addMapper(BlogMapper.class);
<fo:block/>
SqlSessionFactory&#160;sqlSessionFactory&#160;=
<fo:block/>
&#160;&#160;new&#160;SqlSessionFactoryBuilder().build(configuration);</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        Notice in this case the configuration is adding a mapper class.
        Mapper classes are Java classes that
        contain SQL Mapping Annotations
        that avoid the need for XML. However, due
        to some limitations of
        Java Annotations and the complexity of some MyBatis mappings, XML
        mapping is still required for the
        most advanced mappings (e.g.
        Nested Join Mapping). For this reason,
        MyBatis will automatically
        look
        for and load a peer XML file if it exists (in this case,
        BlogMapper.xml would be loaded based on the
        classpath and name of
        BlogMapper.class). More on this later.
      </fo:block>

    </fo:block>

    

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">2.1.4   Acquiring a SqlSession from SqlSessionFactory</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        Now that you have a SqlSessionFactory, as the name suggests, you
        can acquire an instance of
        SqlSession. The SqlSession contains absolutely every method needed to execute
        SQL commands against
        the database. You can execute mapped SQL statements directly against
        the SqlSession instance. For
        example:
      </fo:block>

      
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">try&#160;(SqlSession&#160;session&#160;=&#160;sqlSessionFactory.openSession())&#160;{
<fo:block/>
&#160;&#160;Blog&#160;blog&#160;=&#160;session.selectOne(
<fo:block/>
&#160;&#160;&#160;&#160;"org.mybatis.example.BlogMapper.selectBlog",&#160;101);
<fo:block/>
}</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        While this approach works, and is familiar to users of previous
        versions of MyBatis, there is now a
        cleaner approach. Using an interface (e.g. BlogMapper.class) that properly
        describes the parameter and
        return value for a given statement, you can now execute cleaner and more
        type safe code, without error
        prone string literals and casting.
      </fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        For example:
      </fo:block>

      
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">try&#160;(SqlSession&#160;session&#160;=&#160;sqlSessionFactory.openSession())&#160;{
<fo:block/>
&#160;&#160;BlogMapper&#160;mapper&#160;=&#160;session.getMapper(BlogMapper.class);
<fo:block/>
&#160;&#160;Blog&#160;blog&#160;=&#160;mapper.selectBlog(101);
<fo:block/>
}</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        Now let's explore what exactly is being executed here.
      </fo:block>

    </fo:block>

    

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">2.1.5   Exploring Mapped SQL Statements</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        At this point you may be wondering what exactly is being executed by
        the SqlSession or Mapper class. The topic of Mapped SQL Statements
        is a big one, and that topic will likely dominate the majority of
        this documentation. But to give you an idea of what exactly is being
        run, here are a couple of examples.
      </fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        In either of the examples above, the statements could have been
        defined by either XML or Annotations. Let's take a look at XML
        first. The full set of features provided by MyBatis can be realized
        by using the XML based mapping language that has made MyBatis
        popular over the years. If you've used MyBatis before, the concept
        will be familiar to you, but there have been numerous improvements
        to the XML mapping documents that will become clear later. Here is
        an example of an XML based mapped statement that would satisfy the
        above SqlSession calls.
      </fo:block>

      
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;?xml&#160;version="1.0"&#160;encoding="UTF-8"&#160;?&gt;
<fo:block/>
&lt;!DOCTYPE&#160;mapper
<fo:block/>
&#160;&#160;PUBLIC&#160;"-//mybatis.org//DTD&#160;Mapper&#160;3.0//EN"
<fo:block/>
&#160;&#160;"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;
<fo:block/>
&lt;mapper&#160;namespace="org.mybatis.example.BlogMapper"&gt;
<fo:block/>
&#160;&#160;&lt;select&#160;id="selectBlog"&#160;resultType="Blog"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;select&#160;*&#160;from&#160;Blog&#160;where&#160;id&#160;=&#160;#{id}
<fo:block/>
&#160;&#160;&lt;/select&gt;
<fo:block/>
&lt;/mapper&gt;</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        While this looks like a lot of overhead for this simple example, it is
        actually very light. You can define as many mapped statements in a
        single mapper XML file as you like, so you get a lot of mileage out
        of the XML header and doctype declaration. The rest of the file is
        pretty self explanatory. It defines a name for the mapped statement
        “selectBlog”, in the namespace “org.mybatis.example.BlogMapper”,
        which would allow you to call it by specifying the fully qualified
        name of “org.mybatis.example.BlogMapper.selectBlog”, as we did above
        in the following example:
      </fo:block>

      
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">Blog&#160;blog&#160;=&#160;session.selectOne(
<fo:block/>
&#160;&#160;"org.mybatis.example.BlogMapper.selectBlog",&#160;101);</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        Notice how similar this is to calling a method on a fully qualified Java
        class, and there's a reason for that. This name can be directly
        mapped to a Mapper class of the same name as the namespace, with a
        method that matches the name, parameter, and return type as the
        mapped select statement. This allows you to very simply call the
        method against the Mapper interface as you saw above, but here it is
        again in the following example:
      </fo:block>

      
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">BlogMapper&#160;mapper&#160;=&#160;session.getMapper(BlogMapper.class);
<fo:block/>
Blog&#160;blog&#160;=&#160;mapper.selectBlog(101);</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        The second approach has a lot of advantages. First, it doesn't depend
        on a string literal, so it's much safer. Second, if your IDE has
        code completion, you can leverage that when navigating your mapped
        SQL statements.
      </fo:block>

      

<fo:block>
<fo:leader leader-length.optimum="100%" leader-pattern="rule" rule-thickness="0.5pt" color="black" /></fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        NOTE
        
<fo:inline font-weight="bold">A note about namespaces.</fo:inline>
      </fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        
<fo:inline font-weight="bold">Namespaces</fo:inline>
        were optional in previous versions of MyBatis, which was confusing
        and unhelpful. Namespaces are now required and have a purpose beyond
        simply isolating statements with longer, fully-qualified names.
      </fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        Namespaces enable the interface bindings as you see here, and even if you
        don’t think you’ll use them today, you should follow these practices
        laid out here in case you change your mind. Using the namespace
        once, and putting it in a proper Java package namespace will clean
        up your code and improve the usability of MyBatis in the long term.
      </fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        
<fo:inline font-weight="bold">Name Resolution:</fo:inline> To reduce the amount of typing, MyBatis uses the
        following name resolution rules for all named configuration
        elements, including statements, result maps, caches, etc.
      </fo:block>

      

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>Fully qualified names (e.g.
          “com.mypackage.MyMapper.selectAllThings”) are looked up directly
          and used if found.
        </fo:block>
</fo:list-item-body>
</fo:list-item>

        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>Short names (e.g. “selectAllThings”) can be used to reference
          any unambiguous entry. However if there are two or more (e.g.
          “com.foo.selectAllThings and com.bar.selectAllThings”), then you
          will receive an error reporting that the short name is ambiguous
          and therefore must be fully qualified.
        </fo:block>
</fo:list-item-body>
</fo:list-item>

      </fo:list-block>

      

<fo:block>
<fo:leader leader-length.optimum="100%" leader-pattern="rule" rule-thickness="0.5pt" color="black" /></fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        There's one more trick to Mapper classes like BlogMapper. Their mapped
        statements don't need to be mapped with XML at all. Instead they can
        use Java Annotations. For example, the XML above could be eliminated
        and replaced with:
      </fo:block>

      
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">package&#160;org.mybatis.example;
<fo:block/>
public&#160;interface&#160;BlogMapper&#160;{
<fo:block/>
&#160;&#160;@Select("SELECT&#160;*&#160;FROM&#160;blog&#160;WHERE&#160;id&#160;=&#160;#{id}")
<fo:block/>
&#160;&#160;Blog&#160;selectBlog(int&#160;id);
<fo:block/>
}</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        The annotations are a lot cleaner for simple statements, however, Java
        Annotations are both limited and messier for more complicated
        statements. Therefore, if you have to do anything complicated,
        you're better off with XML mapped statements.
      </fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        It will be up to you and your project team to determine which is right
        for you, and how important it is to you that your mapped statements
        be defined in a consistent way. That said, you're never locked into
        a single approach. You can very easily migrate Annotation based
        Mapped Statements to XML and vice versa.
      </fo:block>

    </fo:block>

    

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">2.1.6   Scope and Lifecycle</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        It's very important to understand the various scopes and lifecycles
        classes we've discussed so far. Using them incorrectly can cause
        severe concurrency problems.
      </fo:block>


      

<fo:block>
<fo:leader leader-length.optimum="100%" leader-pattern="rule" rule-thickness="0.5pt" color="black" /></fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">NOTE
        
<fo:inline font-weight="bold">Object lifecycle and Dependency Injection Frameworks</fo:inline>
      </fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        Dependency Injection frameworks can create thread safe, transactional SqlSessions and mappers
        and inject them directly into your beans so you can just forget about their lifecycle.
        You may want to have a look at MyBatis-Spring or
        MyBatis-Guice sub-projects to know more about using MyBatis with DI frameworks.
      </fo:block>

      

<fo:block>
<fo:leader leader-length.optimum="100%" leader-pattern="rule" rule-thickness="0.5pt" color="black" /></fo:block>


      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">2.1.6.1   SqlSessionFactoryBuilder</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          This class can be instantiated, used and thrown away. There is no need
          to keep it around once you've created your SqlSessionFactory.
          Therefore the best scope for instances of SqlSessionFactoryBuilder
          is method scope (i.e. a local method variable). You can reuse the
          SqlSessionFactoryBuilder to build multiple SqlSessionFactory
          instances, but it's still best not to keep it around to ensure that
          all of the XML parsing resources are freed up for more important
          things.
        </fo:block>

      </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">2.1.6.2   SqlSessionFactory</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Once created, the SqlSessionFactory should exist for the duration of
          your application execution. There should be little or no reason to
          ever dispose of it or recreate it. It's a best practice to not
          rebuild the SqlSessionFactory multiple times in an application run.
          Doing so should be considered a “bad smell”. Therefore the best
          scope of SqlSessionFactory is application scope. This can be
          achieved a number of ways. The simplest is to use a Singleton
          pattern or Static Singleton pattern.
        </fo:block>

      </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">2.1.6.3   SqlSession</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Each thread should have its own instance of SqlSession. Instances of
          SqlSession are not to be shared and are not thread safe. Therefore
          the best scope is request or method scope. Never keep references to
          a SqlSession instance in a static field or even an instance field
          of a class. Never keep references to a SqlSession in any sort of
          managed scope, such as HttpSession of the Servlet framework. If
          you're using a web framework of any sort, consider the SqlSession
          to follow a similar scope to that of an HTTP request. In other
          words, upon receiving an HTTP request, you can open a SqlSession,
          then upon returning the response, you can close it. Closing the
          session is very important. You should always ensure that it's
          closed within a finally block. The following is the standard
          pattern for ensuring that SqlSessions are closed:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">try&#160;(SqlSession&#160;session&#160;=&#160;sqlSessionFactory.openSession())&#160;{
<fo:block/>
&#160;&#160;//&#160;do&#160;work
<fo:block/>
}</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Using this pattern consistently throughout your code will ensure that
          all database resources are properly closed.
        </fo:block>

      </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">2.1.6.4   Mapper Instances</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Mappers are interfaces that you create to bind to your mapped statements.
          Instances of the mapper interfaces are acquired from the
          SqlSession. As such, technically the broadest scope of any mapper
          instance is the same as the SqlSession from which they were
          requested. However, the best scope for mapper instances is method
          scope. That is, they should be requested within the method that
          they are used, and then be discarded. They do not need to be closed
          explicitly. While it's not a problem to keep them around throughout
          a request, similar to the SqlSession, you might find that managing
          too many resources at this level will quickly get out of hand. Keep
          it simple, keep Mappers in the method scope. The following example
          demonstrates this practice.
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">try&#160;(SqlSession&#160;session&#160;=&#160;sqlSessionFactory.openSession())&#160;{
<fo:block/>
&#160;&#160;BlogMapper&#160;mapper&#160;=&#160;session.getMapper(BlogMapper.class);
<fo:block/>
&#160;&#160;//&#160;do&#160;work
<fo:block/>
}
<fo:block/>
</fo:block>


      </fo:block>
</fo:block>

    </fo:block>

  
</fo:block></fo:flow></fo:page-sequence>
<!--

       Copyright 2009-2020 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->

  
<fo:page-sequence initial-page-number="auto" master-reference="body">

<fo:static-content flow-name="xsl-region-before"><fo:table table-layout="fixed" width="100%" >

<fo:table-column column-width="5.625in" />
<fo:table-column column-width="0.625in" />
<fo:table-body>
<fo:table-row>
<fo:table-cell>
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545" text-align="left">3   Configuration XML</fo:block></fo:table-cell>
<fo:table-cell>
<fo:block font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number /></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:static-content>
<fo:static-content flow-name="xsl-region-after">
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545">&#169;2023, MyBatis.org &#8226; ALL RIGHTS RESERVED.</fo:block></fo:static-content><fo:flow flow-name="xsl-region-body">

<fo:block id="./configuration">
<fo:list-block>
<fo:list-item><fo:list-item-label end-indent="6.375in" start-indent="-1in">

<fo:block font-size="9.5pt" line-height="10pt" text-align="right" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">
<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">3</fo:block></fo:block></fo:list-item-label><fo:list-item-body end-indent="1in" start-indent="0in">

<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">Configuration XML</fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block>
<fo:block space-after.optimum="0em">
<fo:leader leader-length.optimum="100%" leader-pattern="dots" rule-thickness="1pt" color="#454545" /></fo:block>
<fo:block>
    

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="12pt" font-weight="bold" space-before="18pt" space-after="6pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">3.1   Configuration</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        The MyBatis configuration contains settings and
        properties
        that have a dramatic effect on how MyBatis behaves. The
        high level
        structure of the document is as follows:
      </fo:block>


      

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          configuration
          

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:basic-link internal-destination="./configuration#properties">
<fo:inline color="blue">properties</fo:inline></fo:basic-link></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:basic-link internal-destination="./configuration#settings">
<fo:inline color="blue">settings</fo:inline></fo:basic-link></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:basic-link internal-destination="./configuration#typeAliases">
<fo:inline color="blue">typeAliases</fo:inline></fo:basic-link></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:basic-link internal-destination="./configuration#typeHandlers">
<fo:inline color="blue">typeHandlers</fo:inline></fo:basic-link></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:basic-link internal-destination="./configuration#objectFactory">
<fo:inline color="blue">objectFactory</fo:inline></fo:basic-link></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:basic-link internal-destination="./configuration#plugins">
<fo:inline color="blue">plugins</fo:inline></fo:basic-link></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:basic-link internal-destination="./configuration#environments">
<fo:inline color="blue">environments</fo:inline></fo:basic-link>
              

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                  environment
                  

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                    
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>transactionManager</fo:block>
</fo:list-item-body>
</fo:list-item>

                    
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>dataSource</fo:block>
</fo:list-item-body>
</fo:list-item>

                  </fo:list-block>

                </fo:block>
</fo:list-item-body>
</fo:list-item>

              </fo:list-block>

            </fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:basic-link internal-destination="./configuration#databaseIdProvider">
<fo:inline color="blue">databaseIdProvider</fo:inline></fo:basic-link></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:basic-link internal-destination="./configuration#mappers">
<fo:inline color="blue">mappers</fo:inline></fo:basic-link></fo:block>
</fo:list-item-body>
</fo:list-item>

          </fo:list-block>

        </fo:block>
</fo:list-item-body>
</fo:list-item>

      </fo:list-block>

      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">3.1.1   properties</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          These are externalizable, substitutable properties that can be
          configured in a typical Java Properties file instance, or passed in
          through sub-elements of the properties element. For example:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;properties&#160;resource="org/mybatis/example/config.properties"&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="username"&#160;value="dev_user"/&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="password"&#160;value="F2Fa3!33TYyg"/&gt;
<fo:block/>
&lt;/properties&gt;</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The properties can then be used throughout the configuration
          files
          to substitute values that need to be dynamically configured.
          For
          example:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;dataSource&#160;type="POOLED"&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="driver"&#160;value="${driver}"/&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="url"&#160;value="${url}"/&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="username"&#160;value="${username}"/&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="password"&#160;value="${password}"/&gt;
<fo:block/>
&lt;/dataSource&gt;</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The username and password in this example will be replaced by the
          values set in the properties elements. The driver and url
          properties
          would be replaced with values contained from the
          config.properties
          file. This provides a lot of options for
          configuration.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Properties can also be passed into the SqlSessionFactoryBuilder.build()
          methods. For
          example:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">SqlSessionFactory&#160;factory&#160;=
<fo:block/>
&#160;&#160;sqlSessionFactoryBuilder.build(reader,&#160;props);
<fo:block/>

<fo:block/>
//&#160;...&#160;or&#160;...
<fo:block/>

<fo:block/>
SqlSessionFactory&#160;factory&#160;=
<fo:block/>
&#160;&#160;new&#160;SqlSessionFactoryBuilder.build(reader,&#160;environment,&#160;props);
<fo:block/>
</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          If a property exists in more than one of these places, MyBatis
          loads
          them in the following order:
        </fo:block>

        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>Properties specified in the body of the properties element are
            read first,
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>Properties loaded from the classpath resource or url attributes
            of the properties element are read second, and override any
            duplicate properties already specified,
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>Properties passed as a method parameter are read last, and
            override any duplicate properties that may have been loaded from
            the properties body and the resource/url attributes.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Thus, the highest priority properties are those passed in as a
          method
          parameter, followed by resource/url attributes and finally
          the
          properties specified in the body of the properties element.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Since the MyBatis 3.4.2, your can specify a default value into placeholder as follow:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
&lt;dataSource&#160;type="POOLED"&gt;
<fo:block/>
&#160;&#160;&lt;!--&#160;...&#160;--&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="username"&#160;value="${username:ut_user}"/&gt;&#160;&lt;!--&#160;If&#160;'username'&#160;property&#160;not&#160;present,&#160;username&#160;become&#160;'ut_user'&#160;--&gt;
<fo:block/>
&lt;/dataSource&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          This feature is disabled by default. If you specify a default value into placeholder,
          you should be enable this feature by adding a special property as follow:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
&lt;properties&#160;resource="org/mybatis/example/config.properties"&gt;
<fo:block/>
&#160;&#160;&lt;!--&#160;...&#160;--&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="org.apache.ibatis.parsing.PropertyParser.enable-default-value"&#160;value="true"/&gt;&#160;&lt;!--&#160;Enable&#160;this&#160;feature&#160;--&gt;
<fo:block/>
&lt;/properties&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          NOTE This will conflict with the 
<fo:inline font-family="monospace" font-size="10pt">":"</fo:inline> character in property keys (e.g. 
<fo:inline font-family="monospace" font-size="10pt">db:username</fo:inline>)
          or the ternary operator of OGNL expressions (e.g. 
<fo:inline font-family="monospace" font-size="10pt">${tableName != null ? tableName : 'global_constants'}</fo:inline>) on a SQL definition.
          If you use either and want default property values, you must change the default value separator by adding this special property:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
&lt;properties&#160;resource="org/mybatis/example/config.properties"&gt;
<fo:block/>
&#160;&#160;&lt;!--&#160;...&#160;--&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="org.apache.ibatis.parsing.PropertyParser.default-value-separator"&#160;value="?:"/&gt;&#160;&lt;!--&#160;Change&#160;default&#160;value&#160;of&#160;separator&#160;--&gt;
<fo:block/>
&lt;/properties&gt;</fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
&lt;dataSource&#160;type="POOLED"&gt;
<fo:block/>
&#160;&#160;&lt;!--&#160;...&#160;--&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="username"&#160;value="${db:username?:ut_user}"/&gt;
<fo:block/>
&lt;/dataSource&gt;</fo:block>


      </fo:block>

      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">3.1.2   settings</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          These are extremely important tweaks that modify the way that
          MyBatis
          behaves at runtime. The following table describes the
          settings,
          their meanings and their default values.
        </fo:block>


        

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Setting</fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Description</fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Valid Values</fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Default</fo:block>
</fo:table-cell>

            </fo:table-row>

          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                cacheEnabled
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Globally enables or disables any
                caches configured in any
                mapper under this configuration.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true | false
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                lazyLoadingEnabled
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Globally enables or disables lazy loading. When enabled, all relations will be lazily loaded.
                This value can be superseded for a specific relation by using the 
<fo:inline font-family="monospace" font-size="10pt">fetchType</fo:inline> attribute on it.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true | false
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                false
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                aggressiveLazyLoading
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                When enabled, any method call will load all the lazy properties of the object. Otherwise, each property is loaded on demand (see also 
<fo:inline font-family="monospace" font-size="10pt">lazyLoadTriggerMethods</fo:inline>).
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true | false
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                false (true in <fo:inline font-family="Symbol">≤</fo:inline>3.4.1)
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                multipleResultSetsEnabled
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Allows or disallows multiple
                ResultSets to be returned from a
                single statement (compatible
                driver required).
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true | false
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                useColumnLabel
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Uses the column label instead of
                the column name. Different
                drivers behave differently in this
                respect. Refer to the driver
                documentation, or test out both
                modes to determine how your
                driver
                behaves.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true | false
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                useGeneratedKeys
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Allows JDBC support for generated
                keys. A compatible driver is
                required. This setting forces
                generated keys to be used if set to
                true, as some drivers deny
                compatibility but still work (e.g.
                Derby).
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true | false
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                False
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                autoMappingBehavior
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Specifies if and how MyBatis
                should automatically map columns
                to fields/properties.
                NONE disables auto-mapping.
                PARTIAL will only auto-map results
                with no nested result mappings defined inside.
                FULL will auto-map result mappings of any
                complexity (containing nested or otherwise).
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                NONE, PARTIAL, FULL
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                PARTIAL
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                autoMappingUnknownColumnBehavior
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Specify the behavior when detects an unknown column (or unknown property type) of automatic mapping target.
                

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">NONE</fo:inline>: Do nothing</fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">WARNING</fo:inline>: Output warning log (The log level of 
<fo:inline font-family="monospace" font-size="10pt">'org.apache.ibatis.session.AutoMappingUnknownColumnBehavior'</fo:inline> must be set to 
<fo:inline font-family="monospace" font-size="10pt">WARN</fo:inline>)</fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">FAILING</fo:inline>: Fail mapping (Throw 
<fo:inline font-family="monospace" font-size="10pt">SqlSessionException</fo:inline>)</fo:block>
</fo:list-item-body>
</fo:list-item>

                </fo:list-block>

              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                NONE, WARNING, FAILING
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                NONE
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                defaultExecutorType
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Configures the default executor.
                SIMPLE executor does nothing
                special. REUSE executor reuses
                prepared statements. BATCH
                executor
                reuses statements and
                batches updates.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                SIMPLE
                REUSE
                BATCH
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                SIMPLE
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                defaultStatementTimeout
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Sets the number of seconds
                the driver will wait
                for a response from the database.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Any positive integer
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Not Set (null)
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                defaultFetchSize
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Sets the driver a hint as to control fetching size for return results.
                This parameter value can be override by a query setting.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Any positive integer
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Not Set (null)
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                defaultResultSetType
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Specifies a scroll strategy when omit it per statement settings. (Since: 3.5.2)
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                FORWARD_ONLY | SCROLL_SENSITIVE | SCROLL_INSENSITIVE | DEFAULT(same behavior with 'Not Set')
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Not Set (null)
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                safeRowBoundsEnabled
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Allows using RowBounds on nested
                statements. If allow, set the false.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true | false
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                False
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                safeResultHandlerEnabled
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Allows using ResultHandler on nested statements.
                If allow, set the false.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true | false
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                True
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                mapUnderscoreToCamelCase
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Enables automatic mapping from
                classic database column names
                A_COLUMN to camel case classic Java
                property names aColumn.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true | false
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                False
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                localCacheScope
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                MyBatis uses local cache to prevent circular references and speed up repeated nested queries.
                By default (SESSION) all queries executed during a session are cached. If localCacheScope=STATEMENT local session will be used just for
                statement execution, no data will be shared between two different calls to the same SqlSession.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                SESSION | STATEMENT
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                SESSION
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                jdbcTypeForNull
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Specifies the JDBC type for null values when no specific JDBC type was provided for the parameter.
                Some drivers require specifying the column JDBC type but others work with generic values like NULL, VARCHAR or OTHER.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                JdbcType enumeration. Most common are: NULL, VARCHAR and OTHER
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                OTHER
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                lazyLoadTriggerMethods
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Specifies which Object's methods trigger a lazy load
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                A method name list separated by commas
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                equals,clone,hashCode,toString
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                defaultScriptingLanguage
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Specifies the language used by default for dynamic SQL generation.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                A type alias or fully qualified class name.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                org.apache.ibatis.scripting.xmltags.XMLLanguageDriver
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                defaultEnumTypeHandler
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Specifies the 
<fo:inline font-family="monospace" font-size="10pt">TypeHandler</fo:inline> used by default for Enum. (Since: 3.4.5)
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                A type alias or fully qualified class name.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                org.apache.ibatis.type.EnumTypeHandler
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                callSettersOnNulls
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Specifies if setters or map's put method will be called when a retrieved value is null. It is useful when you rely on Map.keySet() or null value initialization. Note primitives such as (int,boolean,etc.) will not be set to null.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true | false
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                false
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                returnInstanceForEmptyRow
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                MyBatis, by default, returns 
<fo:inline font-family="monospace" font-size="10pt">null</fo:inline> when all the columns of a returned row are NULL.
                When this setting is enabled, MyBatis returns an empty instance instead.
                Note that it is also applied to nested results (i.e. collectioin and association). Since: 3.4.2
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true | false
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                false
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                logPrefix
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Specifies the prefix string that MyBatis will add to the logger names.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Any String
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Not set
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                logImpl
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Specifies which logging implementation MyBatis should use. If this setting is not present logging implementation will be autodiscovered.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Not set
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                proxyFactory
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Specifies the proxy tool that MyBatis will use for creating lazy loading capable objects.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                CGLIB | JAVASSIST
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                JAVASSIST (MyBatis 3.3 or above)
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                vfsImpl
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Specifies VFS implementations
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Fully qualified class names of custom VFS implementation separated by commas.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Not set
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                useActualParamName
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Allow referencing statement parameters by their actual names declared in the method signature.
                To use this feature, your project must be compiled in Java 8 with 
<fo:inline font-family="monospace" font-size="10pt">-parameters</fo:inline> option. (Since: 3.4.1)
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true | false
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                configurationFactory
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Specifies the class that provides an instance of 
<fo:inline font-family="monospace" font-size="10pt">Configuration</fo:inline>.
                The returned Configuration instance is used to load lazy properties of deserialized objects.
                This class must have a method with a signature 
<fo:inline font-family="monospace" font-size="10pt">static Configuration getConfiguration()</fo:inline>. (Since: 3.2.3)
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                A type alias or fully qualified class name.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Not set
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                shrinkWhitespacesInSql
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Removes extra whitespace characters from the SQL. Note that this also affects literal strings in SQL. (Since 3.5.5)
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                true | false
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                false
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                defaultSqlProviderType
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Specifies an sql provider class that holds provider method (Since 3.5.6).
                This class apply to the 
<fo:inline font-family="monospace" font-size="10pt">type</fo:inline>(or 
<fo:inline font-family="monospace" font-size="10pt">value</fo:inline>) attribute on sql provider annotation(e.g. 
<fo:inline font-family="monospace" font-size="10pt">@SelectProvider</fo:inline>),
                when these attribute was omitted.
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                A type alias or fully qualified class name
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Not set
              </fo:block>
</fo:table-cell>

            </fo:table-row>

          
        </fo:table-body>
</fo:table>
</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          An example of the settings element fully configured is as follows:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;settings&gt;
<fo:block/>
&#160;&#160;&lt;setting&#160;name="cacheEnabled"&#160;value="true"/&gt;
<fo:block/>
&#160;&#160;&lt;setting&#160;name="lazyLoadingEnabled"&#160;value="true"/&gt;
<fo:block/>
&#160;&#160;&lt;setting&#160;name="multipleResultSetsEnabled"&#160;value="true"/&gt;
<fo:block/>
&#160;&#160;&lt;setting&#160;name="useColumnLabel"&#160;value="true"/&gt;
<fo:block/>
&#160;&#160;&lt;setting&#160;name="useGeneratedKeys"&#160;value="false"/&gt;
<fo:block/>
&#160;&#160;&lt;setting&#160;name="autoMappingBehavior"&#160;value="PARTIAL"/&gt;
<fo:block/>
&#160;&#160;&lt;setting&#160;name="autoMappingUnknownColumnBehavior"&#160;value="WARNING"/&gt;
<fo:block/>
&#160;&#160;&lt;setting&#160;name="defaultExecutorType"&#160;value="SIMPLE"/&gt;
<fo:block/>
&#160;&#160;&lt;setting&#160;name="defaultStatementTimeout"&#160;value="25"/&gt;
<fo:block/>
&#160;&#160;&lt;setting&#160;name="defaultFetchSize"&#160;value="100"/&gt;
<fo:block/>
&#160;&#160;&lt;setting&#160;name="safeRowBoundsEnabled"&#160;value="false"/&gt;
<fo:block/>
&#160;&#160;&lt;setting&#160;name="mapUnderscoreToCamelCase"&#160;value="false"/&gt;
<fo:block/>
&#160;&#160;&lt;setting&#160;name="localCacheScope"&#160;value="SESSION"/&gt;
<fo:block/>
&#160;&#160;&lt;setting&#160;name="jdbcTypeForNull"&#160;value="OTHER"/&gt;
<fo:block/>
&#160;&#160;&lt;setting&#160;name="lazyLoadTriggerMethods"
<fo:block/>
&#160;&#160;&#160;&#160;value="equals,clone,hashCode,toString"/&gt;
<fo:block/>
&lt;/settings&gt;</fo:block>


      </fo:block>

      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">3.1.3   typeAliases</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          A type alias is simply a shorter name for a Java type. It's only
          relevant to the XML configuration and simply exists to reduce
          redundant typing of fully qualified classnames. For example:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;typeAliases&gt;
<fo:block/>
&#160;&#160;&lt;typeAlias&#160;alias="Author"&#160;type="domain.blog.Author"/&gt;
<fo:block/>
&#160;&#160;&lt;typeAlias&#160;alias="Blog"&#160;type="domain.blog.Blog"/&gt;
<fo:block/>
&#160;&#160;&lt;typeAlias&#160;alias="Comment"&#160;type="domain.blog.Comment"/&gt;
<fo:block/>
&#160;&#160;&lt;typeAlias&#160;alias="Post"&#160;type="domain.blog.Post"/&gt;
<fo:block/>
&#160;&#160;&lt;typeAlias&#160;alias="Section"&#160;type="domain.blog.Section"/&gt;
<fo:block/>
&#160;&#160;&lt;typeAlias&#160;alias="Tag"&#160;type="domain.blog.Tag"/&gt;
<fo:block/>
&lt;/typeAliases&gt;
<fo:block/>
</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          With this configuration,
          
<fo:inline font-family="monospace" font-size="10pt">Blog</fo:inline>
          can now be used anywhere that
          
<fo:inline font-family="monospace" font-size="10pt">domain.blog.Blog</fo:inline>
          could be.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif"> You can also specify a package where MyBatis will search for
          beans. For example:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;typeAliases&gt;
<fo:block/>
&#160;&#160;&lt;package&#160;name="domain.blog"/&gt;
<fo:block/>
&lt;/typeAliases&gt;
<fo:block/>
</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Each bean found in
          
<fo:inline font-family="monospace" font-size="10pt">domain.blog</fo:inline>
          , if no annotation is found,
          will be registered as an alias
          using
          uncapitalized non-qualified class name of the bean. That is
          
<fo:inline font-family="monospace" font-size="10pt">domain.blog.Author</fo:inline>
          will be registered as
          
<fo:inline font-family="monospace" font-size="10pt">author</fo:inline>. If the
          
<fo:inline font-family="monospace" font-size="10pt">@Alias</fo:inline>
          annotation is found its value will
          be used as an alias. See the example below:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">@Alias("author")
<fo:block/>
public&#160;class&#160;Author&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;...
<fo:block/>
}
<fo:block/>
</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          There are many built-in type aliases for common Java types. They
          are all
          case insensitive, note the special handling of primitives
          due
          to the overloaded names.
        </fo:block>

        

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Alias
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Mapped Type
              </fo:block>
</fo:table-cell>

            </fo:table-row>

          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                _byte
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                byte
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                _long
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                long
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                _short
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                short
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                _int
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                int
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                _integer
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                int
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                _double
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                double
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                _float
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                float
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                _boolean
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                boolean
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                string
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                String
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                byte
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Byte
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                long
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Long
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                short
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Short
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                int
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Integer
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                integer
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Integer
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                double
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Double
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                float
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Float
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                boolean
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Boolean
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                date
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Date
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                decimal
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                BigDecimal
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                bigdecimal
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                BigDecimal
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                object
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Object
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                map
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Map
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                hashmap
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                HashMap
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                list
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                List
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                arraylist
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                ArrayList
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                collection
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Collection
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                iterator
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Iterator
              </fo:block>
</fo:table-cell>

            </fo:table-row>

          
        </fo:table-body>
</fo:table>
</fo:block>

      </fo:block>

      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">3.1.4   typeHandlers</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Whenever MyBatis sets a parameter on a PreparedStatement or
          retrieves a
          value from a ResultSet, a TypeHandler is used to retrieve
          the value
          in a means appropriate to the Java type. The following
          table
          describes the default TypeHandlers.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          NOTE
          Since version 3.4.5, MyBatis supports JSR-310 (Date and Time API) by default.
        </fo:block>

        

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Type Handler
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Java Types
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                JDBC Types
              </fo:block>
</fo:table-cell>

            </fo:table-row>

          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">BooleanTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.lang.Boolean</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">boolean</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Any compatible 
<fo:inline font-family="monospace" font-size="10pt">BOOLEAN</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">ByteTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.lang.Byte</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">byte</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Any compatible 
<fo:inline font-family="monospace" font-size="10pt">NUMERIC</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">BYTE</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">ShortTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.lang.Short</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">short</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Any compatible 
<fo:inline font-family="monospace" font-size="10pt">NUMERIC</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">SMALLINT</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">IntegerTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.lang.Integer</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">int</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Any compatible 
<fo:inline font-family="monospace" font-size="10pt">NUMERIC</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">INTEGER</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">LongTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.lang.Long</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">long</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Any compatible 
<fo:inline font-family="monospace" font-size="10pt">NUMERIC</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">BIGINT</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">FloatTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.lang.Float</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">float</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Any compatible 
<fo:inline font-family="monospace" font-size="10pt">NUMERIC</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">FLOAT</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">DoubleTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.lang.Double</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">double</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Any compatible 
<fo:inline font-family="monospace" font-size="10pt">NUMERIC</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">DOUBLE</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">BigDecimalTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.math.BigDecimal</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Any compatible 
<fo:inline font-family="monospace" font-size="10pt">NUMERIC</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">DECIMAL</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">StringTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.lang.String</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">CHAR</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">VARCHAR</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">ClobReaderTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.io.Reader</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                -
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">ClobTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.lang.String</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">CLOB</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">LONGVARCHAR</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">NStringTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.lang.String</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">NVARCHAR</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">NCHAR</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">NClobTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.lang.String</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">NCLOB</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">BlobInputStreamTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.io.InputStream</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                -
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">ByteArrayTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">byte[]</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Any compatible byte stream type
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">BlobTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">byte[]</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">BLOB</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">LONGVARBINARY</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">DateTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.util.Date</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">TIMESTAMP</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">DateOnlyTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.util.Date</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">DATE</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">TimeOnlyTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.util.Date</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">TIME</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">SqlTimestampTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.sql.Timestamp</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">TIMESTAMP</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">SqlDateTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.sql.Date</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">DATE</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">SqlTimeTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.sql.Time</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">TIME</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">ObjectTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Any
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">OTHER</fo:inline>, or unspecified
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">EnumTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Enumeration Type
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">VARCHAR</fo:inline> any string compatible type, as the code is stored (not  index).
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">EnumOrdinalTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Enumeration Type
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Any compatible 
<fo:inline font-family="monospace" font-size="10pt">NUMERIC</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">DOUBLE</fo:inline>, as the position is stored
                (not the code itself).
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">SqlxmlTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.lang.String</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">SQLXML</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">InstantTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.time.Instant</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">TIMESTAMP</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">LocalDateTimeTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.time.LocalDateTime</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">TIMESTAMP</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">LocalDateTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.time.LocalDate</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">DATE</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">LocalTimeTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.time.LocalTime</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">TIME</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">OffsetDateTimeTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.time.OffsetDateTime</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">TIMESTAMP</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">OffsetTimeTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.time.OffsetTime</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">TIME</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">ZonedDateTimeTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.time.ZonedDateTime</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">TIMESTAMP</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">YearTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.time.Year</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">INTEGER</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">MonthTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.time.Month</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">INTEGER</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">YearMonthTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.time.YearMonth</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">VARCHAR</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">LONGVARCHAR</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">JapaneseDateTypeHandler</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">java.time.chrono.JapaneseDate</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">DATE</fo:inline>
              </fo:block>
</fo:table-cell>

            </fo:table-row>

          
        </fo:table-body>
</fo:table>
</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          You can override the type handlers or create your own to deal with
          unsupported or non-standard types. To do so, implement the interface 
<fo:inline font-family="monospace" font-size="10pt">org.apache.ibatis.type.TypeHandler</fo:inline>
          or extend the convenience class 
<fo:inline font-family="monospace" font-size="10pt">org.apache.ibatis.type.BaseTypeHandler</fo:inline>
          and optionally map it to a JDBC type. For example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">//&#160;ExampleTypeHandler.java
<fo:block/>
@MappedJdbcTypes(JdbcType.VARCHAR)
<fo:block/>
public&#160;class&#160;ExampleTypeHandler&#160;extends&#160;BaseTypeHandler&lt;String&gt;&#160;{
<fo:block/>

<fo:block/>
&#160;&#160;@Override
<fo:block/>
&#160;&#160;public&#160;void&#160;setNonNullParameter(PreparedStatement&#160;ps,&#160;int&#160;i,
<fo:block/>
&#160;&#160;&#160;&#160;String&#160;parameter,&#160;JdbcType&#160;jdbcType)&#160;throws&#160;SQLException&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;ps.setString(i,&#160;parameter);
<fo:block/>
&#160;&#160;}
<fo:block/>

<fo:block/>
&#160;&#160;@Override
<fo:block/>
&#160;&#160;public&#160;String&#160;getNullableResult(ResultSet&#160;rs,&#160;String&#160;columnName)
<fo:block/>
&#160;&#160;&#160;&#160;throws&#160;SQLException&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;return&#160;rs.getString(columnName);
<fo:block/>
&#160;&#160;}
<fo:block/>

<fo:block/>
&#160;&#160;@Override
<fo:block/>
&#160;&#160;public&#160;String&#160;getNullableResult(ResultSet&#160;rs,&#160;int&#160;columnIndex)
<fo:block/>
&#160;&#160;&#160;&#160;throws&#160;SQLException&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;return&#160;rs.getString(columnIndex);
<fo:block/>
&#160;&#160;}
<fo:block/>

<fo:block/>
&#160;&#160;@Override
<fo:block/>
&#160;&#160;public&#160;String&#160;getNullableResult(CallableStatement&#160;cs,&#160;int&#160;columnIndex)
<fo:block/>
&#160;&#160;&#160;&#160;throws&#160;SQLException&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;return&#160;cs.getString(columnIndex);
<fo:block/>
&#160;&#160;}
<fo:block/>
}
<fo:block/>
</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;!--&#160;mybatis-config.xml&#160;--&gt;
<fo:block/>
&lt;typeHandlers&gt;
<fo:block/>
&#160;&#160;&lt;typeHandler&#160;handler="org.mybatis.example.ExampleTypeHandler"/&gt;
<fo:block/>
&lt;/typeHandlers&gt;
<fo:block/>
</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Using such a TypeHandler would override the existing type handler
          for Java String properties and VARCHAR parameters and results. Note
          that MyBatis does not introspect upon the database metadata to
          determine the type, so you must specify that it’s a VARCHAR field
          in the parameter and result mappings to hook in the correct type
          handler. This is due to the fact that MyBatis is unaware of the
          data type until the statement is executed.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          MyBatis will know the Java type that you want to handle with
          this TypeHandler by introspecting its generic type, but
          you can override this behavior by two means:
        </fo:block>

        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>Adding a 
<fo:inline font-family="monospace" font-size="10pt">javaType</fo:inline> attribute to the typeHandler element (for example: 
<fo:inline font-family="monospace" font-size="10pt">javaType="String"</fo:inline>)
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>Adding a 
<fo:inline font-family="monospace" font-size="10pt">@MappedTypes</fo:inline> annotation to your TypeHandler class specifying
          the list of java types to associate it with. This annotation will be ignored if
          the 
<fo:inline font-family="monospace" font-size="10pt">javaType</fo:inline> attribute as also been specified.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The associated JDBC type can be specified by two means:</fo:block>

        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
           Adding a 
<fo:inline font-family="monospace" font-size="10pt">jdbcType</fo:inline> attribute to the typeHandler element (for example: 
<fo:inline font-family="monospace" font-size="10pt">jdbcType="VARCHAR"</fo:inline>).
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>Adding a 
<fo:inline font-family="monospace" font-size="10pt">@MappedJdbcTypes</fo:inline> annotation to your TypeHandler class specifying
          the list of JDBC types to associate it with. This annotation will be ignored if
          the 
<fo:inline font-family="monospace" font-size="10pt">jdbcType</fo:inline> attribute as also been specified.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          When deciding which TypeHandler to use in a 
<fo:inline font-family="monospace" font-size="10pt">ResultMap</fo:inline>, the Java type is known
          (from the result type), but the JDBC type is unknown. MyBatis therefore uses the combination
          
<fo:inline font-family="monospace" font-size="10pt">javaType=[TheJavaType], jdbcType=null</fo:inline> to choose a TypeHandler. This means that
          using a 
<fo:inline font-family="monospace" font-size="10pt">@MappedJdbcTypes</fo:inline> annotation 
<fo:inline font-style="italic">restricts</fo:inline> the scope of a TypeHandler
          and makes it unavailable for use in 
<fo:inline font-family="monospace" font-size="10pt">ResultMap</fo:inline>s unless explicity set. To make a
          TypeHandler available for use in a 
<fo:inline font-family="monospace" font-size="10pt">ResultMap</fo:inline>, set 
<fo:inline font-family="monospace" font-size="10pt">includeNullJdbcType=true</fo:inline>
          on the 
<fo:inline font-family="monospace" font-size="10pt">@MappedJdbcTypes</fo:inline> annotation. Since Mybatis 3.4.0 however, if a 
<fo:inline font-weight="bold">single</fo:inline>
          TypeHandler is registered to handle a Java type, it will be used by default in 
<fo:inline font-family="monospace" font-size="10pt">ResultMap</fo:inline>s
          using this Java type (i.e. even without 
<fo:inline font-family="monospace" font-size="10pt">includeNullJdbcType=true</fo:inline>).
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">And finally you can let MyBatis search for your TypeHandlers:</fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;!--&#160;mybatis-config.xml&#160;--&gt;
<fo:block/>
&lt;typeHandlers&gt;
<fo:block/>
&#160;&#160;&lt;package&#160;name="org.mybatis.example"/&gt;
<fo:block/>
&lt;/typeHandlers&gt;
<fo:block/>
</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Note that when using the autodiscovery feature JDBC types can only be
          specified with annotations.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          You can create a generic TypeHandler that is able to handle more than one class. For that purpose
          add a constructor that receives the class as a parameter and MyBatis will pass the actual class when
          constructing the TypeHandler.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">//GenericTypeHandler.java
<fo:block/>
public&#160;class&#160;GenericTypeHandler&lt;E&#160;extends&#160;MyObject&gt;&#160;extends&#160;BaseTypeHandler&lt;E&gt;&#160;{
<fo:block/>

<fo:block/>
&#160;&#160;private&#160;Class&lt;E&gt;&#160;type;
<fo:block/>

<fo:block/>
&#160;&#160;public&#160;GenericTypeHandler(Class&lt;E&gt;&#160;type)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;if&#160;(type&#160;==&#160;null)&#160;throw&#160;new&#160;IllegalArgumentException("Type&#160;argument&#160;cannot&#160;be&#160;null");
<fo:block/>
&#160;&#160;&#160;&#160;this.type&#160;=&#160;type;
<fo:block/>
&#160;&#160;}
<fo:block/>
&#160;&#160;...
<fo:block/>
</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
<fo:inline font-family="monospace" font-size="10pt">EnumTypeHandler</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">EnumOrdinalTypeHandler</fo:inline> are generic TypeHandlers. We will learn
        about them in the following section.
        </fo:block>


      </fo:block>


      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">3.1.5   Handling Enums</fo:block>

          
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
            If you want to map an 
<fo:inline font-family="monospace" font-size="10pt">Enum</fo:inline>, you'll need to use either
            
<fo:inline font-family="monospace" font-size="10pt">EnumTypeHandler</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">EnumOrdinalTypeHandler</fo:inline>.
          </fo:block>


          
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">For example, let's say that we need to store the rounding mode that
          should be used with some number if it needs to be rounded. By default, MyBatis
          uses 
<fo:inline font-family="monospace" font-size="10pt">EnumTypeHandler</fo:inline> to convert the 
<fo:inline font-family="monospace" font-size="10pt">Enum</fo:inline>
          values to their names.
          </fo:block>


          
<fo:inline font-weight="bold">Note 
<fo:inline font-family="monospace" font-size="10pt">EnumTypeHandler</fo:inline> is special in the sense that unlike other handlers,
          it does not handle just one specific class, but any class that extends 
<fo:inline font-family="monospace" font-size="10pt">Enum</fo:inline></fo:inline>

          
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">However, we may not want to store names. Our DBA may insist on an
          integer code instead. That's just as easy: add 
<fo:inline font-family="monospace" font-size="10pt">EnumOrdinalTypeHandler</fo:inline>
          to the 
<fo:inline font-family="monospace" font-size="10pt">typeHandlers</fo:inline> in your config file, and now each
          
<fo:inline font-family="monospace" font-size="10pt">RoundingMode</fo:inline> will be mapped to an integer using its ordinal value.
          </fo:block>

       
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;!--&#160;mybatis-config.xml&#160;--&gt;
<fo:block/>
&lt;typeHandlers&gt;
<fo:block/>
&#160;&#160;&lt;typeHandler&#160;handler="org.apache.ibatis.type.EnumOrdinalTypeHandler"
<fo:block/>
&#160;&#160;&#160;&#160;javaType="java.math.RoundingMode"/&gt;
<fo:block/>
&lt;/typeHandlers&gt;
<fo:block/>
</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          But what if you want to map the same 
<fo:inline font-family="monospace" font-size="10pt">Enum</fo:inline> to a
          string in one place and to integer in another?
        </fo:block>

          
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
            The auto-mapper will automatically use 
<fo:inline font-family="monospace" font-size="10pt">EnumOrdinalTypeHandler</fo:inline>,
            so if we want to go back to using plain old ordinary
            
<fo:inline font-family="monospace" font-size="10pt">EnumTypeHandler</fo:inline>, we have to tell it, by explicitly setting
            the type handler to use for those SQL statements.
          </fo:block>

          
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
            (Mapper files aren't covered until the next section, so if this is your first
            time reading through the documentation, you may want to skip this for now
            and come back to it later.)
          </fo:block>

          
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;!DOCTYPE&#160;mapper
<fo:block/>
&#160;&#160;&#160;&#160;PUBLIC&#160;"-//mybatis.org//DTD&#160;Mapper&#160;3.0//EN"
<fo:block/>
&#160;&#160;&#160;&#160;"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;
<fo:block/>

<fo:block/>
&lt;mapper&#160;namespace="org.apache.ibatis.submitted.rounding.Mapper"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;resultMap&#160;type="org.apache.ibatis.submitted.rounding.User"&#160;id="usermap"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;id&#160;column="id"&#160;property="id"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;result&#160;column="name"&#160;property="name"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;result&#160;column="funkyNumber"&#160;property="funkyNumber"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;result&#160;column="roundingMode"&#160;property="roundingMode"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/resultMap&gt;
<fo:block/>

<fo:block/>
&#160;&#160;&#160;&#160;&lt;select&#160;id="getUser"&#160;resultMap="usermap"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;select&#160;*&#160;from&#160;users
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/select&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;insert&#160;id="insert"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;insert&#160;into&#160;users&#160;(id,&#160;name,&#160;funkyNumber,&#160;roundingMode)&#160;values&#160;(
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#{id},&#160;#{name},&#160;#{funkyNumber},&#160;#{roundingMode}
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;)
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/insert&gt;
<fo:block/>

<fo:block/>
&#160;&#160;&#160;&#160;&lt;resultMap&#160;type="org.apache.ibatis.submitted.rounding.User"&#160;id="usermap2"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;id&#160;column="id"&#160;property="id"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;result&#160;column="name"&#160;property="name"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;result&#160;column="funkyNumber"&#160;property="funkyNumber"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;result&#160;column="roundingMode"&#160;property="roundingMode"
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;typeHandler="org.apache.ibatis.type.EnumTypeHandler"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/resultMap&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;select&#160;id="getUser2"&#160;resultMap="usermap2"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;select&#160;*&#160;from&#160;users2
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/select&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;insert&#160;id="insert2"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;insert&#160;into&#160;users2&#160;(id,&#160;name,&#160;funkyNumber,&#160;roundingMode)&#160;values&#160;(
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#{id},&#160;#{name},&#160;#{funkyNumber},&#160;#{roundingMode,&#160;typeHandler=org.apache.ibatis.type.EnumTypeHandler}
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;)
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/insert&gt;
<fo:block/>

<fo:block/>
&lt;/mapper&gt;
<fo:block/>
</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Note that this forces us to use a 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline>
          instead of a 
<fo:inline font-family="monospace" font-size="10pt">resultType</fo:inline> in our select statements.
        </fo:block>

      </fo:block>


      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">3.1.6   objectFactory</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Each time MyBatis creates a new instance of a result object, it
          uses an
          ObjectFactory instance to do so. The default ObjectFactory
          does
          little more than instantiate the target class with a default
          constructor, or a parameterized constructor if parameter mappings
          exist. If you want to override the default behaviour of the
          ObjectFactory, you can create your own. For example:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">//&#160;ExampleObjectFactory.java
<fo:block/>
public&#160;class&#160;ExampleObjectFactory&#160;extends&#160;DefaultObjectFactory&#160;{
<fo:block/>
&#160;&#160;@Override
<fo:block/>
&#160;&#160;public&#160;&lt;T&gt;&#160;T&#160;create(Class&lt;T&gt;&#160;type)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;return&#160;super.create(type);
<fo:block/>
&#160;&#160;}
<fo:block/>

<fo:block/>
&#160;&#160;@Override
<fo:block/>
&#160;&#160;public&#160;&lt;T&gt;&#160;T&#160;create(Class&lt;T&gt;&#160;type,&#160;List&lt;Class&lt;?&gt;&gt;&#160;constructorArgTypes,&#160;List&lt;Object&gt;&#160;constructorArgs)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;return&#160;super.create(type,&#160;constructorArgTypes,&#160;constructorArgs);
<fo:block/>
&#160;&#160;}
<fo:block/>

<fo:block/>
&#160;&#160;@Override
<fo:block/>
&#160;&#160;public&#160;void&#160;setProperties(Properties&#160;properties)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;super.setProperties(properties);
<fo:block/>
&#160;&#160;}
<fo:block/>

<fo:block/>
&#160;&#160;@Override
<fo:block/>
&#160;&#160;public&#160;&lt;T&gt;&#160;boolean&#160;isCollection(Class&lt;T&gt;&#160;type)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;return&#160;Collection.class.isAssignableFrom(type);
<fo:block/>
&#160;&#160;}}
<fo:block/>
</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;!--&#160;mybatis-config.xml&#160;--&gt;
<fo:block/>
&lt;objectFactory&#160;type="org.mybatis.example.ExampleObjectFactory"&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="someProperty"&#160;value="100"/&gt;
<fo:block/>
&lt;/objectFactory&gt;</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The ObjectFactory interface is very simple. It contains two create
          methods, one to deal with the default constructor, and the other to
          deal with parameterized constructors. Finally, the setProperties
          method can be used to configure the ObjectFactory. Properties
          defined within the body of the objectFactory element will be passed
          to the setProperties method after initialization of your
          ObjectFactory instance.
        </fo:block>


      </fo:block>

      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">3.1.7   plugins</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          MyBatis allows you to intercept calls to at certain points within
          the
          execution of a mapped statement. By default, MyBatis allows
          plug-ins to intercept method calls of:
        </fo:block>

        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            Executor
            (update, query, flushStatements, commit, rollback,
            getTransaction, close,
            isClosed)
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            ParameterHandler
            (getParameterObject, setParameters)
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            ResultSetHandler
            (handleResultSets, handleOutputParameters)
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            StatementHandler
            (prepare, parameterize, batch, update, query)
          </fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The details of these classes methods can be discovered by looking
          at
          the full method signature of each, and the source code which is
          available with each MyBatis release. You should understand the
          behaviour of the method you’re overriding, assuming you’re doing
          something more than just monitoring calls. If you attempt to modify
          or override the behaviour of a given method, you’re likely to break
          the core of MyBatis. These are low level classes and methods, so
          use
          plug-ins with caution.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Using plug-ins is pretty simple given the power they provide.
          Simply
          implement the Interceptor interface, being sure to specify the
          signatures you want to intercept.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">//&#160;ExamplePlugin.java
<fo:block/>
@Intercepts({@Signature(
<fo:block/>
&#160;&#160;type=&#160;Executor.class,
<fo:block/>
&#160;&#160;method&#160;=&#160;"update",
<fo:block/>
&#160;&#160;args&#160;=&#160;{MappedStatement.class,Object.class})})
<fo:block/>
public&#160;class&#160;ExamplePlugin&#160;implements&#160;Interceptor&#160;{
<fo:block/>
&#160;&#160;private&#160;Properties&#160;properties&#160;=&#160;new&#160;Properties();
<fo:block/>

<fo:block/>
&#160;&#160;@Override
<fo:block/>
&#160;&#160;public&#160;Object&#160;intercept(Invocation&#160;invocation)&#160;throws&#160;Throwable&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;//&#160;implement&#160;pre-processing&#160;if&#160;needed
<fo:block/>
&#160;&#160;&#160;&#160;Object&#160;returnObject&#160;=&#160;invocation.proceed();
<fo:block/>
&#160;&#160;&#160;&#160;//&#160;implement&#160;post-processing&#160;if&#160;needed
<fo:block/>
&#160;&#160;&#160;&#160;return&#160;returnObject;
<fo:block/>
&#160;&#160;}
<fo:block/>

<fo:block/>
&#160;&#160;@Override
<fo:block/>
&#160;&#160;public&#160;void&#160;setProperties(Properties&#160;properties)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;this.properties&#160;=&#160;properties;
<fo:block/>
&#160;&#160;}
<fo:block/>
}</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;!--&#160;mybatis-config.xml&#160;--&gt;
<fo:block/>
&lt;plugins&gt;
<fo:block/>
&#160;&#160;&lt;plugin&#160;interceptor="org.mybatis.example.ExamplePlugin"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;property&#160;name="someProperty"&#160;value="100"/&gt;
<fo:block/>
&#160;&#160;&lt;/plugin&gt;
<fo:block/>
&lt;/plugins&gt;</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The plug-in above will intercept all calls to the "update" method
          on
          the Executor instance, which is an internal object responsible for
          the low-level execution of mapped statements.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">NOTE
          
<fo:inline font-weight="bold">Overriding the Configuration Class
          </fo:inline>
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          In addition to modifying core MyBatis behaviour with plugins, you
          can
          also override the 
<fo:inline font-family="monospace" font-size="10pt">Configuration</fo:inline> class entirely. Simply extend it
          and override any methods inside, and pass it into the call to the
          
<fo:inline font-family="monospace" font-size="10pt">SqlSessionFactoryBuilder.build(myConfig)</fo:inline> method. Again though, this
          could have a severe impact on the behaviour of MyBatis, so use
          caution.
        </fo:block>

      </fo:block>

      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">3.1.8   environments</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          MyBatis can be configured with multiple environments. This helps
          you to
          apply your SQL Maps to multiple databases for any number of
          reasons. For example, you might have a different configuration for
          your Development, Test and Production environments. Or, you may
          have
          multiple production databases that share the same schema, and
          you’d
          like to use the same SQL maps for both. There are many use
          cases.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          
<fo:inline font-weight="bold">One important thing to remember though: While you can
            configure multiple environments, you can only choose ONE per
            SqlSessionFactory instance.
          </fo:inline>
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          So if you want to connect to two databases, you need to create two
          instances of SqlSessionFactory, one for each. For three databases,
          you’d need three instances, and so on. It’s really easy to
          remember:
        </fo:block>

        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            
<fo:inline font-weight="bold">One SqlSessionFactory instance per database
            </fo:inline>
          </fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          To specify which environment to build, you simply pass it to the
          SqlSessionFactoryBuilder as an optional parameter. The two
          signatures that accept the environment are:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">SqlSessionFactory&#160;factory&#160;=&#160;new&#160;SqlSessionFactoryBuilder().build(reader,&#160;environment);
<fo:block/>
SqlSessionFactory&#160;factory&#160;=&#160;new&#160;SqlSessionFactoryBuilder().build(reader,&#160;environment,&#160;properties);</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">If the environment is omitted, then the default environment is
          loaded, as follows:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">SqlSessionFactory&#160;factory&#160;=&#160;new&#160;SqlSessionFactoryBuilder().build(reader);
<fo:block/>
SqlSessionFactory&#160;factory&#160;=&#160;new&#160;SqlSessionFactoryBuilder().build(reader,&#160;properties);</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The environments element defines how the environment is
          configured.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;environments&#160;default="development"&gt;
<fo:block/>
&#160;&#160;&lt;environment&#160;id="development"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;transactionManager&#160;type="JDBC"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;property&#160;name="..."&#160;value="..."/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/transactionManager&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;dataSource&#160;type="POOLED"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;property&#160;name="driver"&#160;value="${driver}"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;property&#160;name="url"&#160;value="${url}"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;property&#160;name="username"&#160;value="${username}"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;property&#160;name="password"&#160;value="${password}"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/dataSource&gt;
<fo:block/>
&#160;&#160;&lt;/environment&gt;
<fo:block/>
&lt;/environments&gt;</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Notice the key sections here:
        </fo:block>

        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            The default Environment ID (e.g. default="development").
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            The Environment ID for each environment defined (e.g.
            id="development").
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            The TransactionManager configuration (e.g. type="JDBC")
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            The DataSource configuration (e.g. type="POOLED")
          </fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The default environment and the environment IDs are self
          explanatory.
          Name them whatever you like, just make sure the default
          matches one
          of them.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          
<fo:inline font-weight="bold">transactionManager</fo:inline>
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          There are two TransactionManager types (i.e.
          type="[JDBC|MANAGED]") that
          are included with MyBatis:
        </fo:block>

        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            JDBC – This configuration simply makes use of the JDBC commit
            and
            rollback facilities directly. It relies on the connection
            retrieved from the dataSource to manage the scope of the
            transaction.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            MANAGED – This configuration simply does almost nothing. It
            never
            commits, or rolls back a connection. Instead, it lets the
            container manage the full lifecycle of the transaction (e.g.
            a JEE Application Server context). By default it does
            close the connection. However, some containers don’t expect this,
            and thus if you need to stop it from closing the connection, set
            the "closeConnection" property to false. For example:
            
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;transactionManager&#160;type="MANAGED"&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="closeConnection"&#160;value="false"/&gt;
<fo:block/>
&lt;/transactionManager&gt;</fo:block>

          </fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          NOTE
          If you are planning to use MyBatis with Spring there is no need to configure
          any TransactionManager because the Spring module will set its own one
          overriding any previously set configuration.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Neither of these TransactionManager types require any properties.
          However,
          they are both Type Aliases, so in other words, instead of
          using
          them, you could put your own fully qualified class name or Type
          Alias that refers to your own implementation of the
          TransactionFactory interface.
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">public&#160;interface&#160;TransactionFactory&#160;{
<fo:block/>
&#160;&#160;default&#160;void&#160;setProperties(Properties&#160;props)&#160;{&#160;//&#160;Since&#160;3.5.2,&#160;change&#160;to&#160;default&#160;method
<fo:block/>
&#160;&#160;&#160;&#160;//&#160;NOP
<fo:block/>
&#160;&#160;}
<fo:block/>
&#160;&#160;Transaction&#160;newTransaction(Connection&#160;conn);
<fo:block/>
&#160;&#160;Transaction&#160;newTransaction(DataSource&#160;dataSource,&#160;TransactionIsolationLevel&#160;level,&#160;boolean&#160;autoCommit);
<fo:block/>
}</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Any properties configured in the XML will be passed to the
          setProperties() method after instantiation. Your implementation
          would also need to create a Transaction implementation, which is
          also a very simple interface:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">public&#160;interface&#160;Transaction&#160;{
<fo:block/>
&#160;&#160;Connection&#160;getConnection()&#160;throws&#160;SQLException;
<fo:block/>
&#160;&#160;void&#160;commit()&#160;throws&#160;SQLException;
<fo:block/>
&#160;&#160;void&#160;rollback()&#160;throws&#160;SQLException;
<fo:block/>
&#160;&#160;void&#160;close()&#160;throws&#160;SQLException;
<fo:block/>
&#160;&#160;Integer&#160;getTimeout()&#160;throws&#160;SQLException;
<fo:block/>
}</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Using these two interfaces, you can completely customize how
          MyBatis
          deals with Transactions.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          
<fo:inline font-weight="bold">dataSource</fo:inline>
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The dataSource element configures the source of JDBC Connection
          objects using the standard JDBC DataSource interface.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Most MyBatis applications will configure a dataSource as in the
          example. However, it’s not required. Realize though, that to
          facilitate Lazy Loading, this dataSource is required.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">There are three built-in dataSource types (i.e. type="[UNPOOLED|POOLED|JNDI]"):
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          
<fo:inline font-weight="bold">UNPOOLED</fo:inline>
          – This implementation of DataSource simply opens and closes a
          connection each time it is requested. While it’s a bit slower, this
          is a good choice for simple applications that do not require the
          performance of immediately available connections. Different
          databases are also different in this performance area, so for some
          it may be less important to pool and this configuration will be
          ideal. The UNPOOLED DataSource has the following properties to configure:
        </fo:block>

        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">driver</fo:inline> – This is the fully qualified Java class of the JDBC
            driver (NOT of the DataSource class if your driver includes one).
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">url</fo:inline> – This is the JDBC URL for your database instance.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">username</fo:inline> – The database username to log in with.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">password</fo:inline> - The database password to log in with.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">defaultTransactionIsolationLevel</fo:inline> – The default transaction
            isolation level for connections.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">defaultNetworkTimeout</fo:inline> – The default network timeout value in milliseconds to wait for the database operation to complete. See the API documentation of 
<fo:inline font-family="monospace" font-size="10pt">java.sql.Connection#setNetworkTimeout()</fo:inline> for details.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Optionally, you can pass properties to the database driver as
          well. To do
          this, prefix the properties with 
<fo:inline font-family="monospace" font-size="10pt">driver.</fo:inline>, for example:
        </fo:block>

        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">driver.encoding=UTF8</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          This will pass the property 
<fo:inline font-family="monospace" font-size="10pt">encoding</fo:inline>, with the value 
<fo:inline font-family="monospace" font-size="10pt">UTF8</fo:inline>, to
          your
          database driver via the 
<fo:inline font-family="monospace" font-size="10pt">DriverManager.getConnection(url,
          driverProperties)</fo:inline> method.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          
<fo:inline font-weight="bold">POOLED</fo:inline>
          – This implementation of DataSource pools JDBC Connection objects
          to
          avoid the initial connection and authentication time required to
          create a new Connection instance. This is a popular approach for
          concurrent web applications to achieve the fastest response.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          In addition to the (UNPOOLED) properties above, there are many
          more
          properties that can be used to configure the POOLED datasource:
        </fo:block>

        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">poolMaximumActiveConnections</fo:inline> – This is the number of active
            (i.e. in use) connections that can exist at any given time.
            Default: 10
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">poolMaximumIdleConnections</fo:inline> – The number of idle connections
            that
            can exist at any given time.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">poolMaximumCheckoutTime</fo:inline> – This is the amount of time that a
            Connection can be "checked out" of the pool before it will be
            forcefully returned. Default: 20000ms (i.e. 20 seconds)
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">poolTimeToWait</fo:inline> – This is a low level setting that gives the
            pool
            a chance to print a log status and re-attempt the acquisition
            of a
            connection in the case that it’s taking unusually long (to
            avoid
            failing silently forever if the pool is misconfigured).
            Default:
            20000ms (i.e. 20 seconds)
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">poolMaximumLocalBadConnectionTolerance</fo:inline> – This is a low level setting about
            tolerance of bad connections got for any thread. If a thread got a bad connection, it may
            still have another chance to re-attempt to get another connection which is valid. But the
            retrying times should not more than the sum of 
<fo:inline font-family="monospace" font-size="10pt">poolMaximumIdleConnections</fo:inline>
            and 
<fo:inline font-family="monospace" font-size="10pt">poolMaximumLocalBadConnectionTolerance</fo:inline>.
            Default:
            3 (Since: 3.4.5)
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">poolPingQuery</fo:inline> – The Ping Query is sent to the database to
            validate that a connection is in good working order and is ready
            to
            accept requests. The default is "NO PING QUERY SET", which will
            cause most database drivers to fail with a decent error message.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">poolPingEnabled</fo:inline> – This enables or disables the ping query. If
            enabled, you must also set the poolPingQuery property with a valid
            SQL statement (preferably a very fast one). Default: false.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">poolPingConnectionsNotUsedFor</fo:inline> – This configures how often the
            poolPingQuery will be used. This can be set to match the typical
            timeout for a database connection, to avoid unnecessary pings.
            Default: 0 (i.e. all connections are pinged every time – but only
            if poolPingEnabled is true of course).
          </fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          
<fo:inline font-weight="bold">JNDI</fo:inline>
          – This implementation of DataSource is intended for use with
          containers such as EJB or Application Servers that may configure
          the
          DataSource centrally or externally and place a reference to it
          in a
          JNDI context. This DataSource configuration only requires two
          properties:
        </fo:block>

        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">initial_context</fo:inline> – This property is used for the Context lookup
            from the InitialContext (i.e.
            initialContext.lookup(initial_context)). This property is
            optional,
            and if omitted, then the data_source property will be
            looked up
            against the InitialContext directly.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">data_source</fo:inline> – This is the context path where the reference to
            the instance of the DataSource can be found. It will be looked up
            against the context returned by the initial_context lookup, or
            against the InitialContext directly if no initial_context is
            supplied.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Similar to the other DataSource configurations, it’s possible to
          send properties directly to the InitialContext by prefixing those
          properties with 
<fo:inline font-family="monospace" font-size="10pt">env.</fo:inline>, for example:
        </fo:block>

        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">env.encoding=UTF8</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          This would send the property 
<fo:inline font-family="monospace" font-size="10pt">encoding</fo:inline> with the value of 
<fo:inline font-family="monospace" font-size="10pt">UTF8</fo:inline>
          to the
          constructor of the InitialContext upon instantiation.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          You can plug any 3rd party DataSource by implementing the interface 
<fo:inline font-family="monospace" font-size="10pt">org.apache.ibatis.datasource.DataSourceFactory</fo:inline>:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">public&#160;interface&#160;DataSourceFactory&#160;{
<fo:block/>
&#160;&#160;void&#160;setProperties(Properties&#160;props);
<fo:block/>
&#160;&#160;DataSource&#160;getDataSource();
<fo:block/>
}</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          
<fo:inline font-family="monospace" font-size="10pt">org.apache.ibatis.datasource.unpooled.UnpooledDataSourceFactory</fo:inline> can be used as super class
          to build new datasource adapters. For example this is the code needed to plug C3P0:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">import&#160;org.apache.ibatis.datasource.unpooled.UnpooledDataSourceFactory;
<fo:block/>
import&#160;com.mchange.v2.c3p0.ComboPooledDataSource;
<fo:block/>

<fo:block/>
public&#160;class&#160;C3P0DataSourceFactory&#160;extends&#160;UnpooledDataSourceFactory&#160;{
<fo:block/>

<fo:block/>
&#160;&#160;public&#160;C3P0DataSourceFactory()&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;this.dataSource&#160;=&#160;new&#160;ComboPooledDataSource();
<fo:block/>
&#160;&#160;}
<fo:block/>
}</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">To set it up, add a property for each setter method you want MyBatis to call.
        Follows below a sample configuration which connects to a PostgreSQL database:</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;dataSource&#160;type="org.myproject.C3P0DataSourceFactory"&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="driver"&#160;value="org.postgresql.Driver"/&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="url"&#160;value="jdbc:postgresql:mydb"/&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="username"&#160;value="postgres"/&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="password"&#160;value="root"/&gt;
<fo:block/>
&lt;/dataSource&gt;
<fo:block/>
</fo:block>


      </fo:block>


      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">3.1.9   databaseIdProvider</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          MyBatis is able to execute different statements depending on your database vendor.
          The multi-db vendor support is based on the mapped statements 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> attribute.
          MyBatis will load all statements with no 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> attribute
          or with a 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> that matches the current one. In case the same statement
          is found with and without the 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> the latter will be discarded.
          To enable the multi vendor support add a 
<fo:inline font-family="monospace" font-size="10pt">databaseIdProvider</fo:inline>
          to mybatis-config.xml file as follows:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;databaseIdProvider&#160;type="DB_VENDOR"&#160;/&gt;
<fo:block/>
</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The DB_VENDOR implementation databaseIdProvider sets as databaseId the String returned by
          
<fo:inline font-family="monospace" font-size="10pt">DatabaseMetaData#getDatabaseProductName()</fo:inline>.
          Given that usually that string is too long and that different versions of the same product may return different values,
          you may want to convert it to a shorter one by adding properties like follows:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;databaseIdProvider&#160;type="DB_VENDOR"&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="SQL&#160;Server"&#160;value="sqlserver"/&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="DB2"&#160;value="db2"/&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="Oracle"&#160;value="oracle"&#160;/&gt;
<fo:block/>
&lt;/databaseIdProvider&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          When properties are provided, the DB_VENDOR databaseIdProvider will search the property value corresponding to the
          first key found in the returned database product name or "null" if there is not a matching property.
          In this case, if 
<fo:inline font-family="monospace" font-size="10pt">getDatabaseProductName()</fo:inline> returns "Oracle (DataDirect)" the databaseId will be set to "oracle".
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          You can build your own DatabaseIdProvider by implementing the interface 
<fo:inline font-family="monospace" font-size="10pt">org.apache.ibatis.mapping.DatabaseIdProvider</fo:inline>
          and registering it in mybatis-config.xml:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">public&#160;interface&#160;DatabaseIdProvider&#160;{
<fo:block/>
&#160;&#160;default&#160;void&#160;setProperties(Properties&#160;p)&#160;{&#160;//&#160;Since&#160;3.5.2,&#160;changed&#160;to&#160;default&#160;method
<fo:block/>
&#160;&#160;&#160;&#160;//&#160;NOP
<fo:block/>
&#160;&#160;}
<fo:block/>
&#160;&#160;String&#160;getDatabaseId(DataSource&#160;dataSource)&#160;throws&#160;SQLException;
<fo:block/>
}</fo:block>


      </fo:block>


      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">3.1.10   mappers</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Now that the behavior of MyBatis is configured with the above
          configuration elements, we’re ready to define our mapped SQL
          statements. But first, we need to tell MyBatis where to find them.
          Java doesn’t really provide any good means of auto-discovery in
          this regard, so the best way to do it is to simply tell MyBatis
          where to find the mapping files. You can use classpath relative
          resource references, fully qualified url references
          (including 
<fo:inline font-family="monospace" font-size="10pt">file:///</fo:inline> URLs), class names or package names.
          For example:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;!--&#160;Using&#160;classpath&#160;relative&#160;resources&#160;--&gt;
<fo:block/>
&lt;mappers&gt;
<fo:block/>
&#160;&#160;&lt;mapper&#160;resource="org/mybatis/builder/AuthorMapper.xml"/&gt;
<fo:block/>
&#160;&#160;&lt;mapper&#160;resource="org/mybatis/builder/BlogMapper.xml"/&gt;
<fo:block/>
&#160;&#160;&lt;mapper&#160;resource="org/mybatis/builder/PostMapper.xml"/&gt;
<fo:block/>
&lt;/mappers&gt;</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;!--&#160;Using&#160;url&#160;fully&#160;qualified&#160;paths&#160;--&gt;
<fo:block/>
&lt;mappers&gt;
<fo:block/>
&#160;&#160;&lt;mapper&#160;url="file:///var/mappers/AuthorMapper.xml"/&gt;
<fo:block/>
&#160;&#160;&lt;mapper&#160;url="file:///var/mappers/BlogMapper.xml"/&gt;
<fo:block/>
&#160;&#160;&lt;mapper&#160;url="file:///var/mappers/PostMapper.xml"/&gt;
<fo:block/>
&lt;/mappers&gt;</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;!--&#160;Using&#160;mapper&#160;interface&#160;classes&#160;--&gt;
<fo:block/>
&lt;mappers&gt;
<fo:block/>
&#160;&#160;&lt;mapper&#160;class="org.mybatis.builder.AuthorMapper"/&gt;
<fo:block/>
&#160;&#160;&lt;mapper&#160;class="org.mybatis.builder.BlogMapper"/&gt;
<fo:block/>
&#160;&#160;&lt;mapper&#160;class="org.mybatis.builder.PostMapper"/&gt;
<fo:block/>
&lt;/mappers&gt;</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;!--&#160;Register&#160;all&#160;interfaces&#160;in&#160;a&#160;package&#160;as&#160;mappers&#160;--&gt;
<fo:block/>
&lt;mappers&gt;
<fo:block/>
&#160;&#160;&lt;package&#160;name="org.mybatis.builder"/&gt;
<fo:block/>
&lt;/mappers&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          These statement simply tell MyBatis where to go from here. The
          rest of the details are in each of the SQL Mapping files, and that’s
          exactly what the next section will discuss.
        </fo:block>

      </fo:block>

    </fo:block>

  
</fo:block></fo:flow></fo:page-sequence>
<!--

       Copyright 2009-2019 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->

  
<fo:page-sequence initial-page-number="auto" master-reference="body">

<fo:static-content flow-name="xsl-region-before"><fo:table table-layout="fixed" width="100%" >

<fo:table-column column-width="5.625in" />
<fo:table-column column-width="0.625in" />
<fo:table-body>
<fo:table-row>
<fo:table-cell>
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545" text-align="left">4   Mapper XML Files</fo:block></fo:table-cell>
<fo:table-cell>
<fo:block font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number /></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:static-content>
<fo:static-content flow-name="xsl-region-after">
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545">&#169;2023, MyBatis.org &#8226; ALL RIGHTS RESERVED.</fo:block></fo:static-content><fo:flow flow-name="xsl-region-body">

<fo:block id="./sqlmap-xml">
<fo:list-block>
<fo:list-item><fo:list-item-label end-indent="6.375in" start-indent="-1in">

<fo:block font-size="9.5pt" line-height="10pt" text-align="right" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">
<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4</fo:block></fo:block></fo:list-item-label><fo:list-item-body end-indent="1in" start-indent="0in">

<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">Mapper XML Files</fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block>
<fo:block space-after.optimum="0em">
<fo:leader leader-length.optimum="100%" leader-pattern="dots" rule-thickness="1pt" color="#454545" /></fo:block>
<fo:block>
    

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="12pt" font-weight="bold" space-before="18pt" space-after="6pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1   Mapper XML Files</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        The true power of MyBatis is in the Mapped Statements. This is where the magic happens.
        For all of their power, the Mapper XML files are relatively simple. Certainly if you were
        to compare them to the equivalent JDBC code, you would immediately see a savings of 95% of the code.
        MyBatis was built to focus on the SQL, and does its best to stay out of your way.
      </fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The Mapper XML files have only a few first class elements (in the order that they should be defined):
      </fo:block>

      

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          
<fo:inline font-family="monospace" font-size="10pt">cache</fo:inline>
          – Configuration of the cache for a given namespace.
        </fo:block>
</fo:list-item-body>
</fo:list-item>

        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          
<fo:inline font-family="monospace" font-size="10pt">cache-ref</fo:inline>
          – Reference to a cache configuration from another namespace.
        </fo:block>
</fo:list-item-body>
</fo:list-item>

        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline>
          – The most complicated and powerful element that describes how to load your objects from the
          database result sets.
        </fo:block>
</fo:list-item-body>
</fo:list-item>

        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          
            
<fo:inline font-family="monospace" font-size="10pt">parameterMap</fo:inline>
            – Deprecated! Old-school way to map parameters. Inline parameters are preferred and this element
            may be removed in the future. Not documented here.
          
        </fo:block>
</fo:list-item-body>
</fo:list-item>

        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          
<fo:inline font-family="monospace" font-size="10pt">sql</fo:inline>
          – A reusable chunk of SQL that can be referenced by other statements.
        </fo:block>
</fo:list-item-body>
</fo:list-item>

        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          
<fo:inline font-family="monospace" font-size="10pt">insert</fo:inline>
          – A mapped INSERT statement.
        </fo:block>
</fo:list-item-body>
</fo:list-item>

        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          
<fo:inline font-family="monospace" font-size="10pt">update</fo:inline>
          – A mapped UPDATE statement.
        </fo:block>
</fo:list-item-body>
</fo:list-item>

        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          
<fo:inline font-family="monospace" font-size="10pt">delete</fo:inline>
          – A mapped DELETE statement.
        </fo:block>
</fo:list-item-body>
</fo:list-item>

        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          
<fo:inline font-family="monospace" font-size="10pt">select</fo:inline>
          – A mapped SELECT statement.
        </fo:block>
</fo:list-item-body>
</fo:list-item>

      </fo:list-block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The next sections will describe each of these elements in detail, starting with the statements
        themselves.
      </fo:block>


      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.1   select</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The select statement is one of the most popular elements that you'll use in MyBatis.
          Putting data in a database isn't terribly valuable until you get it back out, so most
          applications query far more than they modify the data. For every insert, update or delete,
          there are probably many selects. This is one of the founding principles of MyBatis, and is the
          reason so much focus and effort was placed on querying and result mapping. The select element is
          quite simple for simple cases. For example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="selectPerson"&#160;parameterType="int"&#160;resultType="hashmap"&gt;
<fo:block/>
&#160;&#160;SELECT&#160;*&#160;FROM&#160;PERSON&#160;WHERE&#160;ID&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          This statement is called selectPerson, takes a parameter of type int (or Integer), and returns a
          HashMap
          keyed by column names mapped to row values.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Notice the parameter notation:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">#{id}</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          This tells MyBatis to create a PreparedStatement parameter. With JDBC, such a parameter would be
          identified by a "?" in SQL passed to a new PreparedStatement, something like this:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">//&#160;Similar&#160;JDBC&#160;code,&#160;NOT&#160;MyBatis…
<fo:block/>
String&#160;selectPerson&#160;=&#160;"SELECT&#160;*&#160;FROM&#160;PERSON&#160;WHERE&#160;ID=?";
<fo:block/>
PreparedStatement&#160;ps&#160;=&#160;conn.prepareStatement(selectPerson);
<fo:block/>
ps.setInt(1,id);</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Of course, there's a lot more code required by JDBC alone to extract the results and map them to an
          instance of an object, which is what MyBatis saves you from having to do. There's a lot more to know
          about parameter and result mapping. Those details warrant their own section, which follows later in
          this section.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The select element has more attributes that allow you to configure the details of how each statement
          should behave.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select
<fo:block/>
&#160;&#160;id="selectPerson"
<fo:block/>
&#160;&#160;parameterType="int"
<fo:block/>
&#160;&#160;parameterMap="deprecated"
<fo:block/>
&#160;&#160;resultType="hashmap"
<fo:block/>
&#160;&#160;resultMap="personResultMap"
<fo:block/>
&#160;&#160;flushCache="false"
<fo:block/>
&#160;&#160;useCache="true"
<fo:block/>
&#160;&#160;timeout="10"
<fo:block/>
&#160;&#160;fetchSize="256"
<fo:block/>
&#160;&#160;statementType="PREPARED"
<fo:block/>
&#160;&#160;resultSetType="FORWARD_ONLY"&gt;</fo:block>


        

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Attribute</fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Description</fo:block>
</fo:table-cell>

            </fo:table-row>

          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">id</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
A unique identifier in this namespace that can be used to reference this statement.</fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">parameterType</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
The fully qualified class name or alias for the parameter that will be passed into this
                statement. This attribute is optional because MyBatis can calculate the TypeHandler to use out of
                the actual parameter passed to the statement. Default is 
<fo:inline font-family="monospace" font-size="10pt">unset</fo:inline>.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">parameterMap</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                This is a deprecated approach to referencing an external 
<fo:inline font-family="monospace" font-size="10pt">parameterMap</fo:inline>. Use
                  inline parameter mappings and the 
<fo:inline font-family="monospace" font-size="10pt">parameterType</fo:inline> attribute.
                
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">resultType</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
The fully qualified class name or alias for the expected type that will be returned from
                this statement. Note that in the case of collections, this should be the type that the
                collection contains, not the type of the collection itself. Use 
<fo:inline font-family="monospace" font-size="10pt">resultType</fo:inline> OR
                
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline>, not both.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
A named reference to an external 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline>. Result maps are the most powerful feature of
                MyBatis, and with a good understanding of them, many difficult mapping cases can be
                solved. Use 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline> OR 
<fo:inline font-family="monospace" font-size="10pt">resultType</fo:inline>, not both.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">flushCache</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Setting this to true will cause the local and 2nd level caches to be flushed whenever this statement is
                called. Default: 
<fo:inline font-family="monospace" font-size="10pt">false</fo:inline> for select statements.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">useCache</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Setting this to true will cause the results of this statement to be cached in 2nd level cache. Default:
                
<fo:inline font-family="monospace" font-size="10pt">true</fo:inline> for select statements.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">timeout</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
This sets the number of seconds the driver will wait for the database to return from a
                request, before throwing an exception. Default is 
<fo:inline font-family="monospace" font-size="10pt">unset</fo:inline> (driver dependent).
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">fetchSize</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
This is a driver hint that will attempt to cause the driver to return results in batches
                of rows numbering in size equal to this setting. Default is 
<fo:inline font-family="monospace" font-size="10pt">unset</fo:inline> (driver dependent).
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">statementType</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Any one of 
<fo:inline font-family="monospace" font-size="10pt">STATEMENT</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">PREPARED</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">CALLABLE</fo:inline>.
              This causes MyBatis to use 
<fo:inline font-family="monospace" font-size="10pt">Statement</fo:inline>,
                
<fo:inline font-family="monospace" font-size="10pt">PreparedStatement</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">CallableStatement</fo:inline> respectively. Default: 
<fo:inline font-family="monospace" font-size="10pt">PREPARED</fo:inline>.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">resultSetType</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Any one of 
<fo:inline font-family="monospace" font-size="10pt">FORWARD_ONLY</fo:inline>|
<fo:inline font-family="monospace" font-size="10pt">SCROLL_SENSITIVE</fo:inline>|
<fo:inline font-family="monospace" font-size="10pt">SCROLL_INSENSITIVE</fo:inline>|
<fo:inline font-family="monospace" font-size="10pt">DEFAULT</fo:inline>(same as unset).
              Default is 
<fo:inline font-family="monospace" font-size="10pt">unset</fo:inline> (driver dependent).
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
In case there is a configured databaseIdProvider, MyBatis will load all statements with no 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline>
              attribute or with a 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> that matches the current one. If case the same statement
              if found with and without the 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> the latter will be discarded.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">resultOrdered</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
This is only applicable for nested result select statements: If this is true, it
                is assumed that nested results are contained or grouped together such that when a
                new main result row is returned, no references to a previous result row will occur
                anymore. This allows nested results to be filled much more memory friendly. Default:
                
<fo:inline font-family="monospace" font-size="10pt">false</fo:inline>.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">resultSets</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
This is only applicable for multiple result sets. It lists the result sets that will
                be returned by the statement and gives a name to each one. Names are separated by commas.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

          
        </fo:table-body>
</fo:table>
</fo:block>

<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif" text-align="center">Select Attributes</fo:block>

      </fo:block>


      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.2   insert, update and delete</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The data modification statements insert, update and delete are very similar in their implementation:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;insert
<fo:block/>
&#160;&#160;id="insertAuthor"
<fo:block/>
&#160;&#160;parameterType="domain.blog.Author"
<fo:block/>
&#160;&#160;flushCache="true"
<fo:block/>
&#160;&#160;statementType="PREPARED"
<fo:block/>
&#160;&#160;keyProperty=""
<fo:block/>
&#160;&#160;keyColumn=""
<fo:block/>
&#160;&#160;useGeneratedKeys=""
<fo:block/>
&#160;&#160;timeout="20"&gt;
<fo:block/>

<fo:block/>
&lt;update
<fo:block/>
&#160;&#160;id="updateAuthor"
<fo:block/>
&#160;&#160;parameterType="domain.blog.Author"
<fo:block/>
&#160;&#160;flushCache="true"
<fo:block/>
&#160;&#160;statementType="PREPARED"
<fo:block/>
&#160;&#160;timeout="20"&gt;
<fo:block/>

<fo:block/>
&lt;delete
<fo:block/>
&#160;&#160;id="deleteAuthor"
<fo:block/>
&#160;&#160;parameterType="domain.blog.Author"
<fo:block/>
&#160;&#160;flushCache="true"
<fo:block/>
&#160;&#160;statementType="PREPARED"
<fo:block/>
&#160;&#160;timeout="20"&gt;</fo:block>


        

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Attribute</fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Description</fo:block>
</fo:table-cell>

            </fo:table-row>

          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">id</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
A unique identifier in this namespace that can be used to reference this statement.</fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">parameterType</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
The fully qualified class name or alias for the parameter that will be passed into this
                statement. This attribute is optional because MyBatis can calculate the TypeHandler to use out of
                the actual parameter passed to the statement. Default is 
<fo:inline font-family="monospace" font-size="10pt">unset</fo:inline>.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">parameterMap</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                This is a deprecated approach to referencing an external parameterMap. Use
                  inline parameter mappings and the parameterType attribute.
                
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">flushCache</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Setting this to true will cause the 2nd level and local caches to be flushed whenever this statement is
                called. Default: 
<fo:inline font-family="monospace" font-size="10pt">true</fo:inline> for insert, update and delete statements.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">timeout</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
This sets the maximum number of seconds the driver will wait for the database to return from a
                request, before throwing an exception. Default is 
<fo:inline font-family="monospace" font-size="10pt">unset</fo:inline> (driver dependent).
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">statementType</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Any one of 
<fo:inline font-family="monospace" font-size="10pt">STATEMENT</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">PREPARED</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">CALLABLE</fo:inline>.
              This causes MyBatis to use 
<fo:inline font-family="monospace" font-size="10pt">Statement</fo:inline>,
                
<fo:inline font-family="monospace" font-size="10pt">PreparedStatement</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">CallableStatement</fo:inline> respectively. Default: 
<fo:inline font-family="monospace" font-size="10pt">PREPARED</fo:inline>.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">useGeneratedKeys</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
(insert and update only) This tells MyBatis to use the JDBC 
<fo:inline font-family="monospace" font-size="10pt">getGeneratedKeys</fo:inline> method to retrieve
                keys generated internally by the database (e.g. auto increment fields in RDBMS like
                MySQL or SQL Server). Default: 
<fo:inline font-family="monospace" font-size="10pt">false</fo:inline>.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">keyProperty</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
(insert and update only) Identifies a property into which MyBatis will set the key value returned
                by 
<fo:inline font-family="monospace" font-size="10pt">getGeneratedKeys</fo:inline>, or by a 
<fo:inline font-family="monospace" font-size="10pt">selectKey</fo:inline> child element of the insert statement.
                Default: 
<fo:inline font-family="monospace" font-size="10pt">unset</fo:inline>.  Can be a comma separated list of property names if multiple
                generated columns are expected.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">keyColumn</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
(insert and update only) Sets the name of the column in the table with a generated key. This is
                only required in certain databases (like PostgreSQL) when the key column is not the
                first column in the table. Can be a comma separated list of columns names if multiple
                generated columns are expected.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
In case there is a configured databaseIdProvider, MyBatis will load all statements with no 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline>
              attribute or with a 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> that matches the current one. If case the same statement
              if found with and without the 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> the latter will be discarded.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

          
        </fo:table-body>
</fo:table>
</fo:block>

<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif" text-align="center">Insert, Update and Delete Attributes</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The following are some examples of insert, update and delete statements.</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;insert&#160;id="insertAuthor"&gt;
<fo:block/>
&#160;&#160;insert&#160;into&#160;Author&#160;(id,username,password,email,bio)
<fo:block/>
&#160;&#160;values&#160;(#{id},#{username},#{password},#{email},#{bio})
<fo:block/>
&lt;/insert&gt;
<fo:block/>

<fo:block/>
&lt;update&#160;id="updateAuthor"&gt;
<fo:block/>
&#160;&#160;update&#160;Author&#160;set
<fo:block/>
&#160;&#160;&#160;&#160;username&#160;=&#160;#{username},
<fo:block/>
&#160;&#160;&#160;&#160;password&#160;=&#160;#{password},
<fo:block/>
&#160;&#160;&#160;&#160;email&#160;=&#160;#{email},
<fo:block/>
&#160;&#160;&#160;&#160;bio&#160;=&#160;#{bio}
<fo:block/>
&#160;&#160;where&#160;id&#160;=&#160;#{id}
<fo:block/>
&lt;/update&gt;
<fo:block/>

<fo:block/>
&lt;delete&#160;id="deleteAuthor"&gt;
<fo:block/>
&#160;&#160;delete&#160;from&#160;Author&#160;where&#160;id&#160;=&#160;#{id}
<fo:block/>
&lt;/delete&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          As mentioned, insert is a little bit more rich in that it has a few extra attributes and
          sub-elements that allow it to deal with key generation in a number of ways.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          First, if your database supports auto-generated key fields (e.g. MySQL and SQL Server),
          then you can simply set 
<fo:inline font-family="monospace" font-size="10pt">useGeneratedKeys="true"</fo:inline> and set the 
<fo:inline font-family="monospace" font-size="10pt">keyProperty</fo:inline> to the target property
          and you're done. For example, if the 
<fo:inline font-family="monospace" font-size="10pt">Author</fo:inline> table above had used an auto-generated column type
          for the id, the statement would be modified as follows:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;insert&#160;id="insertAuthor"&#160;useGeneratedKeys="true"
<fo:block/>
&#160;&#160;&#160;&#160;keyProperty="id"&gt;
<fo:block/>
&#160;&#160;insert&#160;into&#160;Author&#160;(username,password,email,bio)
<fo:block/>
&#160;&#160;values&#160;(#{username},#{password},#{email},#{bio})
<fo:block/>
&lt;/insert&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          If your database also supports multi-row insert, you can pass a list or an array of 
<fo:inline font-family="monospace" font-size="10pt">Author</fo:inline>s and retrieve the auto-generated keys.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;insert&#160;id="insertAuthor"&#160;useGeneratedKeys="true"
<fo:block/>
&#160;&#160;&#160;&#160;keyProperty="id"&gt;
<fo:block/>
&#160;&#160;insert&#160;into&#160;Author&#160;(username,&#160;password,&#160;email,&#160;bio)&#160;values
<fo:block/>
&#160;&#160;&lt;foreach&#160;item="item"&#160;collection="list"&#160;separator=","&gt;
<fo:block/>
&#160;&#160;&#160;&#160;(#{item.username},&#160;#{item.password},&#160;#{item.email},&#160;#{item.bio})
<fo:block/>
&#160;&#160;&lt;/foreach&gt;
<fo:block/>
&lt;/insert&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          MyBatis has another way to deal with key generation for databases that don't support auto-generated
          column types, or perhaps don't yet support the JDBC driver support for auto-generated keys.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Here's a simple (silly) example that would generate a random ID (something you'd likely never do,
          but this demonstrates the flexibility and how MyBatis really doesn't mind):
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;insert&#160;id="insertAuthor"&gt;
<fo:block/>
&#160;&#160;&lt;selectKey&#160;keyProperty="id"&#160;resultType="int"&#160;order="BEFORE"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;select&#160;CAST(RANDOM()*1000000&#160;as&#160;INTEGER)&#160;a&#160;from&#160;SYSIBM.SYSDUMMY1
<fo:block/>
&#160;&#160;&lt;/selectKey&gt;
<fo:block/>
&#160;&#160;insert&#160;into&#160;Author
<fo:block/>
&#160;&#160;&#160;&#160;(id,&#160;username,&#160;password,&#160;email,bio,&#160;favourite_section)
<fo:block/>
&#160;&#160;values
<fo:block/>
&#160;&#160;&#160;&#160;(#{id},&#160;#{username},&#160;#{password},&#160;#{email},&#160;#{bio},&#160;#{favouriteSection,jdbcType=VARCHAR})
<fo:block/>
&lt;/insert&gt;</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          In the example above, the selectKey statement would be run first, the 
<fo:inline font-family="monospace" font-size="10pt">Author</fo:inline> id property would be
          set, and then the insert statement would be called. This gives you a similar behavior to an
          auto-generated key in your database without complicating your Java code.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The selectKey element is described as follows:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;selectKey
<fo:block/>
&#160;&#160;keyProperty="id"
<fo:block/>
&#160;&#160;resultType="int"
<fo:block/>
&#160;&#160;order="BEFORE"
<fo:block/>
&#160;&#160;statementType="PREPARED"&gt;</fo:block>


        

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Attribute</fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Description</fo:block>
</fo:table-cell>

            </fo:table-row>

          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">keyProperty</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
The target property where the result of the 
<fo:inline font-family="monospace" font-size="10pt">selectKey</fo:inline> statement should be set.
                Can be a comma separated list of property names if multiple generated columns
                are expected.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">keyColumn</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
The column name(s) in the returned result set that match the properties.
                Can be a comma separated list of column names if multiple generated columns
                are expected.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">resultType</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                The type of the result. MyBatis can usually figure this out, but it doesn't hurt to
                add it to be sure. MyBatis allows any simple type to be used as the key,
                including Strings.  If you are expecting multiple generated columns, then
                you can use an Object that contains the expected properties, or a Map.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">order</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                This can be set to 
<fo:inline font-family="monospace" font-size="10pt">BEFORE</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">AFTER</fo:inline>. If set to 
<fo:inline font-family="monospace" font-size="10pt">BEFORE</fo:inline>, then it will select the key
                first, set the 
<fo:inline font-family="monospace" font-size="10pt">keyProperty</fo:inline> and then execute the insert statement. If set to 
<fo:inline font-family="monospace" font-size="10pt">AFTER</fo:inline>,
                it runs the insert statement and then the 
<fo:inline font-family="monospace" font-size="10pt">selectKey</fo:inline> statement – which is common with
                databases like Oracle that may have embedded sequence calls inside of insert statements.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">statementType</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Same as above, MyBatis supports 
<fo:inline font-family="monospace" font-size="10pt">STATEMENT</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">PREPARED</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">CALLABLE</fo:inline> statement types that
                map to 
<fo:inline font-family="monospace" font-size="10pt">Statement</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">PreparedStatement</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">CallableStatement</fo:inline> respectively.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

          
        </fo:table-body>
</fo:table>
</fo:block>

<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif" text-align="center">selectKey Attributes</fo:block>

      </fo:block>


      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.3   sql</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          This element can be used to define a reusable fragment of SQL code that can be
          included in other statements. It can be statically (during load phase) parametrized. Different property values can
          vary in include instances. For example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;sql&#160;id="userColumns"&gt;&#160;${alias}.id,${alias}.username,${alias}.password&#160;&lt;/sql&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The SQL fragment can then be included in another statement, for example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="selectUsers"&#160;resultType="map"&gt;
<fo:block/>
&#160;&#160;select
<fo:block/>
&#160;&#160;&#160;&#160;&lt;include&#160;refid="userColumns"&gt;&lt;property&#160;name="alias"&#160;value="t1"/&gt;&lt;/include&gt;,
<fo:block/>
&#160;&#160;&#160;&#160;&lt;include&#160;refid="userColumns"&gt;&lt;property&#160;name="alias"&#160;value="t2"/&gt;&lt;/include&gt;
<fo:block/>
&#160;&#160;from&#160;some_table&#160;t1
<fo:block/>
&#160;&#160;&#160;&#160;cross&#160;join&#160;some_table&#160;t2
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Property value can be also used in include refid attribute or property values inside include clause, for example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;sql&#160;id="sometable"&gt;
<fo:block/>
&#160;&#160;${prefix}Table
<fo:block/>
&lt;/sql&gt;
<fo:block/>

<fo:block/>
&lt;sql&#160;id="someinclude"&gt;
<fo:block/>
&#160;&#160;from
<fo:block/>
&#160;&#160;&#160;&#160;&lt;include&#160;refid="${include_target}"/&gt;
<fo:block/>
&lt;/sql&gt;
<fo:block/>

<fo:block/>
&lt;select&#160;id="select"&#160;resultType="map"&gt;
<fo:block/>
&#160;&#160;select
<fo:block/>
&#160;&#160;&#160;&#160;field1,&#160;field2,&#160;field3
<fo:block/>
&#160;&#160;&lt;include&#160;refid="someinclude"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;property&#160;name="prefix"&#160;value="Some"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;property&#160;name="include_target"&#160;value="sometable"/&gt;
<fo:block/>
&#160;&#160;&lt;/include&gt;
<fo:block/>
&lt;/select&gt;</fo:block>

      </fo:block>


      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.4   Parameters</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          In all of the past statements, you've seen examples of simple parameters. Parameters are very
          powerful elements in MyBatis. For simple situations, probably 90% of the cases, there's not much
          to them, for example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="selectUsers"&#160;resultType="User"&gt;
<fo:block/>
&#160;&#160;select&#160;id,&#160;username,&#160;password
<fo:block/>
&#160;&#160;from&#160;users
<fo:block/>
&#160;&#160;where&#160;id&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The example above demonstrates a very simple named parameter mapping. The parameterType is set to
          
<fo:inline font-family="monospace" font-size="10pt">int</fo:inline>, so therefore the parameter could be named anything. Primitive or simple data types such as
          
<fo:inline font-family="monospace" font-size="10pt">Integer</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">String</fo:inline> have no relevant properties, and thus will replace the full value of the
          parameter entirely. However, if you pass in a complex object, then the behavior is a little
          different. For example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;insert&#160;id="insertUser"&#160;parameterType="User"&gt;
<fo:block/>
&#160;&#160;insert&#160;into&#160;users&#160;(id,&#160;username,&#160;password)
<fo:block/>
&#160;&#160;values&#160;(#{id},&#160;#{username},&#160;#{password})
<fo:block/>
&lt;/insert&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          If a parameter object of type User was passed into that statement, the id, username and password
          property would be looked up and their values passed to a 
<fo:inline font-family="monospace" font-size="10pt">PreparedStatement</fo:inline> parameter.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          That's nice and simple for passing parameters into statements. But there are a lot of other
          features of parameter maps.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          First, like other parts of MyBatis, parameters can specify a more specific data type.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">#{property,javaType=int,jdbcType=NUMERIC}</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Like the rest of MyBatis, the javaType can almost always be determined from the parameter object,
          unless that object is a 
<fo:inline font-family="monospace" font-size="10pt">HashMap</fo:inline>. Then the 
<fo:inline font-family="monospace" font-size="10pt">javaType</fo:inline> should be specified to ensure the correct
          
<fo:inline font-family="monospace" font-size="10pt">TypeHandler</fo:inline> is used.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          NOTE The JDBC Type is required by JDBC for all nullable
          columns, if 
<fo:inline font-family="monospace" font-size="10pt">null</fo:inline> is passed as a value. You can investigate this yourself by reading the JavaDocs
          for the 
<fo:inline font-family="monospace" font-size="10pt">PreparedStatement.setNull()</fo:inline> method.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          To further customize type handling, you can also specify a specific 
<fo:inline font-family="monospace" font-size="10pt">TypeHandler</fo:inline>
          class (or alias), for example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">#{age,javaType=int,jdbcType=NUMERIC,typeHandler=MyTypeHandler}</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          So already it seems to be getting verbose, but the truth is that you'll rarely set any of these.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          For numeric types there's also a 
<fo:inline font-family="monospace" font-size="10pt">numericScale</fo:inline> for determining how many decimal places are relevant.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">#{height,javaType=double,jdbcType=NUMERIC,numericScale=2}</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Finally, the mode attribute allows you to specify 
<fo:inline font-family="monospace" font-size="10pt">IN</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">OUT</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">INOUT</fo:inline> parameters. If a parameter is
          
<fo:inline font-family="monospace" font-size="10pt">OUT</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">INOUT</fo:inline>, the actual value of the parameter object property will be changed, just as you would
          expect if you were calling for an output parameter. If the 
<fo:inline font-family="monospace" font-size="10pt">mode=OUT</fo:inline> (or 
<fo:inline font-family="monospace" font-size="10pt">INOUT</fo:inline>) and the
          
<fo:inline font-family="monospace" font-size="10pt">jdbcType=CURSOR</fo:inline> (i.e. Oracle REFCURSOR), you must specify a 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline> to map the 
<fo:inline font-family="monospace" font-size="10pt">ResultSet</fo:inline> to the
          type of the parameter. Note that the 
<fo:inline font-family="monospace" font-size="10pt">javaType</fo:inline> attribute is optional here, it will be automatically
          set to 
<fo:inline font-family="monospace" font-size="10pt">ResultSet</fo:inline> if left blank with a 
<fo:inline font-family="monospace" font-size="10pt">CURSOR</fo:inline> as the 
<fo:inline font-family="monospace" font-size="10pt">jdbcType</fo:inline>.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">#{department,&#160;mode=OUT,&#160;jdbcType=CURSOR,&#160;javaType=ResultSet,&#160;resultMap=departmentResultMap}</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          MyBatis also supports more advanced data types such as structs, but you must tell the statement
          the type name when registering the out parameter. For example (again, don't break lines like
          this in practice):
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">#{middleInitial,&#160;mode=OUT,&#160;jdbcType=STRUCT,&#160;jdbcTypeName=MY_TYPE,&#160;resultMap=departmentResultMap}</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Despite all of these powerful options, most of the time you'll simply specify the property name,
          and MyBatis will figure out the rest. At most, you'll specify the 
<fo:inline font-family="monospace" font-size="10pt">jdbcType</fo:inline> for nullable columns.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">#{firstName}
<fo:block/>
#{middleInitial,jdbcType=VARCHAR}
<fo:block/>
#{lastName}</fo:block>


        

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.4.1   
          String Substitution
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          By default, using the 
<fo:inline font-family="monospace" font-size="10pt">#{}</fo:inline> syntax will cause MyBatis to generate 
<fo:inline font-family="monospace" font-size="10pt">PreparedStatement</fo:inline> properties and
          set the values safely against the 
<fo:inline font-family="monospace" font-size="10pt">PreparedStatement</fo:inline> parameters (e.g. ?). While this is safer,
          faster and almost always preferred, sometimes you just want to directly inject an unmodified string
          into the SQL Statement. For example, for ORDER BY, you might use something like this:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">ORDER&#160;BY&#160;${columnName}</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Here MyBatis won't modify or escape the string.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          String Substitution can be very useful when the metadata(i.e. table name or column name) in the sql statement is dynamic,
          for example, if you want to 
<fo:inline font-family="monospace" font-size="10pt">select</fo:inline> from a table by any one of its columns, instead of writing code like:
          
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
@Select("select&#160;*&#160;from&#160;user&#160;where&#160;id&#160;=&#160;#{id}")
<fo:block/>
User&#160;findById(@Param("id")&#160;long&#160;id);
<fo:block/>

<fo:block/>
@Select("select&#160;*&#160;from&#160;user&#160;where&#160;name&#160;=&#160;#{name}")
<fo:block/>
User&#160;findByName(@Param("name")&#160;String&#160;name);
<fo:block/>

<fo:block/>
@Select("select&#160;*&#160;from&#160;user&#160;where&#160;email&#160;=&#160;#{email}")
<fo:block/>
User&#160;findByEmail(@Param("email")&#160;String&#160;email);
<fo:block/>

<fo:block/>
//&#160;and&#160;more&#160;"findByXxx"&#160;method
<fo:block/>
</fo:block>

          you can just write:
          
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
@Select("select&#160;*&#160;from&#160;user&#160;where&#160;${column}&#160;=&#160;#{value}")
<fo:block/>
User&#160;findByColumn(@Param("column")&#160;String&#160;column,&#160;@Param("value")&#160;String&#160;value);
<fo:block/>
</fo:block>

          in which the 
<fo:inline font-family="monospace" font-size="10pt">${column}</fo:inline> will be substituted directly and the 
<fo:inline font-family="monospace" font-size="10pt">#{value}</fo:inline> will be "prepared".
          Thus you can just do the same work by:
          
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
User&#160;userOfId1&#160;=&#160;userMapper.findByColumn("id",&#160;1L);
<fo:block/>
User&#160;userOfNameKid&#160;=&#160;userMapper.findByColumn("name",&#160;"kid");
<fo:block/>
User&#160;userOfEmail&#160;=&#160;userMapper.findByColumn("email",&#160;"noone@nowhere.com");
<fo:block/>
</fo:block>

        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          This idea can be applied to substitute the table name as well.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          NOTE It's not safe to accept input from a user and supply
          it to a statement unmodified in this way. This leads to potential SQL Injection attacks and
          therefore you should either disallow user input in these fields, or always perform your own escapes
          and checks.
        </fo:block>

      </fo:block>
</fo:block>


      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.5   Result Maps</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline> element is the most important and powerful element in MyBatis. It's what allows you to
          do away with 90% of the code that JDBC requires to retrieve data from 
<fo:inline font-family="monospace" font-size="10pt">ResultSet</fo:inline>s, and in some cases
          allows you to do things that JDBC does not even support. In fact, to write the equivalent code for
          something like a join mapping for a complex statement could probably span thousands of lines of
          code. The design of the 
<fo:inline font-family="monospace" font-size="10pt">ResultMap</fo:inline>s is such that simple statements don't require explicit result
          mappings at all, and more complex statements require no more than is absolutely necessary to
          describe the relationships.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          You've already seen examples of simple mapped statements that don't have an explicit 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline>. For
          example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="selectUsers"&#160;resultType="map"&gt;
<fo:block/>
&#160;&#160;select&#160;id,&#160;username,&#160;hashedPassword
<fo:block/>
&#160;&#160;from&#160;some_table
<fo:block/>
&#160;&#160;where&#160;id&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Such a statement simply results in all columns being automatically mapped to the keys of a 
<fo:inline font-family="monospace" font-size="10pt">HashMap</fo:inline>,
          as specified by the 
<fo:inline font-family="monospace" font-size="10pt">resultType</fo:inline> attribute. While useful in many cases, a 
<fo:inline font-family="monospace" font-size="10pt">HashMap</fo:inline> doesn't make a very
          good domain model. It's more likely that your application will use JavaBeans or POJOs (Plain Old
          Java Objects) for the domain model. MyBatis supports both. Consider the following JavaBean:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">package&#160;com.someapp.model;
<fo:block/>
public&#160;class&#160;User&#160;{
<fo:block/>
&#160;&#160;private&#160;int&#160;id;
<fo:block/>
&#160;&#160;private&#160;String&#160;username;
<fo:block/>
&#160;&#160;private&#160;String&#160;hashedPassword;
<fo:block/>

<fo:block/>
&#160;&#160;public&#160;int&#160;getId()&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;return&#160;id;
<fo:block/>
&#160;&#160;}
<fo:block/>
&#160;&#160;public&#160;void&#160;setId(int&#160;id)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;this.id&#160;=&#160;id;
<fo:block/>
&#160;&#160;}
<fo:block/>
&#160;&#160;public&#160;String&#160;getUsername()&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;return&#160;username;
<fo:block/>
&#160;&#160;}
<fo:block/>
&#160;&#160;public&#160;void&#160;setUsername(String&#160;username)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;this.username&#160;=&#160;username;
<fo:block/>
&#160;&#160;}
<fo:block/>
&#160;&#160;public&#160;String&#160;getHashedPassword()&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;return&#160;hashedPassword;
<fo:block/>
&#160;&#160;}
<fo:block/>
&#160;&#160;public&#160;void&#160;setHashedPassword(String&#160;hashedPassword)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;this.hashedPassword&#160;=&#160;hashedPassword;
<fo:block/>
&#160;&#160;}
<fo:block/>
}</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Based on the JavaBeans specification, the above class has 3 properties: id, username, and
          hashedPassword. These match up exactly with the column names in the select statement.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Such a JavaBean could be mapped to a 
<fo:inline font-family="monospace" font-size="10pt">ResultSet</fo:inline> just as easily as the 
<fo:inline font-family="monospace" font-size="10pt">HashMap</fo:inline>.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="selectUsers"&#160;resultType="com.someapp.model.User"&gt;
<fo:block/>
&#160;&#160;select&#160;id,&#160;username,&#160;hashedPassword
<fo:block/>
&#160;&#160;from&#160;some_table
<fo:block/>
&#160;&#160;where&#160;id&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          And remember that TypeAliases are your friends. Use them so that you don't have to keep typing the
          fully qualified path of your class out. For example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;!--&#160;In&#160;Config&#160;XML&#160;file&#160;--&gt;
<fo:block/>
&lt;typeAlias&#160;type="com.someapp.model.User"&#160;alias="User"/&gt;
<fo:block/>

<fo:block/>
&lt;!--&#160;In&#160;SQL&#160;Mapping&#160;XML&#160;file&#160;--&gt;
<fo:block/>
&lt;select&#160;id="selectUsers"&#160;resultType="User"&gt;
<fo:block/>
&#160;&#160;select&#160;id,&#160;username,&#160;hashedPassword
<fo:block/>
&#160;&#160;from&#160;some_table
<fo:block/>
&#160;&#160;where&#160;id&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          In these cases MyBatis is automatically creating a 
<fo:inline font-family="monospace" font-size="10pt">ResultMap</fo:inline> behind the scenes to auto-map the columns to
          the JavaBean properties based on name.
          If the column names did not match exactly, you could employ
          select clause aliases (a standard SQL feature) on the column names to make the labels match. For
          example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="selectUsers"&#160;resultType="User"&gt;
<fo:block/>
&#160;&#160;select
<fo:block/>
&#160;&#160;&#160;&#160;user_id&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;"id",
<fo:block/>
&#160;&#160;&#160;&#160;user_name&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;"userName",
<fo:block/>
&#160;&#160;&#160;&#160;hashed_password&#160;&#160;&#160;&#160;&#160;as&#160;"hashedPassword"
<fo:block/>
&#160;&#160;from&#160;some_table
<fo:block/>
&#160;&#160;where&#160;id&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The great thing about 
<fo:inline font-family="monospace" font-size="10pt">ResultMap</fo:inline>s is that you've already learned a lot about them, but you haven't
          even seen one yet! These simple cases don't require any more than you've seen here. Just for example
          sake, let's see what this last example would look like as an external 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline>, as that is another
          way to solve column name mismatches.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="userResultMap"&#160;type="User"&gt;
<fo:block/>
&#160;&#160;&lt;id&#160;property="id"&#160;column="user_id"&#160;/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="username"&#160;column="user_name"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="password"&#160;column="hashed_password"/&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          And the statement that references it uses the 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline> attribute to do so (notice we removed the
          
<fo:inline font-family="monospace" font-size="10pt">resultType</fo:inline> attribute). For example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="selectUsers"&#160;resultMap="userResultMap"&gt;
<fo:block/>
&#160;&#160;select&#160;user_id,&#160;user_name,&#160;hashed_password
<fo:block/>
&#160;&#160;from&#160;some_table
<fo:block/>
&#160;&#160;where&#160;id&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Now if only the world was always that simple.
        </fo:block>


        

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.5.1   Advanced Result Maps</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          MyBatis was created with one idea in mind: Databases aren't always what you want or need them to be.
          While we'd love every database to be perfect 3rd normal form or BCNF, they aren't. And it would be
          great if it was possible to have a single database map perfectly to all of the applications that use
          it, it's not. Result Maps are the answer that MyBatis provides to this problem.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">For example, how would we map this statement?</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;!--&#160;Very&#160;Complex&#160;Statement&#160;--&gt;
<fo:block/>
&lt;select&#160;id="selectBlogDetails"&#160;resultMap="detailedBlogResultMap"&gt;
<fo:block/>
&#160;&#160;select
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;B.id&#160;as&#160;blog_id,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;B.title&#160;as&#160;blog_title,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;B.author_id&#160;as&#160;blog_author_id,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;A.id&#160;as&#160;author_id,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;A.username&#160;as&#160;author_username,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;A.password&#160;as&#160;author_password,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;A.email&#160;as&#160;author_email,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;A.bio&#160;as&#160;author_bio,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;A.favourite_section&#160;as&#160;author_favourite_section,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;P.id&#160;as&#160;post_id,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;P.blog_id&#160;as&#160;post_blog_id,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;P.author_id&#160;as&#160;post_author_id,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;P.created_on&#160;as&#160;post_created_on,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;P.section&#160;as&#160;post_section,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;P.subject&#160;as&#160;post_subject,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;P.draft&#160;as&#160;draft,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;P.body&#160;as&#160;post_body,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;C.id&#160;as&#160;comment_id,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;C.post_id&#160;as&#160;comment_post_id,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;C.name&#160;as&#160;comment_name,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;C.comment&#160;as&#160;comment_text,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;T.id&#160;as&#160;tag_id,
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;T.name&#160;as&#160;tag_name
<fo:block/>
&#160;&#160;from&#160;Blog&#160;B
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;left&#160;outer&#160;join&#160;Author&#160;A&#160;on&#160;B.author_id&#160;=&#160;A.id
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;left&#160;outer&#160;join&#160;Post&#160;P&#160;on&#160;B.id&#160;=&#160;P.blog_id
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;left&#160;outer&#160;join&#160;Comment&#160;C&#160;on&#160;P.id&#160;=&#160;C.post_id
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;left&#160;outer&#160;join&#160;Post_Tag&#160;PT&#160;on&#160;PT.post_id&#160;=&#160;P.id
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;left&#160;outer&#160;join&#160;Tag&#160;T&#160;on&#160;PT.tag_id&#160;=&#160;T.id
<fo:block/>
&#160;&#160;where&#160;B.id&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          You'd probably want to map it to an intelligent object model consisting of a Blog that was written
          by an Author, and has many Posts, each of which may have zero or many Comments and Tags. The
          following is a complete example of a complex ResultMap (assume Author, Blog, Post, Comments and Tags
          are all type aliases). Have a look at it, but don't worry, we're going to go through each step.
          While it may look daunting at first, it's actually very simple.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;!--&#160;Very&#160;Complex&#160;Result&#160;Map&#160;--&gt;
<fo:block/>
&lt;resultMap&#160;id="detailedBlogResultMap"&#160;type="Blog"&gt;
<fo:block/>
&#160;&#160;&lt;constructor&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;idArg&#160;column="blog_id"&#160;javaType="int"/&gt;
<fo:block/>
&#160;&#160;&lt;/constructor&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="title"&#160;column="blog_title"/&gt;
<fo:block/>
&#160;&#160;&lt;association&#160;property="author"&#160;javaType="Author"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;id&#160;property="id"&#160;column="author_id"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="username"&#160;column="author_username"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="password"&#160;column="author_password"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="email"&#160;column="author_email"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="bio"&#160;column="author_bio"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="favouriteSection"&#160;column="author_favourite_section"/&gt;
<fo:block/>
&#160;&#160;&lt;/association&gt;
<fo:block/>
&#160;&#160;&lt;collection&#160;property="posts"&#160;ofType="Post"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;id&#160;property="id"&#160;column="post_id"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="subject"&#160;column="post_subject"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;association&#160;property="author"&#160;javaType="Author"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;collection&#160;property="comments"&#160;ofType="Comment"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;id&#160;property="id"&#160;column="comment_id"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/collection&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;collection&#160;property="tags"&#160;ofType="Tag"&#160;&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;id&#160;property="id"&#160;column="tag_id"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/collection&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;discriminator&#160;javaType="int"&#160;column="draft"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;case&#160;value="1"&#160;resultType="DraftPost"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/discriminator&gt;
<fo:block/>
&#160;&#160;&lt;/collection&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline> element has a number of sub-elements and a structure worthy of some discussion. The
          following is a conceptual view of the 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline> element.
        </fo:block>


        </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.5.2   resultMap</fo:block>

        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            
<fo:inline font-family="monospace" font-size="10pt">constructor</fo:inline> - used for injecting results into the constructor of a class upon instantiation
            

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
              
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">idArg</fo:inline> - ID argument; flagging results as ID will help improve overall performance</fo:block>
</fo:list-item-body>
</fo:list-item>

              
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">arg</fo:inline> - a normal result injected into the constructor</fo:block>
</fo:list-item-body>
</fo:list-item>

            </fo:list-block>

          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">id</fo:inline> – an ID result; flagging results as ID will help improve overall performance</fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">result</fo:inline> – a normal result injected into a field or JavaBean property</fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            
<fo:inline font-family="monospace" font-size="10pt">association</fo:inline> – a complex type association; many results will roll up into this type
            

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
              
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>nested result mappings – associations are 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline>s themselves, or can refer to one
              </fo:block>
</fo:list-item-body>
</fo:list-item>

            </fo:list-block>

          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            
<fo:inline font-family="monospace" font-size="10pt">collection</fo:inline> – a collection of complex types
            

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
              
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>nested result mappings – collections are 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline>s themselves, or can refer to one</fo:block>
</fo:list-item-body>
</fo:list-item>

            </fo:list-block>

          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            
<fo:inline font-family="monospace" font-size="10pt">discriminator</fo:inline> – uses a result value to determine which 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline> to use
            

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
              
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                
<fo:inline font-family="monospace" font-size="10pt">case</fo:inline> – a case is a result map based on some value
                

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>nested result mappings – a case is also a result map itself, and thus can
                    contain many of these same elements, or it can refer to an external resultMap.
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                </fo:list-block>

              </fo:block>
</fo:list-item-body>
</fo:list-item>

            </fo:list-block>

          </fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>


        

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Attribute</fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Description</fo:block>
</fo:table-cell>

            </fo:table-row>

          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">id</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
A unique identifier in this namespace that can be used to reference this result map.</fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">type</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
A fully qualified Java class name, or a type alias (see the table above for the list of built-in type aliases).
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">autoMapping</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
If present, MyBatis will enable or disable the automapping for this ResultMap.
                This attribute overrides the global autoMappingBehavior. Default: unset.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

          
        </fo:table-body>
</fo:table>
</fo:block>

<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif" text-align="center">ResultMap Attributes</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Best Practice Always build ResultMaps incrementally. Unit
          tests really help out here. If you try to
          build a gigantic 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline> like the one above all at once, it's likely you'll get it wrong and it
          will be hard to work with. Start simple, and evolve it a step at a time. And unit test! The downside
          to using frameworks is that they are sometimes a bit of a black box (open source or not). Your best
          bet to ensure that you're achieving the behaviour that you intend, is to write unit tests. It also
          helps to have them when submitting bugs.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The next sections will walk through each of the elements in more detail.
        </fo:block>


        </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.5.3   id &amp; result</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;id&#160;property="id"&#160;column="post_id"/&gt;
<fo:block/>
&lt;result&#160;property="subject"&#160;column="post_subject"/&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          These are the most basic of result mappings. Both 
<fo:inline font-style="italic">id</fo:inline> and
          
<fo:inline font-style="italic">result</fo:inline> map a single column value to a
          single property or field of a simple data type (String, int, double, Date, etc.).
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The only difference between the two is that 
<fo:inline font-style="italic">id</fo:inline>
          will flag the result as an identifier property to be
          used when comparing object instances. This helps to improve general performance, but especially
          performance of caching and nested result mapping (i.e. join mapping).
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Each has a number of attributes:
        </fo:block>


        

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Attribute</fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Description</fo:block>
</fo:table-cell>

            </fo:table-row>

          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">property</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                The field or property to map the column result to. If a matching JavaBeans property
                exists for
                the given name, then that will be used. Otherwise, MyBatis will look for a field of the
                given
                name. In both cases you can use complex property navigation using the usual dot
                notation. For
                example, you can map to something simple like: 
<fo:inline font-family="monospace" font-size="10pt">username</fo:inline>, or to something more
                complicated
                like: 
<fo:inline font-family="monospace" font-size="10pt">address.street.number</fo:inline>.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">column</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                The column name from the database, or the aliased column label. This is the same string
                that
                would normally be passed to 
<fo:inline font-family="monospace" font-size="10pt">resultSet.getString(columnName)</fo:inline>.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">javaType</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                A fully qualified Java class name, or a type alias (see the table above for the list of
                built-in type aliases). MyBatis can usually figure out the type if you're mapping to a
                JavaBean. However, if you are mapping to a HashMap, then you should specify the javaType
                explicitly to ensure the desired behaviour.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">jdbcType</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                The JDBC Type from the list of supported types that follows this table. The JDBC type is
                only required for nullable columns upon insert, update or delete. This is a JDBC
                requirement, not a MyBatis one. So even if you were coding JDBC directly, you'd need to
                specify this type – but only for nullable values.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">typeHandler</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                We discussed default type handlers previously in this documentation. Using this property
                you can override the default type handler on a mapping-by-mapping basis. The value is
                either a fully qualified class name of a TypeHandler implementation, or a type alias.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

          
        </fo:table-body>
</fo:table>
</fo:block>

<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif" text-align="center">Id and Result Attributes</fo:block>


        </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.5.4   Supported JDBC Types</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          For future reference, MyBatis supports the following JDBC Types via the included JdbcType
          enumeration.
        </fo:block>


        

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
          
<fo:table-row keep-together="auto" keep-with-next="auto">
            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">BIT</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">FLOAT</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">CHAR</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">TIMESTAMP</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="5">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">OTHER</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="6">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">UNDEFINED</fo:inline></fo:block>
</fo:table-cell>

          </fo:table-row>

          
<fo:table-row keep-together="auto" keep-with-next="auto">
            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">TINYINT</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">REAL</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">VARCHAR</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">BINARY</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="5">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">BLOB</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="6">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">NVARCHAR</fo:inline></fo:block>
</fo:table-cell>

          </fo:table-row>

          
<fo:table-row keep-together="auto" keep-with-next="auto">
            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">SMALLINT</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">DOUBLE</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">LONGVARCHAR</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">VARBINARY</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="5">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">CLOB</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="6">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">NCHAR</fo:inline></fo:block>
</fo:table-cell>

          </fo:table-row>

          
<fo:table-row keep-together="auto" keep-with-next="auto">
            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">INTEGER</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">NUMERIC</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">DATE</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">LONGVARBINARY</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="5">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">BOOLEAN</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="6">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">NCLOB</fo:inline></fo:block>
</fo:table-cell>

          </fo:table-row>

          
<fo:table-row keep-together="auto" keep-with-next="auto">
            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">BIGINT</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">DECIMAL</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">TIME</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">NULL</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="5">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">CURSOR</fo:inline></fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="6">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">ARRAY</fo:inline></fo:block>
</fo:table-cell>

          </fo:table-row>

        </fo:table-body>
</fo:table>
</fo:block>


        </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.5.5   constructor</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          While properties will work for most Data Transfer Object (DTO) type classes, and likely most of your
          domain model, there may be some cases where you want to use immutable classes. Often tables that
          contain reference or lookup data that rarely or never changes is suited to immutable classes.
          Constructor injection allows you to set values on a class upon instantiation, without exposing
          public methods. MyBatis also supports private properties and private JavaBeans properties to achieve
          this, but some people prefer Constructor injection. The
          
<fo:inline font-style="italic">constructor</fo:inline>
          element enables this.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Consider the following constructor:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">public&#160;class&#160;User&#160;{
<fo:block/>
&#160;&#160;&#160;//...
<fo:block/>
&#160;&#160;&#160;public&#160;User(Integer&#160;id,&#160;String&#160;username,&#160;int&#160;age)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;&#160;//...
<fo:block/>
&#160;&#160;}
<fo:block/>
//...
<fo:block/>
}</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          In order to inject the results into the constructor, MyBatis needs to identify the constructor for somehow.
          In the following example, MyBatis searches a constructor declared with three parameters: 
<fo:inline font-family="monospace" font-size="10pt">java.lang.Integer</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">java.lang.String</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">int</fo:inline> in this order.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;constructor&gt;
<fo:block/>
&#160;&#160;&#160;&lt;idArg&#160;column="id"&#160;javaType="int"/&gt;
<fo:block/>
&#160;&#160;&#160;&lt;arg&#160;column="username"&#160;javaType="String"/&gt;
<fo:block/>
&#160;&#160;&#160;&lt;arg&#160;column="age"&#160;javaType="_int"/&gt;
<fo:block/>
&lt;/constructor&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          When you are dealing with a constructor with many parameters, maintaining the order of arg elements is error-prone.

<fo:block />
          Since 3.4.3, by specifying the name of each parameter, you can write arg elements in any order. To reference constructor parameters by their names, you can either add 
<fo:inline font-family="monospace" font-size="10pt">@Param</fo:inline> annotation to them or compile the project with '-parameters' compiler option and enable 
<fo:inline font-family="monospace" font-size="10pt">useActualParamName</fo:inline> (this option is enabled by default).
          The following example is valid for the same constructor even though the order of the second and the third parameters does not match with the declared order.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;constructor&gt;
<fo:block/>
&#160;&#160;&#160;&lt;idArg&#160;column="id"&#160;javaType="int"&#160;name="id"&#160;/&gt;
<fo:block/>
&#160;&#160;&#160;&lt;arg&#160;column="age"&#160;javaType="_int"&#160;name="age"&#160;/&gt;
<fo:block/>
&#160;&#160;&#160;&lt;arg&#160;column="username"&#160;javaType="String"&#160;name="username"&#160;/&gt;
<fo:block/>
&lt;/constructor&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          
<fo:inline font-family="monospace" font-size="10pt">javaType</fo:inline> can be omitted if there is a property with the same name and type.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The rest of the attributes and rules are the same as for the regular id and result elements.
        </fo:block>


        

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Attribute</fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Description</fo:block>
</fo:table-cell>

            </fo:table-row>

          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">column</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                The column name from the database, or the aliased column label. This is the same string
                that would normally be passed to 
<fo:inline font-family="monospace" font-size="10pt">resultSet.getString(columnName)</fo:inline>.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">javaType</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                A fully qualified Java class name, or a type alias (see the table above for the list of
                built-in type aliases). MyBatis can usually figure out the type if you're mapping to a
                JavaBean. However, if you are mapping to a HashMap, then you should specify the javaType
                explicitly to ensure the desired behaviour.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">jdbcType</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                The JDBC Type from the list of supported types that follows this table. The JDBC type is
                only required for nullable columns upon insert, update or delete. This is a JDBC
                requirement, not an MyBatis one. So even if you were coding JDBC directly, you'd need to
                specify this type – but only for nullable values.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">typeHandler</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                We discussed default type handlers previously in this documentation. Using this property
                you can override the default type handler on a mapping-by-mapping basis. The value is
                either a fully qualified class name of a 
<fo:inline font-family="monospace" font-size="10pt">TypeHandler</fo:inline> implementation, or a type alias.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">select</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                The ID of another mapped statement that will load the complex type required by this
                property mapping. The values retrieved from columns specified in the column attribute
                will be passed to the target select statement as parameters. See the Association element
                for more.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                This is the ID of a ResultMap that can map the nested results of this argument into an
                appropriate object graph. This is an alternative to using a call to another select
                statement. It allows you to join multiple tables together into a single 
<fo:inline font-family="monospace" font-size="10pt">ResultSet</fo:inline>. Such
                a 
<fo:inline font-family="monospace" font-size="10pt">ResultSet</fo:inline> will contain duplicated, repeating groups of data that needs to be
                decomposed and mapped properly to a nested object graph. To facilitate this, MyBatis
                lets you "chain" result maps together, to deal with the nested results. See the
                Association element below for more.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">name</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                The name of the constructor parameter. Specifying name allows you to write arg elements in any order. See the above explanation. Since 3.4.3.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

          
        </fo:table-body>
</fo:table>
</fo:block>


        </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.5.6   association</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;association&#160;property="author"&#160;javaType="Author"&gt;
<fo:block/>
&#160;&#160;&lt;id&#160;property="id"&#160;column="author_id"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="username"&#160;column="author_username"/&gt;
<fo:block/>
&lt;/association&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The association element deals with a "has-one" type relationship. For example, in our example, a
          Blog has one Author. An association mapping works mostly like any other result. You specify the
          target property, the 
<fo:inline font-family="monospace" font-size="10pt">javaType</fo:inline> of the property (which MyBatis
          can figure out most of the time), the jdbcType if necessary and a typeHandler if you want to
          override the retrieval of the result values.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Where the association differs is that you need to tell MyBatis how to load the association. MyBatis
          can do so in two different ways:
        </fo:block>


        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            Nested Select: By executing another mapped SQL statement that returns the complex type desired.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            Nested Results: By using nested result mappings to deal with repeating subsets of joined
            results.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          First, let's examine the properties of the element. As you'll see, it differs from a normal result
          mapping only by the select and resultMap attributes.
        </fo:block>


        

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Attribute</fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Description</fo:block>
</fo:table-cell>

            </fo:table-row>

          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">property</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                The field or property to map the column result to. If a matching JavaBeans property
                exists for the given name, then that will be used. Otherwise, MyBatis will look for a
                field of the given name. In both cases you can use complex property navigation using the
                usual dot notation. For example, you can map to something simple like: 
<fo:inline font-family="monospace" font-size="10pt">username</fo:inline>, or to
                something more complicated like: 
<fo:inline font-family="monospace" font-size="10pt">address.street.number</fo:inline>.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">javaType</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                A fully qualified Java class name, or a type alias (see the table above for the list of
                built- in type aliases). MyBatis can usually figure out the type if you're mapping to a
                JavaBean. However, if you are mapping to a 
<fo:inline font-family="monospace" font-size="10pt">HashMap</fo:inline>, then you should specify the javaType
                explicitly to ensure the desired behaviour.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">jdbcType</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                The JDBC Type from the list of supported types that follows this table. The JDBC type is
                only required for nullable columns upon insert, update or delete. This is a JDBC
                requirement, not an MyBatis one. So even if you were coding JDBC directly, you'd need to
                specify this type – but only for nullable values.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">typeHandler</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                We discussed default type handlers previously in this documentation. Using this property
                you can override the default type handler on a mapping-by-mapping basis. The value is
                either a fully qualified class name of a TypeHandler implementation, or a type alias.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

          
        </fo:table-body>
</fo:table>
</fo:block>


        </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.5.7   Nested Select for Association</fo:block>


        

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Attribute</fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Description</fo:block>
</fo:table-cell>

            </fo:table-row>

          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">column</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                The column name from the database, or the aliased column label that holds the value that will be passed to the nested
                statement as an input parameter.
                This is the same string that would normally be passed to 
<fo:inline font-family="monospace" font-size="10pt">resultSet.getString(columnName)</fo:inline>.
                Note: To deal with composite keys, you can specify multiple column names to pass to the
                nested select statement by using the syntax 
<fo:inline font-family="monospace" font-size="10pt">column="{prop1=col1,prop2=col2}"</fo:inline>. This will
                cause 
<fo:inline font-family="monospace" font-size="10pt">prop1</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">prop2</fo:inline> to be set against the parameter object for the target nested
                select statement.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">select</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                The ID of another mapped statement that will load the complex type required by this
                property mapping. The values retrieved from columns specified in the column attribute
                will be passed to the target select statement as parameters. A detailed example follows
                this table.
                Note: To deal with composite keys, you can specify multiple column names to pass to the
                nested select statement by using the syntax 
<fo:inline font-family="monospace" font-size="10pt">column="{prop1=col1,prop2=col2}"</fo:inline>. This will
                cause 
<fo:inline font-family="monospace" font-size="10pt">prop1</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">prop2</fo:inline> to be set against the parameter object for the target nested
                select statement.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">fetchType</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Optional. Valid values are 
<fo:inline font-family="monospace" font-size="10pt">lazy</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">eager</fo:inline>. If present, it supersedes
                the global configuration parameter 
<fo:inline font-family="monospace" font-size="10pt">lazyLoadingEnabled</fo:inline> for this mapping.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

          
        </fo:table-body>
</fo:table>
</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          For example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="blogResult"&#160;type="Blog"&gt;
<fo:block/>
&#160;&#160;&lt;association&#160;property="author"&#160;column="author_id"&#160;javaType="Author"&#160;select="selectAuthor"/&gt;
<fo:block/>
&lt;/resultMap&gt;
<fo:block/>

<fo:block/>
&lt;select&#160;id="selectBlog"&#160;resultMap="blogResult"&gt;
<fo:block/>
&#160;&#160;SELECT&#160;*&#160;FROM&#160;BLOG&#160;WHERE&#160;ID&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;
<fo:block/>

<fo:block/>
&lt;select&#160;id="selectAuthor"&#160;resultType="Author"&gt;
<fo:block/>
&#160;&#160;SELECT&#160;*&#160;FROM&#160;AUTHOR&#160;WHERE&#160;ID&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          That's it. We have two select statements: one to load the Blog, the other to load the Author, and
          the Blog's resultMap describes that the 
<fo:inline font-family="monospace" font-size="10pt">selectAuthor</fo:inline> statement should be used to load its author
          property.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          All other properties will be loaded automatically assuming their column and property names match.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          While this approach is simple, it will not perform well for large data sets or lists. This problem
          is known as the "N+1 Selects Problem". In a nutshell, the N+1 selects problem is caused like this:
        </fo:block>


        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>You execute a single SQL statement to retrieve a list of records (the "+1").</fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>For each record returned, you execute a select statement to load details for each (the "N").
          </fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          This problem could result in hundreds or thousands of SQL statements to be executed. This is not
          always desirable.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The upside is that MyBatis can lazy load such queries, thus you might be spared the cost of these
          statements all at once. However, if you load such a list and then immediately iterate through it to
          access the nested data, you will invoke all of the lazy loads, and thus performance could be very
          bad.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          And so, there is another way.
        </fo:block>


       </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.5.8   Nested Results for Association</fo:block>


        

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Attribute</fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Description</fo:block>
</fo:table-cell>

            </fo:table-row>

          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                This is the ID of a ResultMap that can map the nested results of this association into
                an appropriate object graph. This is an alternative to using a call to another select
                statement. It allows you to join multiple tables together into a single ResultSet. Such
                a ResultSet will contain duplicated, repeating groups of data that needs to be
                decomposed and mapped properly to a nested object graph. To facilitate this, MyBatis
                lets you "chain" result maps together, to deal with the nested results. An example will
                be far easier to follow, and one follows this table.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">columnPrefix</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                When joining multiple tables, you would have to use column alias to avoid duplicated
                column names in the ResultSet. Specifying columnPrefix allows you to map such columns
                to an external resultMap. Please see the example explained later in this section.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">notNullColumn</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                By default a child object is created only if at least one of the columns mapped to the child's properties
                is non null. With this attribute you can change this behaviour by specifiying which columns must have a value
                so MyBatis will create a child object only if any of those columns is not null. Multiple column names can be
                specified using a comma as a separator. Default value: unset.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">autoMapping</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
If present, MyBatis will enable or disable automapping when mapping the result to this property.
                This attribute overrides the global autoMappingBehavior.
                Note that it has no effect on an external resultMap, so it is pointless to use it with 
<fo:inline font-family="monospace" font-size="10pt">select</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline> attribute. Default value: unset.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

          
        </fo:table-body>
</fo:table>
</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          You've already seen a very complicated example of nested associations above. The following is a far
          simpler example to demonstrate how this works. Instead of executing a separate statement, we'll join
          the Blog and Author tables together, like so:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="selectBlog"&#160;resultMap="blogResult"&gt;
<fo:block/>
&#160;&#160;select
<fo:block/>
&#160;&#160;&#160;&#160;B.id&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;blog_id,
<fo:block/>
&#160;&#160;&#160;&#160;B.title&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;blog_title,
<fo:block/>
&#160;&#160;&#160;&#160;B.author_id&#160;&#160;&#160;&#160;&#160;as&#160;blog_author_id,
<fo:block/>
&#160;&#160;&#160;&#160;A.id&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;author_id,
<fo:block/>
&#160;&#160;&#160;&#160;A.username&#160;&#160;&#160;&#160;&#160;&#160;as&#160;author_username,
<fo:block/>
&#160;&#160;&#160;&#160;A.password&#160;&#160;&#160;&#160;&#160;&#160;as&#160;author_password,
<fo:block/>
&#160;&#160;&#160;&#160;A.email&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;author_email,
<fo:block/>
&#160;&#160;&#160;&#160;A.bio&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;author_bio
<fo:block/>
&#160;&#160;from&#160;Blog&#160;B&#160;left&#160;outer&#160;join&#160;Author&#160;A&#160;on&#160;B.author_id&#160;=&#160;A.id
<fo:block/>
&#160;&#160;where&#160;B.id&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Notice the join, as well as the care taken to ensure that all results are aliased with a unique and
          clear name. This makes mapping far easier. Now we can map the results:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="blogResult"&#160;type="Blog"&gt;
<fo:block/>
&#160;&#160;&lt;id&#160;property="id"&#160;column="blog_id"&#160;/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="title"&#160;column="blog_title"/&gt;
<fo:block/>
&#160;&#160;&lt;association&#160;property="author"&#160;resultMap="authorResult"&#160;/&gt;
<fo:block/>
&lt;/resultMap&gt;
<fo:block/>

<fo:block/>
&lt;resultMap&#160;id="authorResult"&#160;type="Author"&gt;
<fo:block/>
&#160;&#160;&lt;id&#160;property="id"&#160;column="author_id"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="username"&#160;column="author_username"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="password"&#160;column="author_password"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="email"&#160;column="author_email"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="bio"&#160;column="author_bio"/&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          In the example above you can see at the Blog's "author" association delegates to the "authorResult"
          resultMap to load the Author instance.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Very Important: id elements play a very important role in Nested
          Result mapping. You should always
          specify one or more properties that can be used to uniquely identify the results. The truth is that
          MyBatis will still work if you leave it out, but at a severe performance cost. Choose as few
          properties as possible that can uniquely identify the result. The primary key is an obvious choice
          (even if composite).
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Now, the above example used an external resultMap element to map the association. This makes the
          Author resultMap reusable. However, if you have no need to reuse it, or if you simply prefer to
          co-locate your result mappings into a single descriptive resultMap, you can nest the association
          result mappings. Here's the same example using this approach:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="blogResult"&#160;type="Blog"&gt;
<fo:block/>
&#160;&#160;&lt;id&#160;property="id"&#160;column="blog_id"&#160;/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="title"&#160;column="blog_title"/&gt;
<fo:block/>
&#160;&#160;&lt;association&#160;property="author"&#160;javaType="Author"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;id&#160;property="id"&#160;column="author_id"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="username"&#160;column="author_username"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="password"&#160;column="author_password"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="email"&#160;column="author_email"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="bio"&#160;column="author_bio"/&gt;
<fo:block/>
&#160;&#160;&lt;/association&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          What if the blog has a co-author?
          The select statement would look like:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="selectBlog"&#160;resultMap="blogResult"&gt;
<fo:block/>
&#160;&#160;select
<fo:block/>
&#160;&#160;&#160;&#160;B.id&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;blog_id,
<fo:block/>
&#160;&#160;&#160;&#160;B.title&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;blog_title,
<fo:block/>
&#160;&#160;&#160;&#160;A.id&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;author_id,
<fo:block/>
&#160;&#160;&#160;&#160;A.username&#160;&#160;&#160;&#160;&#160;&#160;as&#160;author_username,
<fo:block/>
&#160;&#160;&#160;&#160;A.password&#160;&#160;&#160;&#160;&#160;&#160;as&#160;author_password,
<fo:block/>
&#160;&#160;&#160;&#160;A.email&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;author_email,
<fo:block/>
&#160;&#160;&#160;&#160;A.bio&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;author_bio,
<fo:block/>
&#160;&#160;&#160;&#160;CA.id&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;co_author_id,
<fo:block/>
&#160;&#160;&#160;&#160;CA.username&#160;&#160;&#160;&#160;&#160;as&#160;co_author_username,
<fo:block/>
&#160;&#160;&#160;&#160;CA.password&#160;&#160;&#160;&#160;&#160;as&#160;co_author_password,
<fo:block/>
&#160;&#160;&#160;&#160;CA.email&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;co_author_email,
<fo:block/>
&#160;&#160;&#160;&#160;CA.bio&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;co_author_bio
<fo:block/>
&#160;&#160;from&#160;Blog&#160;B
<fo:block/>
&#160;&#160;left&#160;outer&#160;join&#160;Author&#160;A&#160;on&#160;B.author_id&#160;=&#160;A.id
<fo:block/>
&#160;&#160;left&#160;outer&#160;join&#160;Author&#160;CA&#160;on&#160;B.co_author_id&#160;=&#160;CA.id
<fo:block/>
&#160;&#160;where&#160;B.id&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Recall that the resultMap for Author is defined as follows.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="authorResult"&#160;type="Author"&gt;
<fo:block/>
&#160;&#160;&lt;id&#160;property="id"&#160;column="author_id"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="username"&#160;column="author_username"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="password"&#160;column="author_password"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="email"&#160;column="author_email"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="bio"&#160;column="author_bio"/&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Because the column names in the results differ from the columns defined in the resultMap,
          you need to specify 
<fo:inline font-family="monospace" font-size="10pt">columnPrefix</fo:inline> to reuse the resultMap for mapping co-author results.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="blogResult"&#160;type="Blog"&gt;
<fo:block/>
&#160;&#160;&lt;id&#160;property="id"&#160;column="blog_id"&#160;/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="title"&#160;column="blog_title"/&gt;
<fo:block/>
&#160;&#160;&lt;association&#160;property="author"
<fo:block/>
&#160;&#160;&#160;&#160;resultMap="authorResult"&#160;/&gt;
<fo:block/>
&#160;&#160;&lt;association&#160;property="coAuthor"
<fo:block/>
&#160;&#160;&#160;&#160;resultMap="authorResult"
<fo:block/>
&#160;&#160;&#160;&#160;columnPrefix="co_"&#160;/&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


        </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.5.9   Multiple ResultSets for Association</fo:block>


        

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Attribute</fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Description</fo:block>
</fo:table-cell>

            </fo:table-row>

          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">column</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                When using multiple resultset this attribute specifies the columns (separated by commas) that will be correlated
                with the 
<fo:inline font-family="monospace" font-size="10pt">foreignColumn</fo:inline> to identify the parent and the child of a relationship.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">foreignColumn</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Identifies the name of the columns that contains the foreign keys which values will be matched against the
                values of the columns specified in the 
<fo:inline font-family="monospace" font-size="10pt">column</fo:inline> attibute of the parent type.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">resultSet</fo:inline></fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Identifies the name of the result set where this complex type will be loaded from.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

          
        </fo:table-body>
</fo:table>
</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Starting from version 3.2.3 MyBatis provides yet another way to solve the N+1 problem.</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Some databases allow stored procedures to return more than one resultset or execute more than one statement
         at once and return a resultset per each one. This can be used to hit the database just once
         and return related data without using a join.</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">In the example, the stored procedure executes the following queries and returns two result sets.
          The first will contain Blogs and the second Authors.</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">SELECT&#160;*&#160;FROM&#160;BLOG&#160;WHERE&#160;ID&#160;=&#160;#{id}
<fo:block/>

<fo:block/>
SELECT&#160;*&#160;FROM&#160;AUTHOR&#160;WHERE&#160;ID&#160;=&#160;#{id}</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">A name must be given to each result set by adding a
        
<fo:inline font-family="monospace" font-size="10pt">resultSets</fo:inline> attribute to the mapped statement with a list of names separated by commas.</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="selectBlog"&#160;resultSets="blogs,authors"&#160;resultMap="blogResult"&#160;statementType="CALLABLE"&gt;
<fo:block/>
&#160;&#160;{call&#160;getBlogsAndAuthors(#{id,jdbcType=INTEGER,mode=IN})}
<fo:block/>
&lt;/select&gt;
<fo:block/>
</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
        Now we can specify that the data to fill the "author" association comes in the "authors" result set:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="blogResult"&#160;type="Blog"&gt;
<fo:block/>
&#160;&#160;&lt;id&#160;property="id"&#160;column="id"&#160;/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="title"&#160;column="title"/&gt;
<fo:block/>
&#160;&#160;&lt;association&#160;property="author"&#160;javaType="Author"&#160;resultSet="authors"&#160;column="author_id"&#160;foreignColumn="id"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;id&#160;property="id"&#160;column="id"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="username"&#160;column="username"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="password"&#160;column="password"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="email"&#160;column="email"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="bio"&#160;column="bio"/&gt;
<fo:block/>
&#160;&#160;&lt;/association&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          You've seen above how to deal with a "has one" type association. But what about "has many"? That's
          the subject of the next section.
        </fo:block>


        </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.5.10   collection</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;collection&#160;property="posts"&#160;ofType="domain.blog.Post"&gt;
<fo:block/>
&#160;&#160;&lt;id&#160;property="id"&#160;column="post_id"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="subject"&#160;column="post_subject"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="body"&#160;column="post_body"/&gt;
<fo:block/>
&lt;/collection&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The collection element works almost identically to the association. In fact, it's so similar, to
          document the similarities would be redundant. So let's focus on the differences.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          To continue with our example above, a Blog only had one Author. But a Blog has many Posts. On the
          blog class, this would be represented by something like:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">private&#160;List&lt;Post&gt;&#160;posts;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          To map a set of nested results to a List like this, we use the collection element. Just like the
          association element, we can use a nested select, or nested results from a join.
        </fo:block>


        </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.5.11   Nested Select for Collection</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          First, let's look at using a nested select to load the Posts for the Blog.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="blogResult"&#160;type="Blog"&gt;
<fo:block/>
&#160;&#160;&lt;collection&#160;property="posts"&#160;javaType="ArrayList"&#160;column="id"&#160;ofType="Post"&#160;select="selectPostsForBlog"/&gt;
<fo:block/>
&lt;/resultMap&gt;
<fo:block/>

<fo:block/>
&lt;select&#160;id="selectBlog"&#160;resultMap="blogResult"&gt;
<fo:block/>
&#160;&#160;SELECT&#160;*&#160;FROM&#160;BLOG&#160;WHERE&#160;ID&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;
<fo:block/>

<fo:block/>
&lt;select&#160;id="selectPostsForBlog"&#160;resultType="Post"&gt;
<fo:block/>
&#160;&#160;SELECT&#160;*&#160;FROM&#160;POST&#160;WHERE&#160;BLOG_ID&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          There are a number things you'll notice immediately, but for the most part it looks very similar to
          the association element we learned about above. First, you'll notice that we're using the collection
          element. Then you'll notice that there's a new "ofType" attribute. This attribute is necessary to
          distinguish between the JavaBean (or field) property type and the type that the collection contains.
          So you could read the following mapping like this:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;collection&#160;property="posts"&#160;javaType="ArrayList"&#160;column="id"&#160;ofType="Post"&#160;select="selectPostsForBlog"/&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Read as: "A collection of posts in an ArrayList of type Post."
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The 
<fo:inline font-family="monospace" font-size="10pt">javaType</fo:inline> attribute is really unnecessary, as MyBatis will figure this out for you in most cases.
          So you can often shorten this down to simply:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;collection&#160;property="posts"&#160;column="id"&#160;ofType="Post"&#160;select="selectPostsForBlog"/&gt;</fo:block>


        </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.5.12   Nested Results for Collection</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          By this point, you can probably guess how nested results for a collection will work, because it's
          exactly the same as an association, but with the same addition of the 
<fo:inline font-family="monospace" font-size="10pt">ofType</fo:inline> attribute applied.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">First, let's look at the SQL:</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="selectBlog"&#160;resultMap="blogResult"&gt;
<fo:block/>
&#160;&#160;select
<fo:block/>
&#160;&#160;B.id&#160;as&#160;blog_id,
<fo:block/>
&#160;&#160;B.title&#160;as&#160;blog_title,
<fo:block/>
&#160;&#160;B.author_id&#160;as&#160;blog_author_id,
<fo:block/>
&#160;&#160;P.id&#160;as&#160;post_id,
<fo:block/>
&#160;&#160;P.subject&#160;as&#160;post_subject,
<fo:block/>
&#160;&#160;P.body&#160;as&#160;post_body,
<fo:block/>
&#160;&#160;from&#160;Blog&#160;B
<fo:block/>
&#160;&#160;left&#160;outer&#160;join&#160;Post&#160;P&#160;on&#160;B.id&#160;=&#160;P.blog_id
<fo:block/>
&#160;&#160;where&#160;B.id&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Again, we've joined the Blog and Post tables, and have taken care to ensure quality result column
          labels for simple mapping. Now mapping a Blog with its collection of Post mappings is as simple as:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="blogResult"&#160;type="Blog"&gt;
<fo:block/>
&#160;&#160;&lt;id&#160;property="id"&#160;column="blog_id"&#160;/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="title"&#160;column="blog_title"/&gt;
<fo:block/>
&#160;&#160;&lt;collection&#160;property="posts"&#160;ofType="Post"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;id&#160;property="id"&#160;column="post_id"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="subject"&#160;column="post_subject"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="body"&#160;column="post_body"/&gt;
<fo:block/>
&#160;&#160;&lt;/collection&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Again, remember the importance of the id elements here, or read the association section above if you
          haven't already.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Also, if you prefer the longer form that allows for more reusability of your result maps, you can
          use the following alternative mapping:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="blogResult"&#160;type="Blog"&gt;
<fo:block/>
&#160;&#160;&lt;id&#160;property="id"&#160;column="blog_id"&#160;/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="title"&#160;column="blog_title"/&gt;
<fo:block/>
&#160;&#160;&lt;collection&#160;property="posts"&#160;ofType="Post"&#160;resultMap="blogPostResult"&#160;columnPrefix="post_"/&gt;
<fo:block/>
&lt;/resultMap&gt;
<fo:block/>

<fo:block/>
&lt;resultMap&#160;id="blogPostResult"&#160;type="Post"&gt;
<fo:block/>
&#160;&#160;&lt;id&#160;property="id"&#160;column="id"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="subject"&#160;column="subject"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="body"&#160;column="body"/&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


        </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.5.13   Multiple ResultSets for Collection</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          As we did for the association, we can call a stored procedure that executes two queries and returns two result sets, one with Blogs
          and another with Posts:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">SELECT&#160;*&#160;FROM&#160;BLOG&#160;WHERE&#160;ID&#160;=&#160;#{id}
<fo:block/>

<fo:block/>
SELECT&#160;*&#160;FROM&#160;POST&#160;WHERE&#160;BLOG_ID&#160;=&#160;#{id}</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">A name must be given to each result set by adding a
        
<fo:inline font-family="monospace" font-size="10pt">resultSets</fo:inline> attribute to the mapped statement with a list of names separated by commas.</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="selectBlog"&#160;resultSets="blogs,posts"&#160;resultMap="blogResult"&gt;
<fo:block/>
&#160;&#160;{call&#160;getBlogsAndPosts(#{id,jdbcType=INTEGER,mode=IN})}
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">We specify that the "posts" collection will be filled out of data contained in the result set named "posts":</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="blogResult"&#160;type="Blog"&gt;
<fo:block/>
&#160;&#160;&lt;id&#160;property="id"&#160;column="id"&#160;/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="title"&#160;column="title"/&gt;
<fo:block/>
&#160;&#160;&lt;collection&#160;property="posts"&#160;ofType="Post"&#160;resultSet="posts"&#160;column="id"&#160;foreignColumn="blog_id"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;id&#160;property="id"&#160;column="id"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="subject"&#160;column="subject"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;result&#160;property="body"&#160;column="body"/&gt;
<fo:block/>
&#160;&#160;&lt;/collection&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          NOTE There's no limit to the depth, breadth or
          combinations of the associations and collections that you map.
          You should keep performance in mind when mapping them. Unit testing and performance
          testing of your application goes a long way toward discovering the best approach for your
          application. The nice thing is that MyBatis lets you change your mind later, with very little (if
          any) impact to your code.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Advanced association and collection mapping is a deep subject. Documentation can only get you so
          far. With a little practice, it will all become clear very quickly.
        </fo:block>


        </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.5.14   discriminator</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;discriminator&#160;javaType="int"&#160;column="draft"&gt;
<fo:block/>
&#160;&#160;&lt;case&#160;value="1"&#160;resultType="DraftPost"/&gt;
<fo:block/>
&lt;/discriminator&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Sometimes a single database query might return result sets of many different (but hopefully somewhat
          related) data types. The discriminator element was designed to deal with this situation, and others,
          including class inheritance hierarchies. The discriminator is pretty simple to understand, as it
          behaves much like a switch statement in Java.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          A discriminator definition specifies column and javaType attributes. The column is where MyBatis
          will look for the value to compare. The javaType is required to ensure the proper kind of equality
          test is performed (although String would probably work for almost any situation). For example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="vehicleResult"&#160;type="Vehicle"&gt;
<fo:block/>
&#160;&#160;&lt;id&#160;property="id"&#160;column="id"&#160;/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="vin"&#160;column="vin"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="year"&#160;column="year"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="make"&#160;column="make"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="model"&#160;column="model"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="color"&#160;column="color"/&gt;
<fo:block/>
&#160;&#160;&lt;discriminator&#160;javaType="int"&#160;column="vehicle_type"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;case&#160;value="1"&#160;resultMap="carResult"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;case&#160;value="2"&#160;resultMap="truckResult"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;case&#160;value="3"&#160;resultMap="vanResult"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;case&#160;value="4"&#160;resultMap="suvResult"/&gt;
<fo:block/>
&#160;&#160;&lt;/discriminator&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          In this example, MyBatis would retrieve each record from the result set and compare its vehicle type
          value. If it matches any of the discriminator cases, then it will use the 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline> specified by the
          case. This is done exclusively, so in other words, the rest of the resultMap is ignored (unless it
          is extended, which we talk about in a second). If none of the cases match, then MyBatis simply uses
          the resultMap as defined outside of the discriminator block. So, if the carResult was declared as
          follows:
        </fo:block>



        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="carResult"&#160;type="Car"&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="doorCount"&#160;column="door_count"&#160;/&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Then ONLY the doorCount property would be loaded. This is done to allow completely independent
          groups of discriminator cases, even ones that have no relationship to the parent resultMap. In this
          case we do of course know that there's a relationship between cars and vehicles, as a Car is-a
          Vehicle. Therefore, we want the rest of the properties loaded too. One simple change to the
          resultMap and we're set to go.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="carResult"&#160;type="Car"&#160;extends="vehicleResult"&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="doorCount"&#160;column="door_count"&#160;/&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Now all of the properties from both the vehicleResult and carResult will be loaded.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Once again though, some may find this external definition of maps somewhat tedious. Therefore
          there's an alternative syntax for those that prefer a more concise mapping style. For example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="vehicleResult"&#160;type="Vehicle"&gt;
<fo:block/>
&#160;&#160;&lt;id&#160;property="id"&#160;column="id"&#160;/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="vin"&#160;column="vin"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="year"&#160;column="year"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="make"&#160;column="make"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="model"&#160;column="model"/&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="color"&#160;column="color"/&gt;
<fo:block/>
&#160;&#160;&lt;discriminator&#160;javaType="int"&#160;column="vehicle_type"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;case&#160;value="1"&#160;resultType="carResult"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;result&#160;property="doorCount"&#160;column="door_count"&#160;/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/case&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;case&#160;value="2"&#160;resultType="truckResult"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;result&#160;property="boxSize"&#160;column="box_size"&#160;/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;result&#160;property="extendedCab"&#160;column="extended_cab"&#160;/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/case&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;case&#160;value="3"&#160;resultType="vanResult"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;result&#160;property="powerSlidingDoor"&#160;column="power_sliding_door"&#160;/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/case&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;case&#160;value="4"&#160;resultType="suvResult"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;result&#160;property="allWheelDrive"&#160;column="all_wheel_drive"&#160;/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/case&gt;
<fo:block/>
&#160;&#160;&lt;/discriminator&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          NOTE Remember
          that these are all Result Maps, and if you don't specify any results at all, then MyBatis will
          automatically match up columns and properties for you. So most of these examples are more verbose
          than they really need to be. That said, most databases are kind of complex and it's unlikely that
          we'll be able to depend on that for all cases.
        </fo:block>


      </fo:block>
</fo:block>

      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.6   Auto-mapping</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          As you have already seen in the previous sections, in simple cases MyBatis can auto-map the results for you
          and in others you will need to build a result map.
          But as you will see in this section you can also mix both strategies.
          Let's have a deeper look at how auto-mapping works.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          When auto-mapping results MyBatis will get the column name and look for a property with the same name ignoring case. That means that if
          a column named 
<fo:inline font-style="italic">ID</fo:inline> and property named 
<fo:inline font-style="italic">id</fo:inline> are found, MyBatis will set the 
<fo:inline font-style="italic">id</fo:inline> property with the 
<fo:inline font-style="italic">ID</fo:inline> column value.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Usually database columns are named using uppercase letters and underscores between words and java properties often follow the camelcase
          naming covention. To enable the auto-mapping between them set the setting 
<fo:inline font-family="monospace" font-size="10pt">mapUnderscoreToCamelCase</fo:inline> to true.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Auto-mapping works even when there is an specific result map. When this happens, for each result map, all columns that are present in the
          ResultSet that have not a manual mapping will be auto-mapped, then manual mappings will be processed.
          In the following sample 
<fo:inline font-style="italic">id</fo:inline> and 
<fo:inline font-style="italic">userName</fo:inline> columns will be auto-mapped and 
<fo:inline font-style="italic">hashed_password</fo:inline> column will be mapped.</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="selectUsers"&#160;resultMap="userResultMap"&gt;
<fo:block/>
&#160;&#160;select
<fo:block/>
&#160;&#160;&#160;&#160;user_id&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;"id",
<fo:block/>
&#160;&#160;&#160;&#160;user_name&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as&#160;"userName",
<fo:block/>
&#160;&#160;&#160;&#160;hashed_password
<fo:block/>
&#160;&#160;from&#160;some_table
<fo:block/>
&#160;&#160;where&#160;id&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="userResultMap"&#160;type="User"&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="password"&#160;column="hashed_password"/&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          There are three auto-mapping levels:
        </fo:block>


        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            
<fo:inline font-family="monospace" font-size="10pt">NONE</fo:inline> - disables auto-mapping. Only manually mapped properties will be set.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            
<fo:inline font-family="monospace" font-size="10pt">PARTIAL</fo:inline> - will auto-map results except those that have nested result mappings defined inside (joins).
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            
<fo:inline font-family="monospace" font-size="10pt">FULL</fo:inline> - auto-maps everything.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The default value is 
<fo:inline font-family="monospace" font-size="10pt">PARTIAL</fo:inline>, and it is so for a reason. When 
<fo:inline font-family="monospace" font-size="10pt">FULL</fo:inline> is used auto-mapping will
          be performed when processing join results and joins retrieve data of several different entities in the same row
          hence this may result in undesired mappings. To understand the risk have a look at the following sample:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="selectBlog"&#160;resultMap="blogResult"&gt;
<fo:block/>
&#160;&#160;select
<fo:block/>
&#160;&#160;&#160;&#160;B.id,
<fo:block/>
&#160;&#160;&#160;&#160;B.title,
<fo:block/>
&#160;&#160;&#160;&#160;A.username,
<fo:block/>
&#160;&#160;from&#160;Blog&#160;B&#160;left&#160;outer&#160;join&#160;Author&#160;A&#160;on&#160;B.author_id&#160;=&#160;A.id
<fo:block/>
&#160;&#160;where&#160;B.id&#160;=&#160;#{id}
<fo:block/>
&lt;/select&gt;</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="blogResult"&#160;type="Blog"&gt;
<fo:block/>
&#160;&#160;&lt;association&#160;property="author"&#160;resultMap="authorResult"/&gt;
<fo:block/>
&lt;/resultMap&gt;
<fo:block/>

<fo:block/>
&lt;resultMap&#160;id="authorResult"&#160;type="Author"&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="username"&#160;column="author_username"/&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          With this result map both 
<fo:inline font-style="italic">Blog</fo:inline> and 
<fo:inline font-style="italic">Author</fo:inline> will be auto-mapped. But note that 
<fo:inline font-style="italic">Author</fo:inline> has an 
<fo:inline font-style="italic">id</fo:inline>
          property and there is a column named 
<fo:inline font-style="italic">id</fo:inline> in the ResultSet so Author's id will be filled with Blog's id, and that is not
          what you were expecting. So use the 
<fo:inline font-family="monospace" font-size="10pt">FULL</fo:inline> option with caution.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Regardless of the auto-mapping level configured you can enable or disable the automapping for an specific ResultMap
          by adding the attribute 
<fo:inline font-family="monospace" font-size="10pt">autoMapping</fo:inline> to it:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;resultMap&#160;id="userResultMap"&#160;type="User"&#160;autoMapping="false"&gt;
<fo:block/>
&#160;&#160;&lt;result&#160;property="password"&#160;column="hashed_password"/&gt;
<fo:block/>
&lt;/resultMap&gt;</fo:block>


      </fo:block>

      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.7   cache</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          MyBatis includes a powerful transactional query caching feature which is very configurable and customizable.
          A lot of changes have been made in the MyBatis 3 cache implementation to make it both more powerful and far easier to configure.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          By default, just local session caching is enabled that is used solely to cache data for the duration of a session.
          To enable a global second level of caching you simply need to add one line to your SQL Mapping file:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;cache/&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Literally that's it. The effect of this one simple statement is as follows:
        </fo:block>


        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>All results from select statements in the mapped statement file will be cached.</fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>All insert, update and delete statements in the mapped statement file will flush the cache.</fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>The cache will use a Least Recently Used (LRU) algorithm for eviction.</fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>The cache will not flush on any sort of time based schedule (i.e. no Flush Interval).</fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>The cache will store 1024 references to lists or objects (whatever the query method returns).
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            The cache will be treated as a read/write cache, meaning objects retrieved are not shared and
            can be safely modified by the caller, without interfering with other potential modifications by
            other callers or threads.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          NOTE The cache will only apply to statements declared in the mapping file
          where the cache tag is located. If you are using the Java API in conjunction with the XML mapping files, then
          statements declared in the companion interface will not be cached by default. You will need to refer to the
          cache region using the @CacheNamespaceRef annotation.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          All of these properties are modifiable through the attributes of the cache element. For example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;cache
<fo:block/>
&#160;&#160;eviction="FIFO"
<fo:block/>
&#160;&#160;flushInterval="60000"
<fo:block/>
&#160;&#160;size="512"
<fo:block/>
&#160;&#160;readOnly="true"/&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          This more advanced configuration creates a FIFO cache that flushes once every 60 seconds, stores up
          to 512 references to result objects or lists, and objects returned are considered read-only, thus
          modifying them could cause conflicts between callers in different threads.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The available eviction policies available are:
        </fo:block>


        

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            
<fo:inline font-family="monospace" font-size="10pt">LRU</fo:inline> – Least Recently Used: Removes objects that haven't been used for the longst period of
            time.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            
<fo:inline font-family="monospace" font-size="10pt">FIFO</fo:inline> – First In First Out: Removes objects in the order that they entered the cache.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            
<fo:inline font-family="monospace" font-size="10pt">SOFT</fo:inline> – Soft Reference: Removes objects based on the garbage collector state and the rules of
            Soft References.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

          
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
            
<fo:inline font-family="monospace" font-size="10pt">WEAK</fo:inline> – Weak Reference: More aggressively removes objects based on the garbage collector state
            and rules of Weak References.
          </fo:block>
</fo:list-item-body>
</fo:list-item>

        </fo:list-block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The default is LRU.</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The flushInterval can be set to any positive integer and should represent a reasonable amount of
          time specified in milliseconds. The default is not set, thus no flush interval is used and the cache
          is only flushed by calls to statements.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The size can be set to any positive integer, keep in mind the size of the objects your caching and
          the available memory resources of your environment. The default is 1024.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The readOnly attribute can be set to true or false. A read-only cache will return the same instance
          of the cached object to all callers. Thus such objects should not be modified. This offers a
          significant performance advantage though. A read-write cache will return a copy (via serialization)
          of the cached object. This is slower, but safer, and thus the default is false.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          NOTE Second level cache is transactional. That means that it is updated
          when a SqlSession finishes with commit or when it finishes with rollback but no inserts/deletes/updates
          with flushCache=true where executed.
        </fo:block>


        

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.7.1   Using a Custom Cache</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          In addition to customizing the cache in these ways, you can also completely override the cache
          behavior by implementing your own cache, or creating an adapter to other 3rd party caching
          solutions.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;cache&#160;type="com.domain.something.MyCustomCache"/&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          This example demonstrates how to use a custom cache implementation. The class specified in the type
          attribute must implement the org.apache.ibatis.cache.Cache interface and provide a constructor that gets
          an String id as an argument. This interface is one of the more complex in the MyBatis framework, but simple given what it does.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">public&#160;interface&#160;Cache&#160;{
<fo:block/>
&#160;&#160;String&#160;getId();
<fo:block/>
&#160;&#160;int&#160;getSize();
<fo:block/>
&#160;&#160;void&#160;putObject(Object&#160;key,&#160;Object&#160;value);
<fo:block/>
&#160;&#160;Object&#160;getObject(Object&#160;key);
<fo:block/>
&#160;&#160;boolean&#160;hasKey(Object&#160;key);
<fo:block/>
&#160;&#160;Object&#160;removeObject(Object&#160;key);
<fo:block/>
&#160;&#160;void&#160;clear();
<fo:block/>
}</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          To configure your cache, simply add public JavaBeans properties to your Cache implementation, and
          pass properties via the cache Element, for example, the following would call a method called
          
<fo:inline font-family="monospace" font-size="10pt">setCacheFile(String file)</fo:inline> on your Cache implementation:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;cache&#160;type="com.domain.something.MyCustomCache"&gt;
<fo:block/>
&#160;&#160;&lt;property&#160;name="cacheFile"&#160;value="/tmp/my-custom-cache.tmp"/&gt;
<fo:block/>
&lt;/cache&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          You can use JavaBeans properties of all simple types, MyBatis will do the conversion.
          And you can specify a placeholder(e.g. 
<fo:inline font-family="monospace" font-size="10pt">${cache.file}</fo:inline>) to replace value defined at 
<fo:basic-link internal-destination="./configuration#properties">
<fo:inline color="blue">configuration properties</fo:inline></fo:basic-link>.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Since 3.4.2, the MyBatis has been supported to call an initialization method after it's set all properties.
          If you want to use this feature, please implements the 
<fo:inline font-family="monospace" font-size="10pt">org.apache.ibatis.builder.InitializingObject</fo:inline>
          interface on your custom cache class.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">public&#160;interface&#160;InitializingObject&#160;{
<fo:block/>
&#160;&#160;void&#160;initialize()&#160;throws&#160;Exception;
<fo:block/>
}</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">NOTE
          Settings of cache (like eviction strategy, read write..etc.) in section above are not applied
          when using Custom Cache.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          It's important to remember that a cache configuration and the cache instance are bound to the
          namespace of the SQL Map file. Thus, all statements in the same namespace as the cache are bound by
          it. Statements can modify how they interact with the cache, or exclude themselves completely by
          using two simple attributes on a statement-by-statement basis. By default, statements are configured
          like this:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;...&#160;flushCache="false"&#160;useCache="true"/&gt;
<fo:block/>
&lt;insert&#160;...&#160;flushCache="true"/&gt;
<fo:block/>
&lt;update&#160;...&#160;flushCache="true"/&gt;
<fo:block/>
&lt;delete&#160;...&#160;flushCache="true"/&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Since that's the default, you obviously should never explicitly configure a statement that way.
          Instead, only set the flushCache and useCache attributes if you want to change the default behavior.
          For example, in some cases you may want to exclude the results of a particular select statement from
          the cache, or you might want a select statement to flush the cache. Similarly, you may have some
          update statements that don't need to flush the cache upon execution.
        </fo:block>


          </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">4.1.7.2   cache-ref</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Recall from the previous section that only the cache for this particular namespace will be used or
          flushed for statements within the same namespace. There may come a time when you want to share the
          same cache configuration and instance between namespaces. In such cases you can reference another
          cache by using the cache-ref element.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;cache-ref&#160;namespace="com.someone.application.data.SomeMapper"/&gt;</fo:block>

      </fo:block>
</fo:block>

    </fo:block>

  
</fo:block></fo:flow></fo:page-sequence>
<!--

       Copyright 2009-2019 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->

  
<fo:page-sequence initial-page-number="auto" master-reference="body">

<fo:static-content flow-name="xsl-region-before"><fo:table table-layout="fixed" width="100%" >

<fo:table-column column-width="5.625in" />
<fo:table-column column-width="0.625in" />
<fo:table-body>
<fo:table-row>
<fo:table-cell>
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545" text-align="left">5   Dynamic SQL</fo:block></fo:table-cell>
<fo:table-cell>
<fo:block font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number /></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:static-content>
<fo:static-content flow-name="xsl-region-after">
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545">&#169;2023, MyBatis.org &#8226; ALL RIGHTS RESERVED.</fo:block></fo:static-content><fo:flow flow-name="xsl-region-body">

<fo:block id="./dynamic-sql">
<fo:list-block>
<fo:list-item><fo:list-item-label end-indent="6.375in" start-indent="-1in">

<fo:block font-size="9.5pt" line-height="10pt" text-align="right" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">
<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">5</fo:block></fo:block></fo:list-item-label><fo:list-item-body end-indent="1in" start-indent="0in">

<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">Dynamic SQL</fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block>
<fo:block space-after.optimum="0em">
<fo:leader leader-length.optimum="100%" leader-pattern="dots" rule-thickness="1pt" color="#454545" /></fo:block>
<fo:block>
  

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="12pt" font-weight="bold" space-before="18pt" space-after="6pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">5.1   Dynamic SQL</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">One of the most powerful features of MyBatis has always been its Dynamic SQL capabilities. If you have any experience with JDBC or any similar framework, you understand how painful it is to conditionally concatenate strings of SQL together, making sure not to forget spaces or to omit a comma at the end of a list of columns. Dynamic SQL can be downright painful to deal with.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">While working with Dynamic SQL will never be a party, MyBatis certainly improves the situation with a powerful Dynamic SQL language that can be used within any mapped SQL statement.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The Dynamic SQL elements should be familiar to anyone who has used JSTL or any similar XML based text processors. In previous versions of MyBatis, there were a lot of elements to know and understand. MyBatis 3 greatly improves upon this, and now there are less than half of those elements to work with. MyBatis employs powerful OGNL based expressions to eliminate most of the other elements:</fo:block>

  

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
    
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>if</fo:block>
</fo:list-item-body>
</fo:list-item>

    
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>choose (when, otherwise)</fo:block>
</fo:list-item-body>
</fo:list-item>

    
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>trim (where, set)</fo:block>
</fo:list-item-body>
</fo:list-item>

    
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>foreach</fo:block>
</fo:list-item-body>
</fo:list-item>

  </fo:list-block>

  
<fo:inline id="./dynamic-sql#if"></fo:inline>

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">5.1.1   if</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The most common thing to do in dynamic SQL is conditionally include a part of a where clause. For example:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="findActiveBlogWithTitleLike"
<fo:block/>
&#160;&#160;&#160;&#160;&#160;resultType="Blog"&gt;
<fo:block/>
&#160;&#160;SELECT&#160;*&#160;FROM&#160;BLOG
<fo:block/>
&#160;&#160;WHERE&#160;state&#160;=&#160;‘ACTIVE’
<fo:block/>
&#160;&#160;&lt;if&#160;test="title&#160;!=&#160;null"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;AND&#160;title&#160;like&#160;#{title}
<fo:block/>
&#160;&#160;&lt;/if&gt;
<fo:block/>
&lt;/select&gt;</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">This statement would provide an optional text search type of functionality. If you passed in no title, then all active Blogs would be returned. But if you do pass in a title, it will look for a title like that (for the keen eyed, yes in this case your parameter value would need to include any masking or wildcard characters).</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">What if we wanted to optionally search by title and author?  First, I’d change the name of the statement to make more sense. Then simply add another condition.</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="findActiveBlogLike"
<fo:block/>
&#160;&#160;&#160;&#160;&#160;resultType="Blog"&gt;
<fo:block/>
&#160;&#160;SELECT&#160;*&#160;FROM&#160;BLOG&#160;WHERE&#160;state&#160;=&#160;‘ACTIVE’
<fo:block/>
&#160;&#160;&lt;if&#160;test="title&#160;!=&#160;null"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;AND&#160;title&#160;like&#160;#{title}
<fo:block/>
&#160;&#160;&lt;/if&gt;
<fo:block/>
&#160;&#160;&lt;if&#160;test="author&#160;!=&#160;null&#160;and&#160;author.name&#160;!=&#160;null"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;AND&#160;author_name&#160;like&#160;#{author.name}
<fo:block/>
&#160;&#160;&lt;/if&gt;
<fo:block/>
&lt;/select&gt;</fo:block>

  </fo:block>

  
<fo:inline id="./dynamic-sql#chooseWhenOtherwise"></fo:inline>

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">5.1.2   choose, when, otherwise</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Sometimes we don’t want all of the conditionals to apply, instead we want to choose only one case among many options. Similar to a switch statement in Java, MyBatis offers a choose element.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Let’s use the example above, but now let’s search only on title if one is provided, then only by author if one is provided. If neither is provided, let’s only return featured blogs (perhaps a strategically list selected by administrators, instead of returning  a huge meaningless list of random blogs).</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="findActiveBlogLike"
<fo:block/>
&#160;&#160;&#160;&#160;&#160;resultType="Blog"&gt;
<fo:block/>
&#160;&#160;SELECT&#160;*&#160;FROM&#160;BLOG&#160;WHERE&#160;state&#160;=&#160;‘ACTIVE’
<fo:block/>
&#160;&#160;&lt;choose&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;when&#160;test="title&#160;!=&#160;null"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;AND&#160;title&#160;like&#160;#{title}
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/when&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;when&#160;test="author&#160;!=&#160;null&#160;and&#160;author.name&#160;!=&#160;null"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;AND&#160;author_name&#160;like&#160;#{author.name}
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/when&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;otherwise&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;AND&#160;featured&#160;=&#160;1
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/otherwise&gt;
<fo:block/>
&#160;&#160;&lt;/choose&gt;
<fo:block/>
&lt;/select&gt;</fo:block>

  </fo:block>

  
<fo:inline id="./dynamic-sql#trimWhereSet"></fo:inline>

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">5.1.3   trim, where, set</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The previous examples have been conveniently dancing around a notorious dynamic SQL challenge. Consider what would happen if we return to our "if" example, but this time we make "ACTIVE = 1" a dynamic condition as well.</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="findActiveBlogLike"
<fo:block/>
&#160;&#160;&#160;&#160;&#160;resultType="Blog"&gt;
<fo:block/>
&#160;&#160;SELECT&#160;*&#160;FROM&#160;BLOG
<fo:block/>
&#160;&#160;WHERE
<fo:block/>
&#160;&#160;&lt;if&#160;test="state&#160;!=&#160;null"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;state&#160;=&#160;#{state}
<fo:block/>
&#160;&#160;&lt;/if&gt;
<fo:block/>
&#160;&#160;&lt;if&#160;test="title&#160;!=&#160;null"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;AND&#160;title&#160;like&#160;#{title}
<fo:block/>
&#160;&#160;&lt;/if&gt;
<fo:block/>
&#160;&#160;&lt;if&#160;test="author&#160;!=&#160;null&#160;and&#160;author.name&#160;!=&#160;null"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;AND&#160;author_name&#160;like&#160;#{author.name}
<fo:block/>
&#160;&#160;&lt;/if&gt;
<fo:block/>
&lt;/select&gt;</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">What happens if none of the conditions are met?  You would end up with SQL that looked like this:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">SELECT&#160;*&#160;FROM&#160;BLOG
<fo:block/>
WHERE</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">This would fail. What if only the second condition was met?  You would end up with SQL that looked like this:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">SELECT&#160;*&#160;FROM&#160;BLOG
<fo:block/>
WHERE
<fo:block/>
AND&#160;title&#160;like&#160;‘someTitle’</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">This would also fail. This problem is not easily solved with conditionals, and if you’ve ever had to write it, then you likely never want to do so again.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">MyBatis has a simple answer that will likely work in 90% of the cases. And in cases where it doesn’t, you can customize it so that it does. With one simple change, everything works fine:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="findActiveBlogLike"
<fo:block/>
&#160;&#160;&#160;&#160;&#160;resultType="Blog"&gt;
<fo:block/>
&#160;&#160;SELECT&#160;*&#160;FROM&#160;BLOG
<fo:block/>
&#160;&#160;&lt;where&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;if&#160;test="state&#160;!=&#160;null"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;state&#160;=&#160;#{state}
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/if&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;if&#160;test="title&#160;!=&#160;null"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;AND&#160;title&#160;like&#160;#{title}
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/if&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;if&#160;test="author&#160;!=&#160;null&#160;and&#160;author.name&#160;!=&#160;null"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;AND&#160;author_name&#160;like&#160;#{author.name}
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/if&gt;
<fo:block/>
&#160;&#160;&lt;/where&gt;
<fo:block/>
&lt;/select&gt;</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The 
<fo:inline font-style="italic">where</fo:inline> element knows to only insert "WHERE" if there is any content returned by the containing tags. Furthermore, if that content begins with "AND" or "OR", it knows to strip it off. </fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">If the 
<fo:inline font-style="italic">where</fo:inline> element does not behave exactly as you like, you can customize it by defining your own trim element.  For example, the trim equivalent to the 
<fo:inline font-style="italic">where</fo:inline> element is:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;trim&#160;prefix="WHERE"&#160;prefixOverrides="AND&#160;|OR&#160;"&gt;
<fo:block/>
&#160;&#160;...
<fo:block/>
&lt;/trim&gt;</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The 
<fo:inline font-style="italic">prefixOverrides</fo:inline> attribute takes a pipe delimited list of text to override, where whitespace is relevant. The result is the removal of anything specified in the 
<fo:inline font-style="italic">prefixOverrides</fo:inline> attribute, and the insertion of anything in the 
<fo:inline font-style="italic">prefix</fo:inline> attribute.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">There is a similar solution for dynamic update statements called 
<fo:inline font-style="italic">set</fo:inline>. The 
<fo:inline font-style="italic">set</fo:inline> element can be used to dynamically include columns to update, and leave out others. For example:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;update&#160;id="updateAuthorIfNecessary"&gt;
<fo:block/>
&#160;&#160;update&#160;Author
<fo:block/>
&#160;&#160;&#160;&#160;&lt;set&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;if&#160;test="username&#160;!=&#160;null"&gt;username=#{username},&lt;/if&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;if&#160;test="password&#160;!=&#160;null"&gt;password=#{password},&lt;/if&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;if&#160;test="email&#160;!=&#160;null"&gt;email=#{email},&lt;/if&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&lt;if&#160;test="bio&#160;!=&#160;null"&gt;bio=#{bio}&lt;/if&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/set&gt;
<fo:block/>
&#160;&#160;where&#160;id=#{id}
<fo:block/>
&lt;/update&gt;</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Here, the 
<fo:inline font-style="italic">set</fo:inline> element will dynamically prepend the SET keyword, and also eliminate any extraneous commas that might trail the value assignments after the conditions are applied.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">If you’re curious about what the equivalent 
<fo:inline font-style="italic">trim</fo:inline> element would look like, here it is:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;trim&#160;prefix="SET"&#160;suffixOverrides=","&gt;
<fo:block/>
&#160;&#160;...
<fo:block/>
&lt;/trim&gt;</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Notice that in this case we’re overriding a suffix, while we’re still appending a prefix.</fo:block>

  </fo:block>

  

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">5.1.4   foreach</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Another common necessity for dynamic SQL is the need to iterate over a collection, often to build an IN condition. For example:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="selectPostIn"&#160;resultType="domain.blog.Post"&gt;
<fo:block/>
&#160;&#160;SELECT&#160;*
<fo:block/>
&#160;&#160;FROM&#160;POST&#160;P
<fo:block/>
&#160;&#160;WHERE&#160;ID&#160;in
<fo:block/>
&#160;&#160;&lt;foreach&#160;item="item"&#160;index="index"&#160;collection="list"
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;open="("&#160;separator=","&#160;close=")"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#{item}
<fo:block/>
&#160;&#160;&lt;/foreach&gt;
<fo:block/>
&lt;/select&gt;</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The 
<fo:inline font-style="italic">foreach</fo:inline> element is very powerful, and allows you to specify a collection, declare item and index variables that can be used inside the body of the element. It also allows you to specify opening and closing strings, and add a separator to place in between iterations. The element is smart in that it won’t accidentally append extra separators. </fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">NOTE You can pass any Iterable object (for example List, Set, etc.), as well as any Map or Array object to foreach as collection parameter. When using an Iterable or Array, index will be the number of current iteration and value item will be the element retrieved in this iteration. When using a Map (or Collection of Map.Entry objects), index will be the key object and item will be the value object.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">This wraps up the discussion regarding the XML configuration file and XML mapping files. The next section will discuss the Java API in detail, so that you can get the most out of the mappings that you’ve created.</fo:block>

  </fo:block>

  

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">5.1.5   script</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">For using dynamic SQL in annotated mapper class, 
<fo:inline font-style="italic">script</fo:inline> element can be used. For example:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
&#160;&#160;&#160;&#160;@Update({"&lt;script&gt;",
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;"update&#160;Author",
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;"&#160;&#160;&lt;set&gt;",
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;"&#160;&#160;&#160;&#160;&lt;if&#160;test='username&#160;!=&#160;null'&gt;username=#{username},&lt;/if&gt;",
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;"&#160;&#160;&#160;&#160;&lt;if&#160;test='password&#160;!=&#160;null'&gt;password=#{password},&lt;/if&gt;",
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;"&#160;&#160;&#160;&#160;&lt;if&#160;test='email&#160;!=&#160;null'&gt;email=#{email},&lt;/if&gt;",
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;"&#160;&#160;&#160;&#160;&lt;if&#160;test='bio&#160;!=&#160;null'&gt;bio=#{bio}&lt;/if&gt;",
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;"&#160;&#160;&lt;/set&gt;",
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;"where&#160;id=#{id}",
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;"&lt;/script&gt;"})
<fo:block/>
&#160;&#160;&#160;&#160;void&#160;updateAuthorValues(Author&#160;author);</fo:block>

  </fo:block>

  

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">5.1.6   bind</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The 
<fo:inline font-family="monospace" font-size="10pt">bind</fo:inline> element lets you create a variable out of an OGNL expression and bind it to the context. For example:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
&lt;select&#160;id="selectBlogsLike"&#160;resultType="Blog"&gt;
<fo:block/>
&#160;&#160;&lt;bind&#160;name="pattern"&#160;value="'%'&#160;+&#160;_parameter.getTitle()&#160;+&#160;'%'"&#160;/&gt;
<fo:block/>
&#160;&#160;SELECT&#160;*&#160;FROM&#160;BLOG
<fo:block/>
&#160;&#160;WHERE&#160;title&#160;LIKE&#160;#{pattern}
<fo:block/>
&lt;/select&gt;</fo:block>

  </fo:block>

  

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">5.1.7   Multi-db vendor support</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">If a databaseIdProvider was configured a "_databaseId" variable is available for dynamic code, so you can build different statements depending on database vendor. Have a look at the following example:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;insert&#160;id="insert"&gt;
<fo:block/>
&#160;&#160;&lt;selectKey&#160;keyProperty="id"&#160;resultType="int"&#160;order="BEFORE"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;if&#160;test="_databaseId&#160;==&#160;'oracle'"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;select&#160;seq_users.nextval&#160;from&#160;dual
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/if&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;if&#160;test="_databaseId&#160;==&#160;'db2'"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;select&#160;nextval&#160;for&#160;seq_users&#160;from&#160;sysibm.sysdummy1"
<fo:block/>
&#160;&#160;&#160;&#160;&lt;/if&gt;
<fo:block/>
&#160;&#160;&lt;/selectKey&gt;
<fo:block/>
&#160;&#160;insert&#160;into&#160;users&#160;values&#160;(#{id},&#160;#{name})
<fo:block/>
&lt;/insert&gt;
<fo:block/>
</fo:block>

  </fo:block>

  

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">5.1.8   Pluggable Scripting Languages For Dynamic SQL</fo:block>

    
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Starting from version 3.2 MyBatis supports pluggable scripting languages,
    so you can plug a language driver and use that language to write your dynamic
    SQL queries.</fo:block>

    
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">You can plug a language by implementing the following interface:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">public&#160;interface&#160;LanguageDriver&#160;{
<fo:block/>
&#160;&#160;ParameterHandler&#160;createParameterHandler(MappedStatement&#160;mappedStatement,&#160;Object&#160;parameterObject,&#160;BoundSql&#160;boundSql);
<fo:block/>
&#160;&#160;SqlSource&#160;createSqlSource(Configuration&#160;configuration,&#160;XNode&#160;script,&#160;Class&lt;?&gt;&#160;parameterType);
<fo:block/>
&#160;&#160;SqlSource&#160;createSqlSource(Configuration&#160;configuration,&#160;String&#160;script,&#160;Class&lt;?&gt;&#160;parameterType);
<fo:block/>
}</fo:block>

    
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Once you have your custom language driver you can set it to be the default by configuring it in the mybatis-config.xml file:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;typeAliases&gt;
<fo:block/>
&#160;&#160;&lt;typeAlias&#160;type="org.sample.MyLanguageDriver"&#160;alias="myLanguage"/&gt;
<fo:block/>
&lt;/typeAliases&gt;
<fo:block/>
&lt;settings&gt;
<fo:block/>
&#160;&#160;&lt;setting&#160;name="defaultScriptingLanguage"&#160;value="myLanguage"/&gt;
<fo:block/>
&lt;/settings&gt;
<fo:block/>
</fo:block>

    
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Instead of changing the default, you can specify the language for an specific statement by adding the 
<fo:inline font-family="monospace" font-size="10pt">lang</fo:inline> attribute as follows:
    </fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;select&#160;id="selectBlog"&#160;lang="myLanguage"&gt;
<fo:block/>
&#160;&#160;SELECT&#160;*&#160;FROM&#160;BLOG
<fo:block/>
&lt;/select&gt;</fo:block>

    
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Or, in the case you are using mappers, using the 
<fo:inline font-family="monospace" font-size="10pt">@Lang</fo:inline> annotation:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">public&#160;interface&#160;Mapper&#160;{
<fo:block/>
&#160;&#160;@Lang(MyLanguageDriver.class)
<fo:block/>
&#160;&#160;@Select("SELECT&#160;*&#160;FROM&#160;BLOG")
<fo:block/>
&#160;&#160;List&lt;Blog&gt;&#160;selectBlog();
<fo:block/>
}</fo:block>


    
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">NOTE You can use Apache Velocity as your dynamic language. Have a look at the MyBatis-Velocity project for the details.</fo:block>


    
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">All the xml tags you have seen in the previous sections are provided by the default MyBatis language that is provided by the driver
    
<fo:inline font-family="monospace" font-size="10pt">org.apache.ibatis.scripting.xmltags.XmlLanguageDriver</fo:inline> which is aliased as 
<fo:inline font-family="monospace" font-size="10pt">xml</fo:inline>.</fo:block>

  </fo:block>

  </fo:block>

  
</fo:block></fo:flow></fo:page-sequence>
<!--

       Copyright 2009-2020 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->

  
<fo:page-sequence initial-page-number="auto" master-reference="body">

<fo:static-content flow-name="xsl-region-before"><fo:table table-layout="fixed" width="100%" >

<fo:table-column column-width="5.625in" />
<fo:table-column column-width="0.625in" />
<fo:table-body>
<fo:table-row>
<fo:table-cell>
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545" text-align="left">6   Java API</fo:block></fo:table-cell>
<fo:table-cell>
<fo:block font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number /></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:static-content>
<fo:static-content flow-name="xsl-region-after">
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545">&#169;2023, MyBatis.org &#8226; ALL RIGHTS RESERVED.</fo:block></fo:static-content><fo:flow flow-name="xsl-region-body">

<fo:block id="./java-api">
<fo:list-block>
<fo:list-item><fo:list-item-label end-indent="6.375in" start-indent="-1in">

<fo:block font-size="9.5pt" line-height="10pt" text-align="right" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">
<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">6</fo:block></fo:block></fo:list-item-label><fo:list-item-body end-indent="1in" start-indent="0in">

<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">Java API</fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block>
<fo:block space-after.optimum="0em">
<fo:leader leader-length.optimum="100%" leader-pattern="dots" rule-thickness="1pt" color="#454545" /></fo:block>
<fo:block>
  
<fo:inline id="./java-api#javaApi"></fo:inline>

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="12pt" font-weight="bold" space-before="18pt" space-after="6pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">6.1   Java API</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Now that you know how to configure MyBatis and create mappings, you're ready for the good stuff. The MyBatis Java API is where you get to reap the rewards of your efforts. As you'll see, compared to JDBC, MyBatis greatly simplifies your code and keeps it clean, easy to understand and maintain. MyBatis 3 has introduced a number of significant improvements to make working with SQL Maps even better.</fo:block>


  
<fo:inline id="./java-api#directoryStructure"></fo:inline>

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">6.1.1   Directory Structure</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Before we dive in to the Java API itself, it's important to understand the best practices surrounding directory structures. MyBatis is very flexible, and you can do almost anything with your files. But as with any framework, there's a preferred way.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Let's look at a typical application directory structure:</fo:block>

  
<fo:block font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">/my_application
<fo:block/>
&#160;&#160;/bin
<fo:block/>
&#160;&#160;/devlib
<fo:block/>
&#160;&#160;
<fo:inline font-weight="bold">/lib&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
<fo:inline font-family="monospace" font-size="10pt">&lt;--&#160;MyBatis&#160;*.jar&#160;files&#160;go&#160;here.</fo:inline></fo:inline>
<fo:block/>
&#160;&#160;/src
<fo:block/>
&#160;&#160;&#160;&#160;/org/myapp/
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;/action
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;
<fo:inline font-weight="bold">/data&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
<fo:inline font-family="monospace" font-size="10pt">&lt;--&#160;MyBatis&#160;artifacts&#160;go&#160;here,&#160;including,&#160;Mapper&#160;Classes,&#160;XML&#160;Configuration,&#160;XML&#160;Mapping&#160;Files.</fo:inline></fo:inline>
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/mybatis-config.xml
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/BlogMapper.java
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/BlogMapper.xml
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;/model
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;/service
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;/view
<fo:block/>
&#160;&#160;&#160;&#160;
<fo:inline font-weight="bold">/properties&#160;&#160;&#160;&#160;&#160;&#160;&#160;
<fo:inline font-family="monospace" font-size="10pt">&lt;--&#160;Properties&#160;included&#160;in&#160;your&#160;XML&#160;Configuration&#160;go&#160;here.</fo:inline></fo:inline>
<fo:block/>
&#160;&#160;/test
<fo:block/>
&#160;&#160;&#160;&#160;/org/myapp/
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;/action
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;/data
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;/model
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;/service
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;/view
<fo:block/>
&#160;&#160;&#160;&#160;/properties
<fo:block/>
&#160;&#160;/web
<fo:block/>
&#160;&#160;&#160;&#160;/WEB-INF
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;/web.xml</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Remember, these are preferences, not requirements, but others will thank you for using a common directory structure.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The rest of the examples in this section will assume you're following this directory structure.</fo:block>

  </fo:block>


  
<fo:inline id="./java-api#sqlSessions"></fo:inline>

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">6.1.2   SqlSessions</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The primary Java interface for working with MyBatis is the SqlSession. Through this interface you can execute commands, get mappers and manage transactions. We'll talk more about SqlSession itself shortly, but first we have to learn how to acquire an instance of SqlSession. SqlSessions are created by a SqlSessionFactory instance. The SqlSessionFactory contains methods for creating instances of SqlSessions all different ways. The SqlSessionFactory itself is created by the SqlSessionFactoryBuilder that can create the SqlSessonFactory from XML, annotations or hand coded Java configuration.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">NOTE When using MyBatis with a dependency injection framework like Spring or Guice, SqlSessions are created and injected by the DI framework so you don't need to use the SqlSessionFactoryBuilder or SqlSessionFactory and can go directly to the SqlSession section. Please refer to the MyBatis-Spring or MyBatis-Guice manuals for further info.</fo:block>

  

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">6.1.2.1   SqlSessionFactoryBuilder</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The SqlSessionFactoryBuilder has five build() methods, each which allows you to build a SqlSessionFactory from a different source.</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">SqlSessionFactory&#160;build(InputStream&#160;inputStream)
<fo:block/>
SqlSessionFactory&#160;build(InputStream&#160;inputStream,&#160;String&#160;environment)
<fo:block/>
SqlSessionFactory&#160;build(InputStream&#160;inputStream,&#160;Properties&#160;properties)
<fo:block/>
SqlSessionFactory&#160;build(InputStream&#160;inputStream,&#160;String&#160;env,&#160;Properties&#160;props)
<fo:block/>
SqlSessionFactory&#160;build(Configuration&#160;config)</fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The first four methods are the most common, as they take an InputStream instance that refers to an XML document, or more specifically, the mybatis-config.xml file discussed above. The optional parameters are environment and properties. Environment determines which environment to load, including the datasource and transaction manager. For example:</fo:block>


  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;environments&#160;default="development"&gt;
<fo:block/>
&#160;&#160;&lt;environment&#160;id="development"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;transactionManager&#160;type="JDBC"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...
<fo:block/>
&#160;&#160;&#160;&#160;&lt;dataSource&#160;type="POOLED"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...
<fo:block/>
&#160;&#160;&lt;/environment&gt;
<fo:block/>
&#160;&#160;&lt;environment&#160;id="production"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&lt;transactionManager&#160;type="MANAGED"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...
<fo:block/>
&#160;&#160;&#160;&#160;&lt;dataSource&#160;type="JNDI"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...
<fo:block/>
&#160;&#160;&lt;/environment&gt;
<fo:block/>
&lt;/environments&gt;</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">If you call a build method that takes the environment parameter, then MyBatis will use the configuration for that environment. Of course, if you specify an invalid environment, you will receive an error. If you call one of the build methods that does not take the environment parameter, then the default environment is used (which is specified as default="development" in the example above).</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">If you call a method that takes a properties instance, then MyBatis will load those properties and make them available to your configuration. Those properties can be used in place of most values in the configuration using the syntax:  ${propName}</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Recall that properties can also be referenced from the mybatis-config.xml file, or specified directly within it. Therefore it's important to understand the priority. We mentioned it earlier in this document, but here it is again for easy reference:</fo:block>


  

<fo:block>
<fo:leader leader-length.optimum="100%" leader-pattern="rule" rule-thickness="0.5pt" color="black" /></fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">If a property exists in more than one of these places, MyBatis loads them in the following order.</fo:block>

  

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>Properties specified in the body of the properties element are read first,</fo:block>
</fo:list-item-body>
</fo:list-item>

  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>Properties loaded from the classpath resource or url attributes of the properties element are read second, and override any duplicate properties already specified,</fo:block>
</fo:list-item-body>
</fo:list-item>

  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>Properties passed as a method parameter are read last, and override any duplicate properties that may have been loaded from the properties body and the resource/url attributes.</fo:block>
</fo:list-item-body>
</fo:list-item>

  </fo:list-block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Thus, the highest priority properties are those passed in as a method parameter, followed by resource/url attributes and finally the properties specified in the body of the properties element.</fo:block>

  

<fo:block>
<fo:leader leader-length.optimum="100%" leader-pattern="rule" rule-thickness="0.5pt" color="black" /></fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">So to summarize, the first four methods are largely the same, but with overrides to allow you to optionally specify the environment and/or properties. Here is an example of building a SqlSessionFactory from an mybatis-config.xml file. </fo:block>


  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">String&#160;
<fo:inline font-weight="bold">resource</fo:inline>&#160;=&#160;"org/mybatis/builder/mybatis-config.xml";
<fo:block/>
InputStream&#160;
<fo:inline font-weight="bold">inputStream</fo:inline>&#160;=&#160;Resources.getResourceAsStream(resource);
<fo:block/>
SqlSessionFactoryBuilder&#160;
<fo:inline font-weight="bold">builder</fo:inline>&#160;=&#160;new&#160;SqlSessionFactoryBuilder();
<fo:block/>
SqlSessionFactory&#160;
<fo:inline font-weight="bold">factory</fo:inline>&#160;=&#160;builder.build(inputStream);</fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Notice that we're making use of the Resources utility class, which lives in the org.apache.ibatis.io package. The Resources class, as its name implies, helps you load resources from the classpath, filesystem or even a web URL. A quick look at the class source code or inspection through your IDE will reveal its fairly obvious set of useful methods. Here's a quick list:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">URL&#160;getResourceURL(String&#160;resource)
<fo:block/>
URL&#160;getResourceURL(ClassLoader&#160;loader,&#160;String&#160;resource)
<fo:block/>
InputStream&#160;getResourceAsStream(String&#160;resource)
<fo:block/>
InputStream&#160;getResourceAsStream(ClassLoader&#160;loader,&#160;String&#160;resource)
<fo:block/>
Properties&#160;getResourceAsProperties(String&#160;resource)
<fo:block/>
Properties&#160;getResourceAsProperties(ClassLoader&#160;loader,&#160;String&#160;resource)
<fo:block/>
Reader&#160;getResourceAsReader(String&#160;resource)
<fo:block/>
Reader&#160;getResourceAsReader(ClassLoader&#160;loader,&#160;String&#160;resource)
<fo:block/>
File&#160;getResourceAsFile(String&#160;resource)
<fo:block/>
File&#160;getResourceAsFile(ClassLoader&#160;loader,&#160;String&#160;resource)
<fo:block/>
InputStream&#160;getUrlAsStream(String&#160;urlString)
<fo:block/>
Reader&#160;getUrlAsReader(String&#160;urlString)
<fo:block/>
Properties&#160;getUrlAsProperties(String&#160;urlString)
<fo:block/>
Class&#160;classForName(String&#160;className)</fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The final build method takes an instance of Configuration. The Configuration class contains everything you could possibly need to know about a SqlSessionFactory instance. The Configuration class is useful for introspecting on the configuration, including finding and manipulating SQL maps (not recommended once the application is accepting requests). The configuration class has every configuration switch that you've learned about already, only exposed as a Java API. Here's a simple example of how to manually a Configuration instance and pass it to the build() method to create a SqlSessionFactory.</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">DataSource&#160;dataSource&#160;=&#160;BaseDataTest.createBlogDataSource();
<fo:block/>
TransactionFactory&#160;transactionFactory&#160;=&#160;new&#160;JdbcTransactionFactory();
<fo:block/>

<fo:block/>
Environment&#160;environment&#160;=&#160;new&#160;Environment("development",&#160;transactionFactory,&#160;dataSource);
<fo:block/>

<fo:block/>
Configuration&#160;configuration&#160;=&#160;new&#160;Configuration(environment);
<fo:block/>
configuration.setLazyLoadingEnabled(true);
<fo:block/>
configuration.setEnhancementEnabled(true);
<fo:block/>
configuration.getTypeAliasRegistry().registerAlias(Blog.class);
<fo:block/>
configuration.getTypeAliasRegistry().registerAlias(Post.class);
<fo:block/>
configuration.getTypeAliasRegistry().registerAlias(Author.class);
<fo:block/>
configuration.addMapper(BoundBlogMapper.class);
<fo:block/>
configuration.addMapper(BoundAuthorMapper.class);
<fo:block/>

<fo:block/>
SqlSessionFactoryBuilder&#160;builder&#160;=&#160;new&#160;SqlSessionFactoryBuilder();
<fo:block/>
SqlSessionFactory&#160;factory&#160;=&#160;builder.build(configuration);</fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Now you have a SqlSessionFactory that can be used to create SqlSession instances.</fo:block>


  </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">6.1.2.2   SqlSessionFactory</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">SqlSessionFactory has six methods that are used to create SqlSession instances. In general, the decisions you'll be making when selecting one of these methods are:</fo:block>

  

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
    
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-weight="bold">Transaction</fo:inline>: Do you want to use a transaction scope for the session, or use auto-commit (usually means no transaction with most databases and/or JDBC drivers)?</fo:block>
</fo:list-item-body>
</fo:list-item>

    
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-weight="bold">Connection</fo:inline>: Do you want MyBatis to acquire a Connection from the configured DataSource for you, or do you want to provide your own?</fo:block>
</fo:list-item-body>
</fo:list-item>

    
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-weight="bold">Execution</fo:inline>: Do you want MyBatis to reuse PreparedStatements and/or batch updates (including inserts and deletes)?</fo:block>
</fo:list-item-body>
</fo:list-item>

  </fo:list-block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The set of overloaded openSession() method signatures allow you to choose any combination of these options that makes sense.</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">SqlSession&#160;openSession()
<fo:block/>
SqlSession&#160;openSession(boolean&#160;autoCommit)
<fo:block/>
SqlSession&#160;openSession(Connection&#160;connection)
<fo:block/>
SqlSession&#160;openSession(TransactionIsolationLevel&#160;level)
<fo:block/>
SqlSession&#160;openSession(ExecutorType&#160;execType,&#160;TransactionIsolationLevel&#160;level)
<fo:block/>
SqlSession&#160;openSession(ExecutorType&#160;execType)
<fo:block/>
SqlSession&#160;openSession(ExecutorType&#160;execType,&#160;boolean&#160;autoCommit)
<fo:block/>
SqlSession&#160;openSession(ExecutorType&#160;execType,&#160;Connection&#160;connection)
<fo:block/>
Configuration&#160;getConfiguration();</fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The default openSession() method that takes no parameters will create a SqlSession with the following characteristics:</fo:block>

  

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
    
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>A transaction scope will be started (i.e. NOT auto-commit).</fo:block>
</fo:list-item-body>
</fo:list-item>

    
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>A 
<fo:inline font-family="monospace" font-size="10pt">Connection</fo:inline> object will be acquired from the DataSource instance configured by the active environment.</fo:block>
</fo:list-item-body>
</fo:list-item>

    
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>The transaction isolation level will be the default used by the driver or data source.</fo:block>
</fo:list-item-body>
</fo:list-item>

    
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>No PreparedStatements will be reused, and no updates will be batched.</fo:block>
</fo:list-item-body>
</fo:list-item>

  </fo:list-block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Most of the methods are pretty self explanatory. To enable auto-commit, pass a value of 
<fo:inline font-family="monospace" font-size="10pt">true</fo:inline> to the
  optional 
<fo:inline font-family="monospace" font-size="10pt">autoCommit</fo:inline> parameter.
  To provide your own connection, pass an instance of 
<fo:inline font-family="monospace" font-size="10pt">Connection</fo:inline> to the 
<fo:inline font-family="monospace" font-size="10pt">connection</fo:inline> parameter. Note that
  there's no override to set both the 
<fo:inline font-family="monospace" font-size="10pt">Connection</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">autoCommit</fo:inline>, because MyBatis will use whatever setting
  the provided connection object is currently using. MyBatis uses a Java enumeration wrapper for transaction isolation
  levels, called 
<fo:inline font-family="monospace" font-size="10pt">TransactionIsolationLevel</fo:inline>, but otherwise they work as expected and have the 5 levels
  supported by JDBC (
<fo:inline font-family="monospace" font-size="10pt">NONE</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">READ_UNCOMMITTED</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">READ_COMMITTED</fo:inline>,
  
<fo:inline font-family="monospace" font-size="10pt">REPEATABLE_READ</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">SERIALIZABLE</fo:inline>).</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The one parameter that might be new to you is 
<fo:inline font-family="monospace" font-size="10pt">ExecutorType</fo:inline>. This enumeration defines 3 values:</fo:block>

  

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
    
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">ExecutorType.SIMPLE</fo:inline>: This type of executor does nothing special. It creates a new PreparedStatement for each execution of a statement.</fo:block>
</fo:list-item-body>
</fo:list-item>

    
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">ExecutorType.REUSE</fo:inline>: This type of executor will reuse PreparedStatements.</fo:block>
</fo:list-item-body>
</fo:list-item>

    
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">ExecutorType.BATCH</fo:inline>: This executor will batch all update statements and demarcate them as necessary if SELECTs are executed between them, to ensure an easy-to-understand behavior.</fo:block>
</fo:list-item-body>
</fo:list-item>

  </fo:list-block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">NOTE There's one more method on the SqlSessionFactory that we didn't mention, and that is 
<fo:inline font-style="italic">getConfiguration()</fo:inline>. This method will return an instance of Configuration that you can use to introspect upon the MyBatis configuration at runtime.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">NOTE If you've used a previous version of MyBatis, you'll recall that sessions, transactions and batches were all something separate. This is no longer the case. All three are neatly contained within the scope of a session. You need not deal with transactions or batches separately to get the full benefit of them.</fo:block>


  </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">6.1.2.3   SqlSession</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">As mentioned above, the SqlSession instance is the most powerful class in MyBatis. It is where you'll find all of the methods to execute statements, commit or rollback transactions and acquire mapper instances.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">There are over twenty methods on the SqlSession class, so let's break them up into more digestible groupings.</fo:block>


  

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="9pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">6.Statement Execution Methods</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">These methods are used to execute SELECT, INSERT, UPDATE and DELETE statements that are defined in your SQL Mapping XML files. They are pretty self explanatory, each takes the ID of the statement and the Parameter Object, which can be a primitive (auto-boxed or wrapper), a JavaBean, a POJO or a Map.</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;T&gt;&#160;T&#160;selectOne(String&#160;statement,&#160;Object&#160;parameter)
<fo:block/>
&lt;E&gt;&#160;List&lt;E&gt;&#160;selectList(String&#160;statement,&#160;Object&#160;parameter)
<fo:block/>
&lt;T&gt;&#160;Cursor&lt;T&gt;&#160;selectCursor(String&#160;statement,&#160;Object&#160;parameter)
<fo:block/>
&lt;K,V&gt;&#160;Map&lt;K,V&gt;&#160;selectMap(String&#160;statement,&#160;Object&#160;parameter,&#160;String&#160;mapKey)
<fo:block/>
int&#160;insert(String&#160;statement,&#160;Object&#160;parameter)
<fo:block/>
int&#160;update(String&#160;statement,&#160;Object&#160;parameter)
<fo:block/>
int&#160;delete(String&#160;statement,&#160;Object&#160;parameter)</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The difference between 
<fo:inline font-family="monospace" font-size="10pt">selectOne</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">selectList</fo:inline> is only in that 
<fo:inline font-family="monospace" font-size="10pt">selectOne</fo:inline> must return exactly one object or 
<fo:inline font-family="monospace" font-size="10pt">null</fo:inline> (none). If any more than one, an exception will be thrown. If you don't know how many objects are expected, use 
<fo:inline font-family="monospace" font-size="10pt">selectList</fo:inline>. If you want to check for the existence of an object, you're better off returning a count (0 or 1). The 
<fo:inline font-family="monospace" font-size="10pt">selectMap</fo:inline> is a special case in that it is designed to convert a list of results into a 
<fo:inline font-family="monospace" font-size="10pt">Map</fo:inline> based on one of the properties in the resulting objects. Because not all statements require a parameter, these methods are overloaded with versions that do not require the parameter object.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The value returned by the 
<fo:inline font-family="monospace" font-size="10pt">insert</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">update</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">delete</fo:inline> methods indicate the number of rows affected by the statement.</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;T&gt;&#160;T&#160;selectOne(String&#160;statement)
<fo:block/>
&lt;E&gt;&#160;List&lt;E&gt;&#160;selectList(String&#160;statement)
<fo:block/>
&lt;T&gt;&#160;Cursor&lt;T&gt;&#160;selectCursor(String&#160;statement)
<fo:block/>
&lt;K,V&gt;&#160;Map&lt;K,V&gt;&#160;selectMap(String&#160;statement,&#160;String&#160;mapKey)
<fo:block/>
int&#160;insert(String&#160;statement)
<fo:block/>
int&#160;update(String&#160;statement)
<fo:block/>
int&#160;delete(String&#160;statement)</fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">A 
<fo:inline font-family="monospace" font-size="10pt">Cursor</fo:inline> offers the same results as a List, except it fetches data lazily using an 
<fo:inline font-family="monospace" font-size="10pt">Iterator</fo:inline>.</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">try&#160;(Cursor&lt;MyEntity&gt;&#160;entities&#160;=&#160;session.selectCursor(statement,&#160;param))&#160;{
<fo:block/>
&#160;&#160;&#160;for&#160;(MyEntity&#160;entity&#160;:&#160;entities)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;//&#160;process&#160;one&#160;entity
<fo:block/>
&#160;&#160;&#160;}
<fo:block/>
}</fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Finally, there are three advanced versions of the 
<fo:inline font-family="monospace" font-size="10pt">select</fo:inline> methods that allow you to restrict the range of rows to return, or provide custom result handling logic, usually for very large data sets.</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;E&gt;&#160;List&lt;E&gt;&#160;selectList&#160;(String&#160;statement,&#160;Object&#160;parameter,&#160;RowBounds&#160;rowBounds)
<fo:block/>
&lt;T&gt;&#160;Cursor&lt;T&gt;&#160;selectCursor(String&#160;statement,&#160;Object&#160;parameter,&#160;RowBounds&#160;rowBounds)
<fo:block/>
&lt;K,V&gt;&#160;Map&lt;K,V&gt;&#160;selectMap(String&#160;statement,&#160;Object&#160;parameter,&#160;String&#160;mapKey,&#160;RowBounds&#160;rowbounds)
<fo:block/>
void&#160;select&#160;(String&#160;statement,&#160;Object&#160;parameter,&#160;ResultHandler&lt;T&gt;&#160;handler)
<fo:block/>
void&#160;select&#160;(String&#160;statement,&#160;Object&#160;parameter,&#160;RowBounds&#160;rowBounds,&#160;ResultHandler&lt;T&gt;&#160;handler)</fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The 
<fo:inline font-family="monospace" font-size="10pt">RowBounds</fo:inline> parameter causes MyBatis to skip the number of records specified, as well as limit the number of results returned to some number. The 
<fo:inline font-family="monospace" font-size="10pt">RowBounds</fo:inline> class has a constructor to take both the 
<fo:inline font-family="monospace" font-size="10pt">offset</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">limit</fo:inline>, and is otherwise immutable.</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">int&#160;offset&#160;=&#160;100;
<fo:block/>
int&#160;limit&#160;=&#160;25;
<fo:block/>
RowBounds&#160;rowBounds&#160;=&#160;new&#160;RowBounds(offset,&#160;limit);</fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Different drivers are able to achieve different levels of efficiency in this regard. For the best performance, use result set types of 
<fo:inline font-family="monospace" font-size="10pt">SCROLL_SENSITIVE</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">SCROLL_INSENSITIVE</fo:inline> (in other words: not 
<fo:inline font-family="monospace" font-size="10pt">FORWARD_ONLY</fo:inline>).</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The 
<fo:inline font-family="monospace" font-size="10pt">ResultHandler</fo:inline> parameter allows you to handle each row however you like. You can add it to a 
<fo:inline font-family="monospace" font-size="10pt">List</fo:inline>, create a 
<fo:inline font-family="monospace" font-size="10pt">Map</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">Set</fo:inline>, or throw each result away and instead keep only rolled up totals of calculations. You can do pretty much anything with the 
<fo:inline font-family="monospace" font-size="10pt">ResultHandler</fo:inline>, and it's what MyBatis uses internally itself to build result set lists.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Since 3.4.6, 
<fo:inline font-family="monospace" font-size="10pt">ResultHandler</fo:inline> passed to a 
<fo:inline font-family="monospace" font-size="10pt">CALLABLE</fo:inline> statement is used on every 
<fo:inline font-family="monospace" font-size="10pt">REFCURSOR</fo:inline> output parameter of the stored procedure if there is any.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The interface is very simple.</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">package&#160;org.apache.ibatis.session;
<fo:block/>
public&#160;interface&#160;ResultHandler&lt;T&gt;&#160;{
<fo:block/>
&#160;&#160;void&#160;handleResult(ResultContext&lt;?&#160;extends&#160;T&gt;&#160;context);
<fo:block/>
}</fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The 
<fo:inline font-family="monospace" font-size="10pt">ResultContext</fo:inline> parameter gives you access to the result object itself, a count of the number of result objects created, and a 
<fo:inline font-family="monospace" font-size="10pt">Boolean stop()</fo:inline> method that you can use to stop MyBatis from loading any more results.</fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Using a 
<fo:inline font-family="monospace" font-size="10pt">ResultHandler</fo:inline> has two limitations that you should be aware of:</fo:block>


  

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>Data gotten from a method called with a 
<fo:inline font-family="monospace" font-size="10pt">ResultHandler</fo:inline> will not be cached.</fo:block>
</fo:list-item-body>
</fo:list-item>

  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>When using advanced 
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline>s MyBatis will probably require several rows to build an object. If a 
<fo:inline font-family="monospace" font-size="10pt">ResultHandler</fo:inline> is used you may be given an object whose associations or collections are not yet filled.</fo:block>
</fo:list-item-body>
</fo:list-item>

  </fo:list-block>


  </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="9pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">6.Batch update statement Flush Method</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">There is method for flushing (executing) batch update statements that are stored in a JDBC driver class at any time. This method can be used when the 
<fo:inline font-family="monospace" font-size="10pt">ExecutorType</fo:inline> is 
<fo:inline font-family="monospace" font-size="10pt">ExecutorType.BATCH</fo:inline>.</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">List&lt;BatchResult&gt;&#160;flushStatements()</fo:block>


  </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="9pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">6.Transaction Control Methods</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">There are four methods for controlling the scope of a transaction. Of course, these have no effect if you've chosen to use auto-commit or if you're using an external transaction manager. However, if you're using the JDBC transaction manager, managed by the 
<fo:inline font-family="monospace" font-size="10pt">Connection</fo:inline> instance, then the four methods that will come in handy are:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">void&#160;commit()
<fo:block/>
void&#160;commit(boolean&#160;force)
<fo:block/>
void&#160;rollback()
<fo:block/>
void&#160;rollback(boolean&#160;force)</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">By default MyBatis does not actually commit unless it detects that the database has been changed by a call to 
<fo:inline font-family="monospace" font-size="10pt">insert</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">update</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">delete</fo:inline>. If you've somehow made changes without calling these methods, then you can pass 
<fo:inline font-family="monospace" font-size="10pt">true</fo:inline> into the 
<fo:inline font-family="monospace" font-size="10pt">commit</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">rollback</fo:inline> methods to guarantee that they will be committed (note, you still can't force a session in auto-commit mode, or one that is using an external transaction manager). Most of the time you won't have to call 
<fo:inline font-family="monospace" font-size="10pt">rollback()</fo:inline>, as MyBatis will do that for you if you don't call commit. However, if you need more fine-grained control over a session where multiple commits and rollbacks are possible, you have the rollback option there to make that possible.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">NOTE MyBatis-Spring and MyBatis-Guice provide declarative transaction handling. So if you are using MyBatis with Spring or Guice please refer to their specific manuals.</fo:block>


  </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="9pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">6.Local Cache</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">MyBatis uses two caches: a local cache and a second level cache.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Each time a new session is created MyBatis creates a local cache and attaches it to the session. Any query executed within the session will be stored in the local cache so further executions of the same query with the same input parameters will not hit the database. The local cache is cleared upon 
<fo:inline font-family="monospace" font-size="10pt">update</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">commit</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">rollback</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">close</fo:inline>.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">By default local cache data is used for the whole session duration. This cache is needed to resolve circular references and to speed up repeated nested queries, so it can never be completely disabled but you can configure the local cache to be used just for the duration of a statement execution by setting 
<fo:inline font-family="monospace" font-size="10pt">localCacheScope=STATEMENT</fo:inline>.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Note that when the 
<fo:inline font-family="monospace" font-size="10pt">localCacheScope</fo:inline> is set to 
<fo:inline font-family="monospace" font-size="10pt">SESSION</fo:inline>, MyBatis returns references to the same objects which are stored in the local cache. Any modification of the returned objects (lists etc.) influences the local cache contents and subsequently the values which are returned from the cache in the lifetime of the session. Therefore, as best practice, do not to modify the objects returned by MyBatis.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">You can clear the local cache at any time by calling:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">void&#160;clearCache()</fo:block>


  </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="9pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">6.Ensuring that SqlSession is Closed</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">void&#160;close()</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The most important thing you must ensure is to close any session that you open. The best way to ensure this is to use the following unit of work pattern:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">try&#160;(SqlSession&#160;session&#160;=&#160;sqlSessionFactory.openSession())&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;//&#160;following&#160;3&#160;lines&#160;are&#160;pseudocode&#160;for&#160;"doing&#160;some&#160;work"
<fo:block/>
&#160;&#160;&#160;&#160;session.insert(...);
<fo:block/>
&#160;&#160;&#160;&#160;session.update(...);
<fo:block/>
&#160;&#160;&#160;&#160;session.delete(...);
<fo:block/>
&#160;&#160;&#160;&#160;session.commit();
<fo:block/>
}</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">NOTE Just like 
<fo:inline font-family="monospace" font-size="10pt">SqlSessionFactory</fo:inline>, you can get the instance of 
<fo:inline font-family="monospace" font-size="10pt">Configuration</fo:inline> that the 
<fo:inline font-family="monospace" font-size="10pt">SqlSession</fo:inline> is using by calling the 
<fo:inline font-family="monospace" font-size="10pt">getConfiguration()</fo:inline> method.</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">Configuration&#160;getConfiguration()</fo:block>


  </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="9pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">6.Using Mappers</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;T&gt;&#160;T&#160;getMapper(Class&lt;T&gt;&#160;type)</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">While the various 
<fo:inline font-family="monospace" font-size="10pt">insert</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">update</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">delete</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">select</fo:inline> methods above are powerful, they are also very verbose, not type safe and not as helpful to your IDE or unit tests as they could be. We've already seen an example of using 
<fo:inline font-family="monospace" font-size="10pt">Mapper</fo:inline>s in the Getting Started section above.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Therefore, a more common way to execute mapped statements is to use 
<fo:inline font-family="monospace" font-size="10pt">Mapper</fo:inline> classes. A 
<fo:inline font-family="monospace" font-size="10pt">Mapper</fo:inline> class is simply an interface with method definitions that match up against the 
<fo:inline font-family="monospace" font-size="10pt">SqlSession</fo:inline> methods. The following example class demonstrates some method signatures and how they map to the 
<fo:inline font-family="monospace" font-size="10pt">SqlSession</fo:inline>.</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">public&#160;interface&#160;AuthorMapper&#160;{
<fo:block/>
&#160;&#160;//&#160;(Author)&#160;selectOne("selectAuthor",&#160;5);
<fo:block/>
&#160;&#160;Author&#160;selectAuthor(int&#160;id);
<fo:block/>

<fo:block/>
&#160;&#160;//&#160;(List&lt;Author&gt;)&#160;selectList("selectAuthors")
<fo:block/>
&#160;&#160;List&lt;Author&gt;&#160;selectAuthors();
<fo:block/>

<fo:block/>
&#160;&#160;//&#160;(Map&lt;Integer,Author&gt;)&#160;selectMap("selectAuthors",&#160;"id")
<fo:block/>
&#160;&#160;@MapKey("id")
<fo:block/>
&#160;&#160;Map&lt;Integer,&#160;Author&gt;&#160;selectAuthors();
<fo:block/>

<fo:block/>
&#160;&#160;//&#160;insert("insertAuthor",&#160;author)
<fo:block/>
&#160;&#160;int&#160;insertAuthor(Author&#160;author);
<fo:block/>

<fo:block/>
&#160;&#160;//&#160;updateAuthor("updateAuthor",&#160;author)
<fo:block/>
&#160;&#160;int&#160;updateAuthor(Author&#160;author);
<fo:block/>

<fo:block/>
&#160;&#160;//&#160;delete("deleteAuthor",&#160;5)
<fo:block/>
&#160;&#160;int&#160;deleteAuthor(int&#160;id);
<fo:block/>
}</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">In a nutshell, each 
<fo:inline font-family="monospace" font-size="10pt">Mapper</fo:inline> method signature should match that of the 
<fo:inline font-family="monospace" font-size="10pt">SqlSession</fo:inline> method that it's associated to, but without the 
<fo:inline font-family="monospace" font-size="10pt">String</fo:inline> parameter ID. Instead, the method name must match the mapped statement ID.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">In addition, the return type must match that of the expected result type for single results or an array or collection for multiple results or 
<fo:inline font-family="monospace" font-size="10pt">Cursor</fo:inline>. All of the usual types are supported, including: Primitives, 
<fo:inline font-family="monospace" font-size="10pt">Maps</fo:inline>, POJOs and 
<fo:inline font-family="monospace" font-size="10pt">JavaBeans</fo:inline>.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">NOTE Mapper interfaces do not need to implement any interface or extend any class. As long as the method signature can be used to uniquely identify a corresponding mapped statement.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">NOTE Mapper interfaces can extend other interfaces. Be sure that you have the statements in the appropriate namespace when using XML binding to 
<fo:inline font-family="monospace" font-size="10pt">Mapper</fo:inline> interfaces. Also, the only limitation is that you cannot have the same method signature in two interfaces in a hierarchy (a bad idea anyway).</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">You can pass multiple parameters to a mapper method. If you do, they will be named by the literal "param" followed by their position in the parameter list by default, for example: 
<fo:inline font-family="monospace" font-size="10pt">#{param1}</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">#{param2}</fo:inline> etc. If you wish to change the name of the parameters (multiple only), then you can use the 
<fo:inline font-family="monospace" font-size="10pt">@Param("paramName")</fo:inline> annotation on the parameter.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">You can also pass a 
<fo:inline font-family="monospace" font-size="10pt">RowBounds</fo:inline> instance to the method to limit query results.</fo:block>


  </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="9pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">6.Mapper Annotations</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Since the very beginning, MyBatis has been an XML driven framework. The configuration is XML based, and the Mapped Statements are defined in XML. With MyBatis 3, there are new options available. MyBatis 3 builds on top of a comprehensive and powerful Java based Configuration API. This Configuration API is the foundation for the XML based MyBatis configuration, as well as the new annotation-based configuration. Annotations offer a simple way to implement simple mapped statements without introducing a lot of overhead.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">NOTE Java annotations are unfortunately limited in their expressiveness and flexibility. Despite a lot of time spent in investigation, design and trials, the most powerful MyBatis mappings simply cannot be built with annotations – without getting ridiculous that is. C# Attributes (for example) do not suffer from these limitations, and thus MyBatis.NET will enjoy a much richer alternative to XML. That said, the Java annotation-based configuration is not without its benefits.</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
<fo:inline font-weight="bold">The annotations are as follows:</fo:inline></fo:block>

  

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
    
      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Annotation</fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Target</fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
XML equivalent</fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Description</fo:block>
</fo:table-cell>

      </fo:table-row>

    
    
      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@CacheNamespace</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">Class</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">&lt;cache&gt;</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

          Configures the cache for the given namespace (i.e. class). Attributes: 
<fo:inline font-family="monospace" font-size="10pt">implementation</fo:inline>,
          
<fo:inline font-family="monospace" font-size="10pt">eviction</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">flushInterval</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">size</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">readWrite</fo:inline>,
          
<fo:inline font-family="monospace" font-size="10pt">blocking</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">properties</fo:inline>.
        </fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@Property</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
N/A</fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">&lt;property&gt;</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Specifies the property value or placeholder(can replace by configuration properties that defined at the 
<fo:inline font-family="monospace" font-size="10pt">mybatis-config.xml</fo:inline>). Attributes: 
<fo:inline font-family="monospace" font-size="10pt">name</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">value</fo:inline>. (Available on MyBatis 3.4.2+)</fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@CacheNamespaceRef</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">Class</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">&lt;cacheRef&gt;</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

          References the cache of another namespace to use. Note that caches declared in an XML mapper file are considered
          a separate namespace, even if they share the same FQCN. Attributes: 
<fo:inline font-family="monospace" font-size="10pt">value</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">name</fo:inline>.
          If you use this annotation, you should be specified either 
<fo:inline font-family="monospace" font-size="10pt">value</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">name</fo:inline> attribute.
          For the 
<fo:inline font-family="monospace" font-size="10pt">value</fo:inline> attribute specify a java type indicating the namespace(the namespace name become a FQCN of specified java type),
          and for the 
<fo:inline font-family="monospace" font-size="10pt">name</fo:inline> attribute(this attribute is available since 3.4.2) specify a name indicating the namespace.
        </fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@ConstructorArgs</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">Method</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">&lt;constructor&gt;</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Collects a group of results to be passed to a result object constructor. Attributes: 
<fo:inline font-family="monospace" font-size="10pt">value</fo:inline>, which is an array of 
<fo:inline font-family="monospace" font-size="10pt">Arg</fo:inline>s.</fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@Arg</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
N/A</fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

          

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">&lt;arg&gt;</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">&lt;idArg&gt;</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

          </fo:list-block>

        </fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
A single constructor argument that is part of a ConstructorArgs collection. Attributes: 
<fo:inline font-family="monospace" font-size="10pt">id</fo:inline>,
        
<fo:inline font-family="monospace" font-size="10pt">column</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">javaType</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">jdbcType</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">typeHandler</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">select</fo:inline>,
        
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline>. The id attribute is a boolean value that identifies the property to be used for comparisons,
        similar to the 
<fo:inline font-family="monospace" font-size="10pt">&lt;idArg&gt;</fo:inline> XML element. Since 3.5.4, it can be used as repeatable annotation.</fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@TypeDiscriminator</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">Method</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">&lt;discriminator&gt;</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
A group of value cases that can be used to determine the result mapping to perform. Attributes: 
<fo:inline font-family="monospace" font-size="10pt">column</fo:inline>,
        
<fo:inline font-family="monospace" font-size="10pt">javaType</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">jdbcType</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">typeHandler</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">cases</fo:inline>. The cases attribute is an array of 
<fo:inline font-family="monospace" font-size="10pt">Case</fo:inline>s.</fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@Case</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
N/A</fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">&lt;case&gt;</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
A single case of a value and its corresponding mappings. Attributes: 
<fo:inline font-family="monospace" font-size="10pt">value</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">type</fo:inline>,
        
<fo:inline font-family="monospace" font-size="10pt">results</fo:inline>. The results attribute is an array of Results, thus this 
<fo:inline font-family="monospace" font-size="10pt">Case</fo:inline> Annotation is
        similar to an actual 
<fo:inline font-family="monospace" font-size="10pt">ResultMap</fo:inline>, specified by the 
<fo:inline font-family="monospace" font-size="10pt">Results</fo:inline> annotation below.</fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@Results</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">Method</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">&lt;resultMap&gt;</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
A list of Result mappings that contain details of how a particular result column is mapped to a property or field.
        Attributes: 
<fo:inline font-family="monospace" font-size="10pt">value</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">id</fo:inline>. The value attribute is an array of 
<fo:inline font-family="monospace" font-size="10pt">Result</fo:inline> annotations. The id attribute is the name of the result mapping.</fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@Result</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
N/A</fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

          

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">&lt;result&gt;</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">&lt;id&gt;</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

          </fo:list-block>

        </fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
A single result mapping between a column and a property or field. Attributes: 
<fo:inline font-family="monospace" font-size="10pt">id</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">column</fo:inline>,
        
<fo:inline font-family="monospace" font-size="10pt">property</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">javaType</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">jdbcType</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">typeHandler</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">one</fo:inline>,
        
<fo:inline font-family="monospace" font-size="10pt">many</fo:inline>. The id attribute is a boolean value that indicates that the property should be used for comparisons
        (similar to 
<fo:inline font-family="monospace" font-size="10pt">&lt;id&gt;</fo:inline> in the XML mappings).
        The one attribute is for single associations, similar to 
<fo:inline font-family="monospace" font-size="10pt">&lt;association&gt;</fo:inline>, and the many attribute
        is for collections, similar to 
<fo:inline font-family="monospace" font-size="10pt">&lt;collection&gt;</fo:inline>. They are named as they are to avoid class naming conflicts.
        Since 3.5.4, it can be used as repeatable annotation.</fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@One</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
N/A</fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">&lt;association&gt;</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
A mapping to a single property value of a complex type. Attributes: 
<fo:inline font-family="monospace" font-size="10pt">select</fo:inline>, which is the fully
        qualified name of a mapped statement (i.e. mapper method) that can load an instance of the appropriate type.
        
<fo:inline font-family="monospace" font-size="10pt">fetchType</fo:inline>, which supersedes the global configuration parameter 
<fo:inline font-family="monospace" font-size="10pt">lazyLoadingEnabled</fo:inline> for this
        mapping.
        
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline>(available since 3.5.5), which is the fully qualified name of a result map that map to
        a single container object from select result.
        
<fo:inline font-family="monospace" font-size="10pt">columnPrefix</fo:inline>(available since 3.5.5), which is column prefix for grouping select columns at nested result map.
        NOTE You will notice that join mapping is not supported via the Annotations API.
        This is due to the limitation in Java Annotations that does not allow for circular references.</fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@Many</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
N/A</fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">&lt;collection&gt;</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
A mapping to a collection property of a complex type. Attributes: 
<fo:inline font-family="monospace" font-size="10pt">select</fo:inline>, which is the fully
        qualified name of a mapped statement (i.e. mapper method) that can load a collection of instances of the appropriate
        types. 
<fo:inline font-family="monospace" font-size="10pt">fetchType</fo:inline>, which supersedes the global configuration parameter 
<fo:inline font-family="monospace" font-size="10pt">lazyLoadingEnabled</fo:inline> for this
        mapping.
        
<fo:inline font-family="monospace" font-size="10pt">resultMap</fo:inline>(available since 3.5.5), which is the fully qualified name of a result map that map to
        collection object from select result.
        
<fo:inline font-family="monospace" font-size="10pt">columnPrefix</fo:inline>(available since 3.5.5), which is column prefix for grouping select columns at nested result map.
        NOTE You will notice that join mapping is not supported via the
        Annotations API. This is due to the limitation in Java Annotations that does not allow for circular references.</fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@MapKey</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">Method</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
 </fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
This is used on methods which return type is a Map. It is used to convert a List of result objects as a Map
        based on a property of those objects. Attributes: 
<fo:inline font-family="monospace" font-size="10pt">value</fo:inline>, which is a property used as the key of the map.</fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@Options</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">Method</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Attributes of mapped statements.</fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
This annotation provides access to the wide range of switches and configuration options that are normally
        present on the mapped statement as attributes. Rather than complicate each statement annotation, the
        
<fo:inline font-family="monospace" font-size="10pt">Options</fo:inline> annotation provides a consistent and clear way to access these. Attributes:
        
<fo:inline font-family="monospace" font-size="10pt">useCache=true</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">flushCache=FlushCachePolicy.DEFAULT</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">resultSetType=DEFAULT</fo:inline>,
        
<fo:inline font-family="monospace" font-size="10pt">statementType=PREPARED</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">fetchSize=-1</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">timeout=-1</fo:inline>,
        
<fo:inline font-family="monospace" font-size="10pt">useGeneratedKeys=false</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">keyProperty=""</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">keyColumn=""</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">resultSets=""</fo:inline>
        and 
<fo:inline font-family="monospace" font-size="10pt">databaseId=""</fo:inline>.
        It's important to understand that with Java Annotations, there is no way to specify 
<fo:inline font-family="monospace" font-size="10pt">null</fo:inline> as a value.
        Therefore, once you engage the 
<fo:inline font-family="monospace" font-size="10pt">Options</fo:inline> annotation, your statement is subject to all of the default
        values. Pay attention to what the default values are to avoid unexpected behavior.
        The 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline>(Available since 3.5.5), in case there is a configured 
<fo:inline font-family="monospace" font-size="10pt">DatabaseIdProvider</fo:inline>,
        the MyBatis use the 
<fo:inline font-family="monospace" font-size="10pt">Options</fo:inline> with no 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> attribute or with a 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline>
        that matches the current one. If found with and without the 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> the latter will be discarded.

<fo:block />

<fo:block />
        Note that 
<fo:inline font-family="monospace" font-size="10pt">keyColumn</fo:inline> is only required in certain databases (like Oracle and PostgreSQL).
        See the discussion about 
<fo:inline font-family="monospace" font-size="10pt">keyColumn</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">keyProperty</fo:inline> above in the discussion of the
        insert statement for more information about allowable values in these attributes.
        </fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

          

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">@Insert</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">@Update</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">@Delete</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">@Select</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

          </fo:list-block>

        </fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">Method</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

          

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">&lt;insert&gt;</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">&lt;update&gt;</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">&lt;delete&gt;</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">&lt;select&gt;</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

          </fo:list-block>

        </fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Each of these annotations represents the actual SQL that is to be executed. They each take an array of strings
        (or a single string will do). If an array of strings is passed, they are concatenated with a single space between
        each to separate them. This helps avoid the "missing space" problem when building SQL in Java code. However,
        you're also welcome to concatenate together a single string if you like.
        Attributes: 
<fo:inline font-family="monospace" font-size="10pt">value</fo:inline>, which is the array of Strings to form the single SQL statement.
        The 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline>(Available since 3.5.5), in case there is a configured 
<fo:inline font-family="monospace" font-size="10pt">DatabaseIdProvider</fo:inline>,
        the MyBatis use a statement with no 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> attribute or with a 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline>
        that matches the current one. If found with and without the 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> the latter will be discarded.
        </fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

          

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">@InsertProvider</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">@UpdateProvider</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">@DeleteProvider</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">@SelectProvider</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

          </fo:list-block>

        </fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">Method</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

          

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">&lt;insert&gt;</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">&lt;update&gt;</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">&lt;delete&gt;</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

            
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
<fo:inline font-family="monospace" font-size="10pt">&lt;select&gt;</fo:inline></fo:block>
</fo:list-item-body>
</fo:list-item>

          </fo:list-block>

        </fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Allows for creation of dynamic SQL. These alternative SQL annotations allow you to specify a class and
        a method name that will return the SQL to run at execution time
        (Since 3.4.6, you can specify the 
<fo:inline font-family="monospace" font-size="10pt">CharSequence</fo:inline> instead of 
<fo:inline font-family="monospace" font-size="10pt">String</fo:inline> as a method return type).
        Upon executing the mapped statement, MyBatis will instantiate the class, and execute the method, as specified by the provider.
        You can pass objects that passed to arguments of a mapper method, "Mapper interface type", "Mapper method" and "Database ID"
        via the 
<fo:inline font-family="monospace" font-size="10pt">ProviderContext</fo:inline>(available since MyBatis 3.4.5 or later) as method argument.
        (In MyBatis 3.4 or later, it's allow multiple parameters)
        Attributes: 
<fo:inline font-family="monospace" font-size="10pt">value</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">type</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">method</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline>.
        The 
<fo:inline font-family="monospace" font-size="10pt">value</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">type</fo:inline> attribute is a class
        (The 
<fo:inline font-family="monospace" font-size="10pt">type</fo:inline> attribute is alias for 
<fo:inline font-family="monospace" font-size="10pt">value</fo:inline>, you must be specify either one.
        But both attributes can be omit when specify the 
<fo:inline font-family="monospace" font-size="10pt">defaultSqlProviderType</fo:inline> as global configuration).
        The 
<fo:inline font-family="monospace" font-size="10pt">method</fo:inline> is the name of the method on that class
        (Since 3.5.1, you can omit 
<fo:inline font-family="monospace" font-size="10pt">method</fo:inline> attribute, the MyBatis will resolve a target method via the
        
<fo:inline font-family="monospace" font-size="10pt">ProviderMethodResolver</fo:inline> interface.
        If not resolve by it, the MyBatis use the reserved fallback method that named 
<fo:inline font-family="monospace" font-size="10pt">provideSql</fo:inline>).
        The 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline>(Available since 3.5.5), in case there is a configured 
<fo:inline font-family="monospace" font-size="10pt">DatabaseIdProvider</fo:inline>,
        the MyBatis will use a provider method with no 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> attribute or with a 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline>
        that matches the current one. If found with and without the 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> the latter will be discarded.

        NOTE
        Following this section is a discussion about the class, which can help build dynamic SQL in a cleaner, easier to read way.</fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@Param</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">Parameter</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
N/A</fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
If your mapper method takes multiple parameters, this annotation can be applied to a mapper method parameter
        to give each of them a name. Otherwise, multiple parameters will be named by their position prefixed with "param"
        (not including any 
<fo:inline font-family="monospace" font-size="10pt">RowBounds</fo:inline> parameters). For example 
<fo:inline font-family="monospace" font-size="10pt">#{param1}</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">#{param2}</fo:inline> etc. is the default.
        With 
<fo:inline font-family="monospace" font-size="10pt">@Param("person")</fo:inline>, the parameter would be named 
<fo:inline font-family="monospace" font-size="10pt">#{person}</fo:inline>.</fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@SelectKey</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">Method</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">&lt;selectKey&gt;</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
This annotation duplicates the 
<fo:inline font-family="monospace" font-size="10pt">&lt;selectKey&gt;</fo:inline> functionality for methods annotated with
        
<fo:inline font-family="monospace" font-size="10pt">@Insert</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">@InsertProvider</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">@Update</fo:inline>, or 
<fo:inline font-family="monospace" font-size="10pt">@UpdateProvider</fo:inline>.
        It is ignored for other methods. If you specify a
        
<fo:inline font-family="monospace" font-size="10pt">@SelectKey</fo:inline> annotation, then MyBatis will ignore any generated key properties set via the
        
<fo:inline font-family="monospace" font-size="10pt">@Options</fo:inline> annotation, or configuration properties.
        Attributes: 
<fo:inline font-family="monospace" font-size="10pt">statement</fo:inline> an array of strings which is the SQL statement to execute, 
<fo:inline font-family="monospace" font-size="10pt">keyProperty</fo:inline> which
        is the property of the parameter object that will be updated with the new value, 
<fo:inline font-family="monospace" font-size="10pt">before</fo:inline> which must be either
        
<fo:inline font-family="monospace" font-size="10pt">true</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">false</fo:inline> to denote if the SQL statement should be executed before or after the insert,
        
<fo:inline font-family="monospace" font-size="10pt">resultType</fo:inline> which is the Java type of the 
<fo:inline font-family="monospace" font-size="10pt">keyProperty</fo:inline>, and 
<fo:inline font-family="monospace" font-size="10pt">statementType</fo:inline> is a type of the statement that is any one of 
<fo:inline font-family="monospace" font-size="10pt">STATEMENT</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">PREPARED</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">CALLABLE</fo:inline> that is mapped to 
<fo:inline font-family="monospace" font-size="10pt">Statement</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">PreparedStatement</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">CallableStatement</fo:inline> respectively. The default is 
<fo:inline font-family="monospace" font-size="10pt">PREPARED</fo:inline>.
        The 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline>(Available since 3.5.5), in case there is a configured 
<fo:inline font-family="monospace" font-size="10pt">DatabaseIdProvider</fo:inline>,
        the MyBatis will use a statement with no 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> attribute or with a 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline>
        that matches the current one. If found with and without the 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> the latter will be discarded.
        </fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@ResultMap</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">Method</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
N/A</fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
This annotation is used to provide the id of a 
<fo:inline font-family="monospace" font-size="10pt">&lt;resultMap&gt;</fo:inline> element in an XML mapper to a
        
<fo:inline font-family="monospace" font-size="10pt">@Select</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">@SelectProvider</fo:inline> annotation. This allows annotated selects to reuse resultmaps
        that are defined in XML. This annotation will override any 
<fo:inline font-family="monospace" font-size="10pt">@Results</fo:inline> or 
<fo:inline font-family="monospace" font-size="10pt">@ConstructorArgs</fo:inline>
        annotation if both are specified on an annotated select.</fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@ResultType</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">Method</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
N/A</fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
This annotation is used when using a result handler.  In that case, the return type is void
        so MyBatis must have a way to determine the type of object to construct for each row.
        If there is an XML result map, use the @ResultMap annotation.  If the result type is
        specified in XML on the 
<fo:inline font-family="monospace" font-size="10pt">&lt;select&gt;</fo:inline> element, then no other annotation is
        necessary.  In other cases, use this annotation.  For example, if a @Select annotated method
        will use a result handler, the return type must be void and this annotation (or @ResultMap)
        is required.  This annotation is ignored unless the method return type is void.</fo:block>
</fo:table-cell>

      </fo:table-row>

      
<fo:table-row keep-together="auto" keep-with-next="auto">
        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">@Flush</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

<fo:inline font-family="monospace" font-size="10pt">Method</fo:inline></fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="3">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
N/A</fo:block>
</fo:table-cell>

        <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="4">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
If this annotation is used, it can be called the 
<fo:inline font-family="monospace" font-size="10pt">SqlSession#flushStatements()</fo:inline> via method defined at a Mapper interface.(MyBatis 3.3 or above)</fo:block>
</fo:table-cell>

      </fo:table-row>

    
  </fo:table-body>
</fo:table>
</fo:block>


  </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="9pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">6.Mapper Annotation Examples</fo:block>

  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">This example shows using the @SelectKey annotation to retrieve a value from a sequence before an insert:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">@Insert("insert&#160;into&#160;table3&#160;(id,&#160;name)&#160;values(#{nameId},&#160;#{name})")
<fo:block/>
@SelectKey(statement="call&#160;next&#160;value&#160;for&#160;TestSequence",&#160;keyProperty="nameId",&#160;before=
<fo:inline font-weight="bold">true</fo:inline>,&#160;resultType=
<fo:inline font-weight="bold">int.class</fo:inline>)
<fo:block/>

<fo:inline font-weight="bold">int</fo:inline>&#160;insertTable3(Name&#160;name);</fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">This example shows using the @SelectKey annotation to retrieve an identity value after an insert:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">@Insert("insert&#160;into&#160;table2&#160;(name)&#160;values(#{name})")
<fo:block/>
@SelectKey(statement="call&#160;identity()",&#160;keyProperty="nameId",&#160;before=
<fo:inline font-weight="bold">false</fo:inline>,&#160;resultType=
<fo:inline font-weight="bold">int.class</fo:inline>)
<fo:block/>

<fo:inline font-weight="bold">int</fo:inline>&#160;insertTable2(Name&#160;name);</fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">This example shows using the 
<fo:inline font-family="monospace" font-size="10pt">@Flush</fo:inline> annotation to call the 
<fo:inline font-family="monospace" font-size="10pt">SqlSession#flushStatements()</fo:inline>:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">@Flush
<fo:block/>
List&lt;BatchResult&gt;&#160;flush();</fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">These examples show how to name a ResultMap by specifying id attribute of @Results annotation.</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">@Results(id&#160;=&#160;"userResult",&#160;value&#160;=&#160;{
<fo:block/>
&#160;&#160;@Result(property&#160;=&#160;"id",&#160;column&#160;=&#160;"uid",&#160;id&#160;=&#160;
<fo:inline font-weight="bold">true</fo:inline>),
<fo:block/>
&#160;&#160;@Result(property&#160;=&#160;"firstName",&#160;column&#160;=&#160;"first_name"),
<fo:block/>
&#160;&#160;@Result(property&#160;=&#160;"lastName",&#160;column&#160;=&#160;"last_name")
<fo:block/>
})
<fo:block/>
@Select("select&#160;*&#160;from&#160;users&#160;where&#160;id&#160;=&#160;#{id}")
<fo:block/>
User&#160;getUserById(Integer&#160;id);
<fo:block/>

<fo:block/>
@Results(id&#160;=&#160;"companyResults")
<fo:block/>
@ConstructorArgs({
<fo:block/>
&#160;&#160;@Arg(column&#160;=&#160;"cid",&#160;javaType&#160;=&#160;Integer.class,&#160;id&#160;=&#160;
<fo:inline font-weight="bold">true</fo:inline>),
<fo:block/>
&#160;&#160;@Arg(column&#160;=&#160;"name",&#160;javaType&#160;=&#160;String.class)
<fo:block/>
})
<fo:block/>
@Select("select&#160;*&#160;from&#160;company&#160;where&#160;id&#160;=&#160;#{id}")
<fo:block/>
Company&#160;getCompanyById(Integer&#160;id);</fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">This example shows solo parameter using the SelectProvider annotation:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">@SelectProvider(type&#160;=&#160;UserSqlBuilder.class,&#160;method&#160;=&#160;"buildGetUsersByName")
<fo:block/>
List&lt;User&gt;&#160;getUsersByName(String&#160;name);
<fo:block/>

<fo:block/>
class&#160;UserSqlBuilder&#160;{
<fo:block/>
&#160;&#160;public&#160;static&#160;String&#160;buildGetUsersByName(final&#160;String&#160;name)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;return&#160;new&#160;SQL(){{
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;SELECT("*");
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;FROM("users");
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;if&#160;(name&#160;!=&#160;null)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;WHERE("name&#160;like&#160;#{value}&#160;||&#160;'%'");
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;}
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;ORDER_BY("id");
<fo:block/>
&#160;&#160;&#160;&#160;}}.toString();
<fo:block/>
&#160;&#160;}
<fo:block/>
}</fo:block>


  
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">This example shows multiple parameters using the Sql Provider annotation:</fo:block>

  
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">@SelectProvider(type&#160;=&#160;UserSqlBuilder.class,&#160;method&#160;=&#160;"buildGetUsersByName")
<fo:block/>
List&lt;User&gt;&#160;getUsersByName(
<fo:block/>
&#160;&#160;&#160;&#160;@Param("name")&#160;String&#160;name,&#160;@Param("orderByColumn")&#160;String&#160;orderByColumn);
<fo:block/>

<fo:block/>
class&#160;UserSqlBuilder&#160;{
<fo:block/>

<fo:block/>
&#160;&#160;//&#160;If&#160;not&#160;use&#160;@Param,&#160;you&#160;should&#160;be&#160;define&#160;same&#160;arguments&#160;with&#160;mapper&#160;method
<fo:block/>
&#160;&#160;public&#160;static&#160;String&#160;buildGetUsersByName(
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;final&#160;String&#160;name,&#160;final&#160;String&#160;orderByColumn)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;return&#160;new&#160;SQL(){{
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;SELECT("*");
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;FROM("users");
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;WHERE("name&#160;like&#160;#{name}&#160;||&#160;'%'");
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;ORDER_BY(orderByColumn);
<fo:block/>
&#160;&#160;&#160;&#160;}}.toString();
<fo:block/>
&#160;&#160;}
<fo:block/>

<fo:block/>
&#160;&#160;//&#160;If&#160;use&#160;@Param,&#160;you&#160;can&#160;define&#160;only&#160;arguments&#160;to&#160;be&#160;used
<fo:block/>
&#160;&#160;public&#160;static&#160;String&#160;buildGetUsersByName(@Param("orderByColumn")&#160;final&#160;String&#160;orderByColumn)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;return&#160;new&#160;SQL(){{
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;SELECT("*");
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;FROM("users");
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;WHERE("name&#160;like&#160;#{name}&#160;||&#160;'%'");
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;ORDER_BY(orderByColumn);
<fo:block/>
&#160;&#160;&#160;&#160;}}.toString();
<fo:block/>
&#160;&#160;}
<fo:block/>
}</fo:block>


    
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">This example shows usage that share an sql provider class to all mapper methods using global configuration(Available since 3.5.6):</fo:block>

    
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
Configuration&#160;configuration&#160;=&#160;new&#160;Configuration();
<fo:block/>
configuration.setDefaultSqlProviderType(TemplateFilePathProvider.class);&#160;//&#160;Specify&#160;an&#160;sql&#160;provider&#160;class&#160;for&#160;sharing&#160;on&#160;all&#160;mapper&#160;methods
<fo:block/>
//&#160;...</fo:block>

    
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
//&#160;Can&#160;omit&#160;the&#160;type/value&#160;attribute&#160;on&#160;sql&#160;provider&#160;annotation
<fo:block/>
//&#160;If&#160;omit&#160;it,&#160;the&#160;MyBatis&#160;apply&#160;the&#160;class&#160;that&#160;specified&#160;on&#160;defaultSqlProviderType.
<fo:block/>
public&#160;interface&#160;UserMapper&#160;{
<fo:block/>

<fo:block/>
&#160;&#160;@SelectProvider&#160;//&#160;Same&#160;with&#160;@SelectProvider(TemplateFilePathProvider.class)
<fo:block/>
&#160;&#160;User&#160;findUser(int&#160;id);
<fo:block/>

<fo:block/>
&#160;&#160;@InsertProvider&#160;//&#160;Same&#160;with&#160;@InsertProvider(TemplateFilePathProvider.class)
<fo:block/>
&#160;&#160;void&#160;createUser(User&#160;user);
<fo:block/>

<fo:block/>
&#160;&#160;@UpdateProvider&#160;//&#160;Same&#160;with&#160;@UpdateProvider(TemplateFilePathProvider.class)
<fo:block/>
&#160;&#160;void&#160;updateUser(User&#160;user);
<fo:block/>

<fo:block/>
&#160;&#160;@DeleteProvider&#160;//&#160;Same&#160;with&#160;@DeleteProvider(TemplateFilePathProvider.class)
<fo:block/>
&#160;&#160;void&#160;deleteUser(int&#160;id);
<fo:block/>
}</fo:block>


    
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">This example shows usage the default implementation of 
<fo:inline font-family="monospace" font-size="10pt">ProviderMethodResolver</fo:inline>(available since MyBatis 3.5.1 or later):</fo:block>

    
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">@SelectProvider(UserSqlProvider.class)
<fo:block/>
List&lt;User&gt;&#160;getUsersByName(String&#160;name);
<fo:block/>

<fo:block/>
//&#160;Implements&#160;the&#160;ProviderMethodResolver&#160;on&#160;your&#160;provider&#160;class
<fo:block/>
class&#160;UserSqlProvider&#160;implements&#160;ProviderMethodResolver&#160;{
<fo:block/>
&#160;&#160;//&#160;In&#160;default&#160;implementation,&#160;it&#160;will&#160;resolve&#160;a&#160;method&#160;that&#160;method&#160;name&#160;is&#160;matched&#160;with&#160;mapper&#160;method
<fo:block/>
&#160;&#160;public&#160;static&#160;String&#160;getUsersByName(final&#160;String&#160;name)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;return&#160;new&#160;SQL(){{
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;SELECT("*");
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;FROM("users");
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;if&#160;(name&#160;!=&#160;null)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;WHERE("name&#160;like&#160;#{value}&#160;||&#160;'%'");
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;}
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;ORDER_BY("id");
<fo:block/>
&#160;&#160;&#160;&#160;}}.toString();
<fo:block/>
&#160;&#160;}
<fo:block/>
}</fo:block>



    
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">This example shows usage the 
<fo:inline font-family="monospace" font-size="10pt">databaseId</fo:inline> attribute on the statement annotation(Available since 3.5.5):</fo:block>

    
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
@Select(value&#160;=&#160;"SELECT&#160;SYS_GUID()&#160;FROM&#160;dual",&#160;databaseId&#160;=&#160;"oracle")&#160;//&#160;Use&#160;this&#160;statement&#160;if&#160;DatabaseIdProvider&#160;provide&#160;"oracle"
<fo:block/>
@Select(value&#160;=&#160;"SELECT&#160;uuid_generate_v4()",&#160;databaseId&#160;=&#160;"postgres")&#160;//&#160;Use&#160;this&#160;statement&#160;if&#160;DatabaseIdProvider&#160;provide&#160;"postgres"
<fo:block/>
@Select("SELECT&#160;RANDOM_UUID()")&#160;//&#160;Use&#160;this&#160;statement&#160;if&#160;the&#160;DatabaseIdProvider&#160;not&#160;configured&#160;or&#160;not&#160;matches&#160;databaseId
<fo:block/>
String&#160;generateId();
<fo:block/>
</fo:block>


  </fo:block>
</fo:block>
</fo:block>


  </fo:block>

  
</fo:block></fo:flow></fo:page-sequence>
<!--

       Copyright 2009-2019 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->

  
<fo:page-sequence initial-page-number="auto" master-reference="body">

<fo:static-content flow-name="xsl-region-before"><fo:table table-layout="fixed" width="100%" >

<fo:table-column column-width="5.625in" />
<fo:table-column column-width="0.625in" />
<fo:table-body>
<fo:table-row>
<fo:table-cell>
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545" text-align="left">7   Statement Builders</fo:block></fo:table-cell>
<fo:table-cell>
<fo:block font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number /></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:static-content>
<fo:static-content flow-name="xsl-region-after">
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545">&#169;2023, MyBatis.org &#8226; ALL RIGHTS RESERVED.</fo:block></fo:static-content><fo:flow flow-name="xsl-region-body">

<fo:block id="./statement-builders">
<fo:list-block>
<fo:list-item><fo:list-item-label end-indent="6.375in" start-indent="-1in">

<fo:block font-size="9.5pt" line-height="10pt" text-align="right" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">
<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">7</fo:block></fo:block></fo:list-item-label><fo:list-item-body end-indent="1in" start-indent="0in">

<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">Statement Builders</fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block>
<fo:block space-after.optimum="0em">
<fo:leader leader-length.optimum="100%" leader-pattern="dots" rule-thickness="1pt" color="#454545" /></fo:block>
<fo:block>
    

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="12pt" font-weight="bold" space-before="18pt" space-after="6pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">7.1   The SQL Builder Class</fo:block>

      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">7.1.1   The Problem</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">One of the nastiest things a Java developer will ever have to do is embed SQL in Java code. Usually this is
          done because the SQL has to be dynamically generated - otherwise you could externalize it in a file or a
          stored proc. As you've already seen, MyBatis has a powerful answer for dynamic SQL generation in its
          XML mapping features. However, sometimes it becomes necessary to build a SQL statement string inside of Java
          code. In that case, MyBatis has one more feature to help you out, before reducing yourself to the typical mess
          of plus signs, quotes, newlines, formatting problems and nested conditionals to deal with extra commas or
          AND conjunctions. Indeed, dynamically generating SQL code in Java can be a real nightmare.  For example:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
String&#160;sql&#160;=&#160;"SELECT&#160;P.ID,&#160;P.USERNAME,&#160;P.PASSWORD,&#160;P.FULL_NAME,&#160;"
<fo:block/>
"P.LAST_NAME,P.CREATED_ON,&#160;P.UPDATED_ON&#160;"&#160;+
<fo:block/>
"FROM&#160;PERSON&#160;P,&#160;ACCOUNT&#160;A&#160;"&#160;+
<fo:block/>
"INNER&#160;JOIN&#160;DEPARTMENT&#160;D&#160;on&#160;D.ID&#160;=&#160;P.DEPARTMENT_ID&#160;"&#160;+
<fo:block/>
"INNER&#160;JOIN&#160;COMPANY&#160;C&#160;on&#160;D.COMPANY_ID&#160;=&#160;C.ID&#160;"&#160;+
<fo:block/>
"WHERE&#160;(P.ID&#160;=&#160;A.ID&#160;AND&#160;P.FIRST_NAME&#160;like&#160;?)&#160;"&#160;+
<fo:block/>
"OR&#160;(P.LAST_NAME&#160;like&#160;?)&#160;"&#160;+
<fo:block/>
"GROUP&#160;BY&#160;P.ID&#160;"&#160;+
<fo:block/>
"HAVING&#160;(P.LAST_NAME&#160;like&#160;?)&#160;"&#160;+
<fo:block/>
"OR&#160;(P.FIRST_NAME&#160;like&#160;?)&#160;"&#160;+
<fo:block/>
"ORDER&#160;BY&#160;P.ID,&#160;P.FULL_NAME";
<fo:block/>
</fo:block>

      </fo:block>

      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">7.1.2   The Solution</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">MyBatis 3 offers a convenient utility class to help with the problem.
        With the SQL class, you simply create an instance that lets you call methods against it to build a SQL statement
        one step at a time.  The example problem above would look like this when rewritten with the SQL class:
      </fo:block>


      
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
private&#160;String&#160;selectPersonSql()&#160;{
<fo:block/>
&#160;&#160;return&#160;new&#160;SQL()&#160;{{
<fo:block/>
&#160;&#160;&#160;&#160;SELECT("P.ID,&#160;P.USERNAME,&#160;P.PASSWORD,&#160;P.FULL_NAME");
<fo:block/>
&#160;&#160;&#160;&#160;SELECT("P.LAST_NAME,&#160;P.CREATED_ON,&#160;P.UPDATED_ON");
<fo:block/>
&#160;&#160;&#160;&#160;FROM("PERSON&#160;P");
<fo:block/>
&#160;&#160;&#160;&#160;FROM("ACCOUNT&#160;A");
<fo:block/>
&#160;&#160;&#160;&#160;INNER_JOIN("DEPARTMENT&#160;D&#160;on&#160;D.ID&#160;=&#160;P.DEPARTMENT_ID");
<fo:block/>
&#160;&#160;&#160;&#160;INNER_JOIN("COMPANY&#160;C&#160;on&#160;D.COMPANY_ID&#160;=&#160;C.ID");
<fo:block/>
&#160;&#160;&#160;&#160;WHERE("P.ID&#160;=&#160;A.ID");
<fo:block/>
&#160;&#160;&#160;&#160;WHERE("P.FIRST_NAME&#160;like&#160;?");
<fo:block/>
&#160;&#160;&#160;&#160;OR();
<fo:block/>
&#160;&#160;&#160;&#160;WHERE("P.LAST_NAME&#160;like&#160;?");
<fo:block/>
&#160;&#160;&#160;&#160;GROUP_BY("P.ID");
<fo:block/>
&#160;&#160;&#160;&#160;HAVING("P.LAST_NAME&#160;like&#160;?");
<fo:block/>
&#160;&#160;&#160;&#160;OR();
<fo:block/>
&#160;&#160;&#160;&#160;HAVING("P.FIRST_NAME&#160;like&#160;?");
<fo:block/>
&#160;&#160;&#160;&#160;ORDER_BY("P.ID");
<fo:block/>
&#160;&#160;&#160;&#160;ORDER_BY("P.FULL_NAME");
<fo:block/>
&#160;&#160;}}.toString();
<fo:block/>
}
<fo:block/>
</fo:block>


      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">What is so special about that example? Well, if you look closely, it doesn't have to worry about
          accidentally duplicating "AND" keywords, or choosing between "WHERE"
          and "AND" or none at all. The SQL class takes care of understanding where "WHERE"
          needs to go, where an "AND" should be used and all of the String concatenation.
        </fo:block>


      </fo:block>


      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">7.1.3   The SQL Class</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Here are some examples:</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
//&#160;Anonymous&#160;inner&#160;class
<fo:block/>
public&#160;String&#160;deletePersonSql()&#160;{
<fo:block/>
&#160;&#160;return&#160;new&#160;SQL()&#160;{{
<fo:block/>
&#160;&#160;&#160;&#160;DELETE_FROM("PERSON");
<fo:block/>
&#160;&#160;&#160;&#160;WHERE("ID&#160;=&#160;#{id}");
<fo:block/>
&#160;&#160;}}.toString();
<fo:block/>
}
<fo:block/>

<fo:block/>
//&#160;Builder&#160;/&#160;Fluent&#160;style
<fo:block/>
public&#160;String&#160;insertPersonSql()&#160;{
<fo:block/>
&#160;&#160;String&#160;sql&#160;=&#160;new&#160;SQL()
<fo:block/>
&#160;&#160;&#160;&#160;.INSERT_INTO("PERSON")
<fo:block/>
&#160;&#160;&#160;&#160;.VALUES("ID,&#160;FIRST_NAME",&#160;"#{id},&#160;#{firstName}")
<fo:block/>
&#160;&#160;&#160;&#160;.VALUES("LAST_NAME",&#160;"#{lastName}")
<fo:block/>
&#160;&#160;&#160;&#160;.toString();
<fo:block/>
&#160;&#160;return&#160;sql;
<fo:block/>
}
<fo:block/>

<fo:block/>
//&#160;With&#160;conditionals&#160;(note&#160;the&#160;final&#160;parameters,&#160;required&#160;for&#160;the&#160;anonymous&#160;inner&#160;class&#160;to&#160;access&#160;them)
<fo:block/>
public&#160;String&#160;selectPersonLike(final&#160;String&#160;id,&#160;final&#160;String&#160;firstName,&#160;final&#160;String&#160;lastName)&#160;{
<fo:block/>
&#160;&#160;return&#160;new&#160;SQL()&#160;{{
<fo:block/>
&#160;&#160;&#160;&#160;SELECT("P.ID,&#160;P.USERNAME,&#160;P.PASSWORD,&#160;P.FIRST_NAME,&#160;P.LAST_NAME");
<fo:block/>
&#160;&#160;&#160;&#160;FROM("PERSON&#160;P");
<fo:block/>
&#160;&#160;&#160;&#160;if&#160;(id&#160;!=&#160;null)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;WHERE("P.ID&#160;like&#160;#{id}");
<fo:block/>
&#160;&#160;&#160;&#160;}
<fo:block/>
&#160;&#160;&#160;&#160;if&#160;(firstName&#160;!=&#160;null)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;WHERE("P.FIRST_NAME&#160;like&#160;#{firstName}");
<fo:block/>
&#160;&#160;&#160;&#160;}
<fo:block/>
&#160;&#160;&#160;&#160;if&#160;(lastName&#160;!=&#160;null)&#160;{
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;WHERE("P.LAST_NAME&#160;like&#160;#{lastName}");
<fo:block/>
&#160;&#160;&#160;&#160;}
<fo:block/>
&#160;&#160;&#160;&#160;ORDER_BY("P.LAST_NAME");
<fo:block/>
&#160;&#160;}}.toString();
<fo:block/>
}
<fo:block/>

<fo:block/>
public&#160;String&#160;deletePersonSql()&#160;{
<fo:block/>
&#160;&#160;return&#160;new&#160;SQL()&#160;{{
<fo:block/>
&#160;&#160;&#160;&#160;DELETE_FROM("PERSON");
<fo:block/>
&#160;&#160;&#160;&#160;WHERE("ID&#160;=&#160;#{id}");
<fo:block/>
&#160;&#160;}}.toString();
<fo:block/>
}
<fo:block/>

<fo:block/>
public&#160;String&#160;insertPersonSql()&#160;{
<fo:block/>
&#160;&#160;return&#160;new&#160;SQL()&#160;{{
<fo:block/>
&#160;&#160;&#160;&#160;INSERT_INTO("PERSON");
<fo:block/>
&#160;&#160;&#160;&#160;VALUES("ID,&#160;FIRST_NAME",&#160;"#{id},&#160;#{firstName}");
<fo:block/>
&#160;&#160;&#160;&#160;VALUES("LAST_NAME",&#160;"#{lastName}");
<fo:block/>
&#160;&#160;}}.toString();
<fo:block/>
}
<fo:block/>

<fo:block/>
public&#160;String&#160;updatePersonSql()&#160;{
<fo:block/>
&#160;&#160;return&#160;new&#160;SQL()&#160;{{
<fo:block/>
&#160;&#160;&#160;&#160;UPDATE("PERSON");
<fo:block/>
&#160;&#160;&#160;&#160;SET("FIRST_NAME&#160;=&#160;#{firstName}");
<fo:block/>
&#160;&#160;&#160;&#160;WHERE("ID&#160;=&#160;#{id}");
<fo:block/>
&#160;&#160;}}.toString();
<fo:block/>
}
<fo:block/>
</fo:block>


        

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Method</fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Description</fo:block>
</fo:table-cell>

            </fo:table-row>

          
          
            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">SELECT(String)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">SELECT(String...)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                </fo:list-block>

              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Starts or appends to a
                
<fo:inline font-family="monospace" font-size="10pt">SELECT</fo:inline>
                clause. Can be called more than once, and parameters will be appended to
                the
                
<fo:inline font-family="monospace" font-size="10pt">SELECT</fo:inline>
                clause. The parameters are usually a comma separated list of columns and aliases, but can be
                anything acceptable to the driver.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">SELECT_DISTINCT(String)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">SELECT_DISTINCT(String...)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                </fo:list-block>

              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Starts or appends to a
                
<fo:inline font-family="monospace" font-size="10pt">SELECT</fo:inline>
                clause, also adds the
                
<fo:inline font-family="monospace" font-size="10pt">DISTINCT</fo:inline>
                keyword to the generated query.
                Can be called more than once, and parameters will be appended to the
                
<fo:inline font-family="monospace" font-size="10pt">SELECT</fo:inline>
                clause. The parameters
                are usually a comma separated list of columns and aliases, but can be anything acceptable to the driver.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">FROM(String)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">FROM(String...)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                </fo:list-block>

              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Starts or appends to a
                
<fo:inline font-family="monospace" font-size="10pt">FROM</fo:inline>
                clause. Can be called more than once, and parameters will be appended to the
                
<fo:inline font-family="monospace" font-size="10pt">FROM</fo:inline>
                clause. Parameters are usually a table name and an alias, or anything acceptable to the driver.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">JOIN(String)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">JOIN(String...)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">INNER_JOIN(String)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">INNER_JOIN(String...)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">LEFT_OUTER_JOIN(String)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">LEFT_OUTER_JOIN(String...)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">RIGHT_OUTER_JOIN(String)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">RIGHT_OUTER_JOIN(String...)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                </fo:list-block>

              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Adds a new
                
<fo:inline font-family="monospace" font-size="10pt">JOIN</fo:inline>
                clause of the appropriate type, depending on the method called. The parameter can include
                a standard join consisting of the columns and the conditions to join on.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">WHERE(String)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">WHERE(String...)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                </fo:list-block>

              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Appends a new
                
<fo:inline font-family="monospace" font-size="10pt">WHERE</fo:inline>
                clause condition, concatenated by
<fo:inline font-family="monospace" font-size="10pt">AND</fo:inline>. Can be called multiple times, which causes it
                to concatenate the new conditions each time with
<fo:inline font-family="monospace" font-size="10pt">AND</fo:inline>. Use
                
<fo:inline font-family="monospace" font-size="10pt">OR()</fo:inline>
                to split with an
<fo:inline font-family="monospace" font-size="10pt">OR</fo:inline>.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">OR()</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Splits the current
                
<fo:inline font-family="monospace" font-size="10pt">WHERE</fo:inline>
                clause conditions with an
<fo:inline font-family="monospace" font-size="10pt">OR</fo:inline>. Can be called more than once, but calling more
                than once in a row will generate erratic
<fo:inline font-family="monospace" font-size="10pt">SQL</fo:inline>.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">AND()</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Splits the current
                
<fo:inline font-family="monospace" font-size="10pt">WHERE</fo:inline>
                clause conditions with an
<fo:inline font-family="monospace" font-size="10pt">AND</fo:inline>. Can be called more than once, but calling more
                than once in a row will generate erratic
<fo:inline font-family="monospace" font-size="10pt">SQL</fo:inline>. Because
                
<fo:inline font-family="monospace" font-size="10pt">WHERE</fo:inline>
                and
                
<fo:inline font-family="monospace" font-size="10pt">HAVING</fo:inline>
                both automatically concatenate with
                
<fo:inline font-family="monospace" font-size="10pt">AND</fo:inline>, this is a very uncommon method to use and is only really included for completeness.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">GROUP_BY(String)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">GROUP_BY(String...)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                </fo:list-block>

              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Appends a new
                
<fo:inline font-family="monospace" font-size="10pt">GROUP BY</fo:inline>
                clause elements, concatenated by a comma. Can be called multiple times, which
                causes it to concatenate the new conditions each time with a comma.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">HAVING(String)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">HAVING(String...)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                </fo:list-block>

              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Appends a new
                
<fo:inline font-family="monospace" font-size="10pt">HAVING</fo:inline>
                clause condition, concatenated by AND. Can be called multiple times, which causes it
                to concatenate the new conditions each time with
<fo:inline font-family="monospace" font-size="10pt">AND</fo:inline>. Use
                
<fo:inline font-family="monospace" font-size="10pt">OR()</fo:inline>
                to split with an
<fo:inline font-family="monospace" font-size="10pt">OR</fo:inline>.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">ORDER_BY(String)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">ORDER_BY(String...)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                </fo:list-block>

              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Appends a new
                
<fo:inline font-family="monospace" font-size="10pt">ORDER BY</fo:inline>
                clause elements, concatenated by a comma. Can be called multiple times, which
                causes it to concatenate the new conditions each time with a comma.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">LIMIT(String)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">LIMIT(int)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                </fo:list-block>

              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Appends a 
<fo:inline font-family="monospace" font-size="10pt">LIMIT</fo:inline> clause.
                This method valid when use together with SELECT(), UPDATE() and DELETE().
                And this method is designed to use together with OFFSET() when use SELECT(). (Available since 3.5.2)
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">OFFSET(String)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">OFFSET(long)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                </fo:list-block>

              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Appends a 
<fo:inline font-family="monospace" font-size="10pt">OFFSET</fo:inline> clause.
                This method valid when use together with SELECT().
                And this method is designed to use together with LIMIT(). (Available since 3.5.2)
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">OFFSET_ROWS(String)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">OFFSET_ROWS(long)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                </fo:list-block>

              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Appends a 
<fo:inline font-family="monospace" font-size="10pt">OFFSET n ROWS</fo:inline> clause.
                This method valid when use together with SELECT().
                And this method is designed to use together with FETCH_FIRST_ROWS_ONLY(). (Available since 3.5.2)
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">FETCH_FIRST_ROWS_ONLY(String)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">FETCH_FIRST_ROWS_ONLY(int)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                </fo:list-block>

              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Appends a 
<fo:inline font-family="monospace" font-size="10pt">FETCH FIRST n ROWS ONLY</fo:inline> clause.
                This method valid when use together with SELECT().
                And this method is designed to use together with OFFSET_ROWS(). (Available since 3.5.2)
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">DELETE_FROM(String)</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Starts a delete statement and specifies the table to delete from. Generally this should be followed by
                a
                WHERE statement!
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">INSERT_INTO(String)</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Starts an insert statement and specifies the table to insert into. This should be followed by one or
                more VALUES() or INTO_COLUMNS() and INTO_VALUES() calls.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">SET(String)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                  
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
                    
<fo:inline font-family="monospace" font-size="10pt">SET(String...)</fo:inline>
                  </fo:block>
</fo:list-item-body>
</fo:list-item>

                </fo:list-block>

              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Appends to the "set" list for an update statement.</fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">UPDATE(String)</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Starts an update statement and specifies the table to update. This should be followed by one or more
                SET() calls, and usually a WHERE() call.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">VALUES(String, String)</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Appends to an insert statement. The first parameter is the column(s) to insert, the second parameter
                is
                the value(s).
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">INTO_COLUMNS(String...)</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Appends columns phrase to an insert statement.
                This should be call INTO_VALUES() with together.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">INTO_VALUES(String...)</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Appends values phrase to an insert statement.
                This should be call INTO_COLUMNS() with together.
              </fo:block>
</fo:table-cell>

            </fo:table-row>

            
<fo:table-row keep-together="auto" keep-with-next="auto">
              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                
<fo:inline font-family="monospace" font-size="10pt">ADD_ROW()</fo:inline>
              </fo:block>
</fo:table-cell>

              <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

                Add new row for bulk insert. (Available since 3.5.2)
              </fo:block>
</fo:table-cell>

            </fo:table-row>

          
        </fo:table-body>
</fo:table>
</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          NOTE
          It is important to note that SQL class writes 
<fo:inline font-family="monospace" font-size="10pt">LIMIT</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">OFFSET</fo:inline>, 
<fo:inline font-family="monospace" font-size="10pt">OFFSET n ROWS</fo:inline> and 
<fo:inline font-family="monospace" font-size="10pt">FETCH FIRST n ROWS ONLY</fo:inline> clauses into the generated statement as is.
          In other words, the library does not attempt to normalize those values for databases that don’t support these clauses directly.
          Therefore, it is very important for users to understand whether or not the target database supports these clauses.
          If the target database does not support these clauses, then it is likely that using this support will create SQL that has runtime errors.
        </fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Since version 3.4.2, you can use variable-length arguments as follows:</fo:block>



<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
public&#160;String&#160;selectPersonSql()&#160;{
<fo:block/>
&#160;&#160;return&#160;new&#160;SQL()
<fo:block/>
&#160;&#160;&#160;&#160;.SELECT("P.ID",&#160;"A.USERNAME",&#160;"A.PASSWORD",&#160;"P.FULL_NAME",&#160;"D.DEPARTMENT_NAME",&#160;"C.COMPANY_NAME")
<fo:block/>
&#160;&#160;&#160;&#160;.FROM("PERSON&#160;P",&#160;"ACCOUNT&#160;A")
<fo:block/>
&#160;&#160;&#160;&#160;.INNER_JOIN("DEPARTMENT&#160;D&#160;on&#160;D.ID&#160;=&#160;P.DEPARTMENT_ID",&#160;"COMPANY&#160;C&#160;on&#160;D.COMPANY_ID&#160;=&#160;C.ID")
<fo:block/>
&#160;&#160;&#160;&#160;.WHERE("P.ID&#160;=&#160;A.ID",&#160;"P.FULL_NAME&#160;like&#160;#{name}")
<fo:block/>
&#160;&#160;&#160;&#160;.ORDER_BY("P.ID",&#160;"P.FULL_NAME")
<fo:block/>
&#160;&#160;&#160;&#160;.toString();
<fo:block/>
}
<fo:block/>

<fo:block/>
public&#160;String&#160;insertPersonSql()&#160;{
<fo:block/>
&#160;&#160;return&#160;new&#160;SQL()
<fo:block/>
&#160;&#160;&#160;&#160;.INSERT_INTO("PERSON")
<fo:block/>
&#160;&#160;&#160;&#160;.INTO_COLUMNS("ID",&#160;"FULL_NAME")
<fo:block/>
&#160;&#160;&#160;&#160;.INTO_VALUES("#{id}",&#160;"#{fullName}")
<fo:block/>
&#160;&#160;&#160;&#160;.toString();
<fo:block/>
}
<fo:block/>

<fo:block/>
public&#160;String&#160;updatePersonSql()&#160;{
<fo:block/>
&#160;&#160;return&#160;new&#160;SQL()
<fo:block/>
&#160;&#160;&#160;&#160;.UPDATE("PERSON")
<fo:block/>
&#160;&#160;&#160;&#160;.SET("FULL_NAME&#160;=&#160;#{fullName}",&#160;"DATE_OF_BIRTH&#160;=&#160;#{dateOfBirth}")
<fo:block/>
&#160;&#160;&#160;&#160;.WHERE("ID&#160;=&#160;#{id}")
<fo:block/>
&#160;&#160;&#160;&#160;.toString();
<fo:block/>
}
<fo:block/>
</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Since version 3.5.2, you can create insert statement for bulk insert as follow:</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
public&#160;String&#160;insertPersonsSql()&#160;{
<fo:block/>
&#160;&#160;//&#160;INSERT&#160;INTO&#160;PERSON&#160;(ID,&#160;FULL_NAME)
<fo:block/>
&#160;&#160;//&#160;&#160;&#160;&#160;&#160;VALUES&#160;(#{mainPerson.id},&#160;#{mainPerson.fullName})&#160;,&#160;(#{subPerson.id},&#160;#{subPerson.fullName})
<fo:block/>
&#160;&#160;return&#160;new&#160;SQL()
<fo:block/>
&#160;&#160;&#160;&#160;.INSERT_INTO("PERSON")
<fo:block/>
&#160;&#160;&#160;&#160;.INTO_COLUMNS("ID",&#160;"FULL_NAME")
<fo:block/>
&#160;&#160;&#160;&#160;.INTO_VALUES("#{mainPerson.id}",&#160;"#{mainPerson.fullName}")
<fo:block/>
&#160;&#160;&#160;&#160;.ADD_ROW()
<fo:block/>
&#160;&#160;&#160;&#160;.INTO_VALUES("#{subPerson.id}",&#160;"#{subPerson.fullName}")
<fo:block/>
&#160;&#160;&#160;&#160;.toString();
<fo:block/>
}
<fo:block/>
</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Since version 3.5.2, you can create select statement for limiting search result rows clause as follow:</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
public&#160;String&#160;selectPersonsWithOffsetLimitSql()&#160;{
<fo:block/>
&#160;&#160;//&#160;SELECT&#160;id,&#160;name&#160;FROM&#160;PERSON
<fo:block/>
&#160;&#160;//&#160;&#160;&#160;&#160;&#160;LIMIT&#160;#{limit}&#160;OFFSET&#160;#{offset}
<fo:block/>
&#160;&#160;return&#160;new&#160;SQL()
<fo:block/>
&#160;&#160;&#160;&#160;.SELECT("id",&#160;"name")
<fo:block/>
&#160;&#160;&#160;&#160;.FROM("PERSON")
<fo:block/>
&#160;&#160;&#160;&#160;.LIMIT("#{limit}")
<fo:block/>
&#160;&#160;&#160;&#160;.OFFSET("#{offset}")
<fo:block/>
&#160;&#160;&#160;&#160;.toString();
<fo:block/>
}
<fo:block/>

<fo:block/>
public&#160;String&#160;selectPersonsWithFetchFirstSql()&#160;{
<fo:block/>
&#160;&#160;//&#160;SELECT&#160;id,&#160;name&#160;FROM&#160;PERSON
<fo:block/>
&#160;&#160;//&#160;&#160;&#160;&#160;&#160;OFFSET&#160;#{offset}&#160;ROWS&#160;FETCH&#160;FIRST&#160;#{limit}&#160;ROWS&#160;ONLY
<fo:block/>
&#160;&#160;return&#160;new&#160;SQL()
<fo:block/>
&#160;&#160;&#160;&#160;.SELECT("id",&#160;"name")
<fo:block/>
&#160;&#160;&#160;&#160;.FROM("PERSON")
<fo:block/>
&#160;&#160;&#160;&#160;.OFFSET_ROWS("#{offset}")
<fo:block/>
&#160;&#160;&#160;&#160;.FETCH_FIRST_ROWS_ONLY("#{limit}")
<fo:block/>
&#160;&#160;&#160;&#160;.toString();
<fo:block/>
}
<fo:block/>
</fo:block>


      </fo:block>


      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">7.1.4   SqlBuilder and SelectBuilder (DEPRECATED)</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          Before version 3.2 we took a bit of a different approach, by utilizing a ThreadLocal variable to mask some of the
          language limitations that make Java DSLs a bit cumbersome. However, this approach is now deprecated, as modern
          frameworks have warmed people to the idea of using builder-type patterns and anonymous inner classes for such
          things. Therefore the SelectBuilder and SqlBuilder classes have been deprecated.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The following methods apply to only the deprecated SqlBuilder and SelectBuilder classes.
        </fo:block>

        

<fo:block padding-before="9pt" padding-after="12pt">
<fo:table table-omit-footer-at-break="false" table-layout="fixed" width="100%">
<fo:table-column column-width="proportional-column-width(1)"/>
<fo:table-column column-width="proportional-column-width(1)"/>

<fo:table-body>
        
          
<fo:table-row keep-together="auto" keep-with-next="auto">
            <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Method</fo:block>
</fo:table-cell>

            <fo:table-cell padding-before="7pt" display-align="after" background-color="#bbbbbb" color="white" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="10pt" font-weight="bold" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
Description</fo:block>
</fo:table-cell>

          </fo:table-row>

        
        
        
<fo:table-row keep-together="auto" keep-with-next="auto">
          <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

            
<fo:inline font-family="monospace" font-size="10pt">BEGIN()</fo:inline>
            /
            
<fo:inline font-family="monospace" font-size="10pt">RESET()</fo:inline>
          </fo:block>
</fo:table-cell>

          <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
These methods clear the ThreadLocal state of the SelectBuilder class, and prepare it for a new
            statement to be
            built.
            
<fo:inline font-family="monospace" font-size="10pt">BEGIN()</fo:inline>
            reads best when starting a new statement.
            
<fo:inline font-family="monospace" font-size="10pt">RESET()</fo:inline>
            reads best when clearing a
            statement in the middle of execution for some reason (perhaps if the logic demands a completely
            different
            statement under some conditions).
          </fo:block>
</fo:table-cell>

        </fo:table-row>

        
<fo:table-row keep-together="auto" keep-with-next="auto">
          <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="1">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">

            
<fo:inline font-family="monospace" font-size="10pt">SQL()</fo:inline>
          </fo:block>
</fo:table-cell>

          <fo:table-cell padding-before="4pt" padding-after="1.5pt" background-color="#eeeeee" padding-start="2.5pt" padding-end="5pt" keep-together.within-column="always" column-number="2">
<fo:block font-size="9pt" font-family="Helvetica,sans-serif" line-height="1.2em" text-align="left">
This returns the generated
            
<fo:inline font-family="monospace" font-size="10pt">SQL()</fo:inline>
            and resets the
            
<fo:inline font-family="monospace" font-size="10pt">SelectBuilder</fo:inline>
            state (as if
            
<fo:inline font-family="monospace" font-size="10pt">BEGIN()</fo:inline>
            or
            
<fo:inline font-family="monospace" font-size="10pt">RESET()</fo:inline>
            were called).
            Thus, this method can only be called ONCE!
          </fo:block>
</fo:table-cell>

        </fo:table-row>

        
        </fo:table-body>
</fo:table>
</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The SelectBuilder and SqlBuilder classes are not magical, but it's important to know how they work.
          SelectBuilder and SqlBuilder use a combination of
          Static Imports and a ThreadLocal variable to enable a clean syntax that can be easily interlaced with
          conditionals.  To use them, you statically import the methods from the classes like this (one or the other,
          not both):
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">import&#160;static&#160;org.apache.ibatis.jdbc.SelectBuilder.*;</fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">import&#160;static&#160;org.apache.ibatis.jdbc.SqlBuilder.*;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">This allows us to create methods like these:</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
/*&#160;DEPRECATED&#160;*/
<fo:block/>
public&#160;String&#160;selectBlogsSql()&#160;{
<fo:block/>
&#160;&#160;BEGIN();&#160;//&#160;Clears&#160;ThreadLocal&#160;variable
<fo:block/>
&#160;&#160;SELECT("*");
<fo:block/>
&#160;&#160;FROM("BLOG");
<fo:block/>
&#160;&#160;return&#160;SQL();
<fo:block/>
}
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">
<fo:block/>
/*&#160;DEPRECATED&#160;*/
<fo:block/>
private&#160;String&#160;selectPersonSql()&#160;{
<fo:block/>
&#160;&#160;BEGIN();&#160;//&#160;Clears&#160;ThreadLocal&#160;variable
<fo:block/>
&#160;&#160;SELECT("P.ID,&#160;P.USERNAME,&#160;P.PASSWORD,&#160;P.FULL_NAME");
<fo:block/>
&#160;&#160;SELECT("P.LAST_NAME,&#160;P.CREATED_ON,&#160;P.UPDATED_ON");
<fo:block/>
&#160;&#160;FROM("PERSON&#160;P");
<fo:block/>
&#160;&#160;FROM("ACCOUNT&#160;A");
<fo:block/>
&#160;&#160;INNER_JOIN("DEPARTMENT&#160;D&#160;on&#160;D.ID&#160;=&#160;P.DEPARTMENT_ID");
<fo:block/>
&#160;&#160;INNER_JOIN("COMPANY&#160;C&#160;on&#160;D.COMPANY_ID&#160;=&#160;C.ID");
<fo:block/>
&#160;&#160;WHERE("P.ID&#160;=&#160;A.ID");
<fo:block/>
&#160;&#160;WHERE("P.FIRST_NAME&#160;like&#160;?");
<fo:block/>
&#160;&#160;OR();
<fo:block/>
&#160;&#160;WHERE("P.LAST_NAME&#160;like&#160;?");
<fo:block/>
&#160;&#160;GROUP_BY("P.ID");
<fo:block/>
&#160;&#160;HAVING("P.LAST_NAME&#160;like&#160;?");
<fo:block/>
&#160;&#160;OR();
<fo:block/>
&#160;&#160;HAVING("P.FIRST_NAME&#160;like&#160;?");
<fo:block/>
&#160;&#160;ORDER_BY("P.ID");
<fo:block/>
&#160;&#160;ORDER_BY("P.FULL_NAME");
<fo:block/>
&#160;&#160;return&#160;SQL();
<fo:block/>
}
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</fo:block>


      </fo:block>



    </fo:block>

  
</fo:block></fo:flow></fo:page-sequence>

<!--

       Copyright 2009-2020 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->

  
<fo:page-sequence initial-page-number="auto" master-reference="body">

<fo:static-content flow-name="xsl-region-before"><fo:table table-layout="fixed" width="100%" >

<fo:table-column column-width="5.625in" />
<fo:table-column column-width="0.625in" />
<fo:table-body>
<fo:table-row>
<fo:table-cell>
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545" text-align="left">8   Logging</fo:block></fo:table-cell>
<fo:table-cell>
<fo:block font-family="Helvetica,sans-serif" font-size="9.5pt" text-align="right" color="black">
<fo:page-number /></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:static-content>
<fo:static-content flow-name="xsl-region-after">
<fo:block letter-spacing="2pt" font-family="Helvetica,sans-serif" font-size="6pt" color="#454545">&#169;2023, MyBatis.org &#8226; ALL RIGHTS RESERVED.</fo:block></fo:static-content><fo:flow flow-name="xsl-region-body">

<fo:block id="./logging">
<fo:list-block>
<fo:list-item><fo:list-item-label end-indent="6.375in" start-indent="-1in">

<fo:block font-size="9.5pt" line-height="10pt" text-align="right" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">
<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">8</fo:block></fo:block></fo:list-item-label><fo:list-item-body end-indent="1in" start-indent="0in">

<fo:block line-height="10pt" space-after="6pt" font-size="16pt" font-weight="bold" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">Logging</fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block>
<fo:block space-after.optimum="0em">
<fo:leader leader-length.optimum="100%" leader-pattern="dots" rule-thickness="1pt" color="#454545" /></fo:block>
<fo:block>
    

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="12pt" font-weight="bold" space-before="18pt" space-after="6pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">8.1   Logging</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif"></fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">MyBatis provides logging information through the use of an
        internal log factory. The internal log factory will delegate logging
        information to one of the following log implementations:
      </fo:block>

      

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          SLF4J
        </fo:block>
</fo:list-item-body>
</fo:list-item>

        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          Apache Commons Logging
        </fo:block>
</fo:list-item-body>
</fo:list-item>

        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          Log4j 2
        </fo:block>
</fo:list-item-body>
</fo:list-item>

        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          Log4j
        </fo:block>
</fo:list-item-body>
</fo:list-item>

        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          JDK logging
        </fo:block>
</fo:list-item-body>
</fo:list-item>

      </fo:list-block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The logging solution chosen is based on runtime introspection by
        the internal MyBatis log factory. The MyBatis log factory will use
        the first logging implementation it finds (implementations are
        searched in the above order). If MyBatis finds none of the above
        implementations, then logging will be disabled.
      </fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Many environments ship Commons Logging as a part of the application server
        classpath (good examples include Tomcat and WebSphere). It is
        important to know that in such environments, MyBatis will use Commons Logging as
        the logging implementation. In an environment like WebSphere this
        will mean that your Log4J configuration will be ignored because
        WebSphere supplies its own proprietary implementation of Commons Logging. This
        can be very frustrating because it will appear that MyBatis is
        ignoring your Log4J configuration (in fact, MyBatis is ignoring your
        Log4J configuration because MyBatis will use Commons Logging in such
        environments). If your application is running in an environment
        where Commons Logging is included in the classpath but you would
        rather use one of the other logging implementations you can select a
        different logging implementation by adding a setting in mybatis-config.xml file as follows:
      </fo:block>

      
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;configuration&gt;
<fo:block/>
&#160;&#160;&lt;settings&gt;
<fo:block/>
&#160;&#160;&#160;&#160;...
<fo:block/>
&#160;&#160;&#160;&#160;&lt;setting&#160;name="logImpl"&#160;value="LOG4J"/&gt;
<fo:block/>
&#160;&#160;&#160;&#160;...
<fo:block/>
&#160;&#160;&lt;/settings&gt;
<fo:block/>
&lt;/configuration&gt;
<fo:block/>
&#160;&#160;&#160;&#160;&#160;&#160;</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Valid values are SLF4J, LOG4J, LOG4J2, JDK_LOGGING, COMMONS_LOGGING, STDOUT_LOGGING, NO_LOGGING or
      a full qualified class name that implements 
<fo:inline font-family="monospace" font-size="10pt">org.apache.ibatis.logging.Log</fo:inline> and gets
      an string as a constructor parameter.
      </fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">You can also select the implementation by calling one of the following methods:
      </fo:block>

      
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">org.apache.ibatis.logging.LogFactory.useSlf4jLogging();
<fo:block/>
org.apache.ibatis.logging.LogFactory.useLog4JLogging();
<fo:block/>
org.apache.ibatis.logging.LogFactory.useLog4J2Logging();
<fo:block/>
org.apache.ibatis.logging.LogFactory.useJdkLogging();
<fo:block/>
org.apache.ibatis.logging.LogFactory.useCommonsLogging();
<fo:block/>
org.apache.ibatis.logging.LogFactory.useStdOutLogging();</fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">If you choose to call one of these methods, you should do so
        before calling any other MyBatis method. Also, these methods
        will only switch to the requested log implementation if that
        implementation is available on the runtime classpath. For example, if
        you try to select Log4J logging and Log4J is not available at runtime,
        then MyBatis will ignore the request to use Log4J and will use it's
        normal algorithm for discovering logging implementations.
      </fo:block>

      
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The specifics of SLF4J, Apache Commons Logging, Apache Log4J and the JDK
        Logging API are beyond the scope of this document. However the
        example configuration below should get you started. If you would like
        to know more about these frameworks, you can get more information from
        the following locations:
      </fo:block>

      

<fo:list-block start-indent="inherited-property-value(start-indent)" space-before.optimum="10pt" provisional-distance-between-starts="1em" provisional-label-separation="1em">
        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          
<fo:basic-link external-destination="http://www.slf4j.org/">
<fo:inline color="green">SLF4J</fo:inline></fo:basic-link>
        </fo:block>
</fo:list-item-body>
</fo:list-item>

        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          
<fo:basic-link external-destination="http://commons.apache.org/logging">
<fo:inline color="green">Apache Commons Logging</fo:inline></fo:basic-link>
        </fo:block>
</fo:list-item-body>
</fo:list-item>

        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          
<fo:basic-link external-destination="http://logging.apache.org/log4j/">
<fo:inline color="green">Apache Log4j 1.x and 2.x</fo:inline></fo:basic-link>
        </fo:block>
</fo:list-item-body>
</fo:list-item>

        
<fo:list-item start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em"><fo:list-item-label><fo:block>&#8226;</fo:block></fo:list-item-label>

<fo:list-item-body start-indent="inherited-property-value(start-indent) + 1em" space-before="0.15em" space-after="0.25em">
<fo:block>
          
<fo:basic-link external-destination="https://docs.oracle.com/javase/8/docs/technotes/guides/logging/overview.html">
<fo:inline color="green">JDK Logging API</fo:inline></fo:basic-link>
        </fo:block>
</fo:list-item-body>
</fo:list-item>

      </fo:list-block>

      

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" font-weight="bold" space-before="18pt" space-after="5pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">8.1.1   Logging Configuration</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">To see MyBatis logging statements you may enable logging on a
          package, a mapper fully qualified class name, a namespace
          o a fully qualified statement name.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Again, how you do this is dependent on the logging implementation
          in use. We'll show how to do it with Log4J. Configuring the
          logging services is simply a matter of including one or more extra
          configuration files (e.g. log4j.properties) and sometimes a new JAR
          file (e.g. log4j.jar). The following example configuration will
          configure full logging services using Log4J as a provider. There
          are 2 steps.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif"></fo:block>

        

<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">8.1.1.1   
          Step 1: Add the Log4J JAR file
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Because we are using Log4J, we will need to ensure its
          JAR file is available to our application. To use Log4J, you need to
          add the JAR file to your application classpath. You can download
          Log4J from the URL above.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">For web or enterprise applications you can add the 
<fo:inline font-family="monospace" font-size="10pt">log4j.jar</fo:inline> to
          your 
<fo:inline font-family="monospace" font-size="10pt">WEB-INF/lib</fo:inline> directory, or for a standalone application you can
          simply add it to the JVM 
<fo:inline font-family="monospace" font-size="10pt">-classpath</fo:inline> startup parameter.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif"></fo:block>

        </fo:block>


<fo:block font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">

<fo:block font-size="9.5pt" space-before="15pt" space-after="3pt" font-family="Helvetica,sans-serif" color="#000000" keep-with-next="always">8.1.1.2   
          Step 2: Configure Log4J
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Configuring Log4J is simple. Suppose you want to enable the log for this mapper:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">package&#160;org.mybatis.example;
<fo:block/>
public&#160;interface&#160;BlogMapper&#160;{
<fo:block/>
&#160;&#160;@Select("SELECT&#160;*&#160;FROM&#160;blog&#160;WHERE&#160;id&#160;=&#160;#{id}")
<fo:block/>
&#160;&#160;Blog&#160;selectBlog(int&#160;id);
<fo:block/>
}</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Create a file called 
<fo:inline font-family="monospace" font-size="10pt">log4j.properties</fo:inline>
        as shown below and place it in your classpath:
        </fo:block>

        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">#&#160;Global&#160;logging&#160;configuration
<fo:block/>
log4j.rootLogger=ERROR,&#160;stdout
<fo:block/>
#&#160;MyBatis&#160;logging&#160;configuration...
<fo:block/>
log4j.logger.org.mybatis.example.BlogMapper=TRACE
<fo:block/>
#&#160;Console&#160;output...
<fo:block/>
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
<fo:block/>
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
<fo:block/>
log4j.appender.stdout.layout.ConversionPattern=%5p&#160;[%t]&#160;-&#160;%m%n</fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          The above file will cause log4J to report detailed logging for
          
<fo:inline font-family="monospace" font-size="10pt">org.mybatis.example.BlogMapper</fo:inline>
          and just errors for the rest of the classes of your application.
        </fo:block>

        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">
          If you want to tune the logging at a finer level you can turn logging
          on for specific statements instead of the whole mapper file.
          The following line will enable logging just for the 
<fo:inline font-family="monospace" font-size="10pt">selectBlog</fo:inline>
          statement:
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">log4j.logger.org.mybatis.example.BlogMapper.selectBlog=TRACE</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">By the contrary you may want want to enable logging for a group of mappers.
        In that case you should add as a logger the root package where your mappers reside:</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">log4j.logger.org.mybatis.example=TRACE</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">There are queries that can return huge result sets. In that cases you may want to see the
        SQL statement but not the results. For that purpose SQL statements are logged at the DEBUG level
        (FINE in JDK logging) and results at the TRACE level (FINER in JDK logging), so in case
        you want to see the statement but not the result, set the level to DEBUG.
        </fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">log4j.logger.org.mybatis.example=DEBUG</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">But what about if you are not using mapper interfaces but mapper XML files like this one?
        </fo:block>


      
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">&lt;?xml&#160;version="1.0"&#160;encoding="UTF-8"&#160;?&gt;
<fo:block/>
&lt;!DOCTYPE&#160;mapper
<fo:block/>
&#160;&#160;PUBLIC&#160;"-//mybatis.org//DTD&#160;Mapper&#160;3.0//EN"
<fo:block/>
&#160;&#160;"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;
<fo:block/>
&lt;mapper&#160;namespace="org.mybatis.example.BlogMapper"&gt;
<fo:block/>
&#160;&#160;&lt;select&#160;id="selectBlog"&#160;resultType="Blog"&gt;
<fo:block/>
&#160;&#160;&#160;&#160;select&#160;*&#160;from&#160;Blog&#160;where&#160;id&#160;=&#160;#{id}
<fo:block/>
&#160;&#160;&lt;/select&gt;
<fo:block/>
&lt;/mapper&gt;</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">In that case you can enable logging for the whole XML file by adding a logger for the namespace as shown below:</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">log4j.logger.org.mybatis.example.BlogMapper=TRACE</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Or for an specific statement:</fo:block>


        
<fo:block color="black" border-style="solid" border-width="0.5pt" border-color="#454545" padding-before="0.25em" padding-after="0.25em" padding-start="0.25em" padding-end="0.25em" start-indent="inherited-property-value(start-indent) + 2.5em" end-indent="inherited-property-value(end-indent) + 3em" space-before="0.75em" space-after="1em" font-size="10pt" font-family="monospace" linefeed-treatment="preserve" wrap-option="no-wrap" keep-together="always" white-space-collapse="false">log4j.logger.org.mybatis.example.BlogMapper.selectBlog=TRACE</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">Yes, as you may have noticed, there is no difference in configuring logging for mapper interfaces or for XML mapper files.</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">NOTE If you are using SLF4J or Log4j 2 MyBatis will call it using the marker MYBATIS.</fo:block>


        
<fo:block space-before="3pt" space-after="6pt" font-size="11pt" line-height="12pt" white-space-collapse="true" font-family="Garamond,serif">The remaining configuration in the 
<fo:inline font-family="monospace" font-size="10pt">log4j.properties</fo:inline> file is used
          to configure the appenders, which is beyond the scope of this
          document. However, you can find more information at the Log4J
          website (URL above). Or, you could simply experiment with it to see
          what effects the different configuration options have.
        </fo:block>


      </fo:block>
</fo:block>

    </fo:block>

  
</fo:block></fo:flow></fo:page-sequence>
</fo:root>
